{"version":3,"sources":["components/copyright/Copyright.tsx","components/auth/Login/validation/LoginValidation.ts","components/utils/localStorage/LocalStorage.js","api/axios/axiosApi.ts","components/utils/notification/Snackbar.tsx","actions/user/authActions.js","actions/user/types.js","components/auth/Login/LoginComponent.tsx","components/auth/Login/SignupComponent.tsx","components/NotFound/NotFound.tsx","components/dashboard/Dashboard.tsx","components/common/Theme/Theme.jsx","actions/app/appActions.js","actions/app/types.js","components/header/optionsTray/OptionsTray.jsx","actions/products/productActions.js","actions/products/types.js","components/header/components/ProductSearch.tsx","components/header/Header.tsx","routes/protected/ProtectedRoutes.tsx","routes/public/PublicRoutes.tsx","components/utils/numbers/numbers.js","actions/cart/cartActions.js","actions/cart/types.js","components/common/Cards/product/ProductCard.tsx","components/common/Pagination/PaginationComponent.jsx","components/common/Button/ButtonComponent.tsx","components/common/CustomSelect/CustomSelect.jsx","components/dashboard/product/product-filter/ProductFilterComponent.jsx","components/common/Cards/product/Skeletons/ProductCardSkeleton.jsx","components/dashboard/product/product=search/ProductSearchComponent.tsx","components/dashboard/home/HomeComponent.tsx","components/common/Input/InputComponent.tsx","components/common/FileUploadButton/FileUploadButton.tsx","components/common/Checkbox/CheckboxComponent.tsx","components/common/DatePicker/DatePicker.tsx","components/common/Select/SelectComponent.tsx","components/utils/utils.js","components/common/ColorPicker/ColorPicker.jsx","components/common/FormBuilder/FormBuilder.jsx","components/dashboard/product/product-form/ProductForm.tsx","configs/Configs.js","components/common/Map/Map.jsx","components/dashboard/profile/profile-view/ProfileView.jsx","components/dashboard/profile/profile-form/ProfileForm.tsx","components/common/loader/Loader.tsx","components/dashboard/product/product-view/ProductView.tsx","components/dashboard/messages/MessageComponent.jsx","components/common/Cards/product/ProductCardDetail.tsx","components/dashboard/cart/Cart.jsx","components/dashboard/about/About.jsx","routes/Routes.tsx","reducers/productReducer.js","reducers/authReducer.js","reducers/appReducer.js","reducers/cartReducer.js","reducers/favoritesReducer.js","reducers/index.js","actions/favorites/types.js","store/store.js","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["Copyright","Typography","variant","color","align","Link","Date","getFullYear","ValidateEmail","email","test","validateForm","key","state","options","form","errors","errorMessage","isError","data","length","Object","values","filter","err","setItem","name","value","localStorage","removeItem","getItem","http","axios","create","baseURL","process","responseType","httpHeaders","isSecure","axiosApi","get","url","params","Promise","resolve","reject","headers","then","response","catch","post","put","patch","remove","delete","uploadFile","method","files","xhr","XMLHttpRequest","formData","FormData","append","onreadystatechange","readyState","console","log","status","open","send","msg","toast","success","info","error","defaultMessage","message","logout","dispatch","clear","type","setLoading","payload","Login","username","password","rememberMe","isSubmitting","touched","handleChange","e","target","checked","setState","prevState","loginError","handleSubmit","preventDefault","history","props","loginUser","push","auth","this","isLoggedin","isAuthorized","classes","submitButtonClass","submitting","submit","errorClass","isInvalid","Container","component","maxWidth","className","CssBaseline","paper","Avatar","avatar","noValidate","onSubmit","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","Grid","FormControlLabel","control","Checkbox","Button","disabled","container","item","xs","to","Box","mt","Component","LoginComponent","connect","Snackbar","user","token","JSON","stringify","finally","login","withStyles","marginTop","display","flexDirection","alignItems","backgroundColor","width","logging","SignupComponent","firstName","lastName","confirmPassword","snack","setTimeout","spacing","sm","justify","NotFound","Dashboard","Theme","useState","selectedTheme","setTheme","useDispatch","theme","useSelector","app","useEffect","document","body","classList","add","onClick","data-icon","data-inline","Navbar","children","NavItem","useHistory","cartItems","cart","setOpen","ClickAwayListener","onClickAway","path","Icon","icon","DropdownMenu","activeMenu","setActiveMenu","menuHeight","setMenuHeight","dropdownRef","useRef","calcHeight","el","height","offsetHeight","firstChild","clientHeight","DropdownItem","handleItemClick","goToMenu","leftIconComponent","leftIcon","rightIcon","current","style","ref","CSSTransition","in","timeout","classNames","unmountOnExit","onEnter","alt","src","image","OptionsTray","likeProduct","userId","prevData","page","a","newData","loves","_id","unlikeProduct","setFilterCondition","condition","filterKey","ProductSearch","React","title","setTitle","categories","setCategories","subCategory","selectedCategory","mainCategories","product","List","ListItem","toUpperCase","Collapse","map","catObj","ind","keys","subObj","useStyles","makeStyles","createStyles","list","fullList","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","breakpoints","up","searchIcon","padding","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","Header","toggle","settoggle","AppBar","Toolbar","IconButton","edge","cur","clsx","role","SwipeableDrawer","anchor","onClose","onOpen","iconName","index","Divider","ListItemIcon","ListItemText","primary","render","PublicRoutes","NumberWithCommas","val","toString","replace","addToCart","prodId","qty","price","description","quantity","ProductCard","isLoved","includes","Card","CardActionArea","CardMedia","brand","CardContent","CardActions","PaginationComponent","count","setPage","currentPage","Pagination","event","ButtonComponent","handlesubmit","size","variantType","classname","aria-label","CustomSelect","queryName","multiple","filterCondition","selected","setSelected","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","setWidth","handleClose","clientWidth","resizeEvent","window","addEventListener","removeEventListener","conditionData","changeFilter","selectedName","button","currentTarget","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","Boolean","slice","Math","max","MenuItem","indexOf","oldSelected","splice","pre","handleChangeMultiple","option","handleMenuItemClick","memo","attributes","category","sortItems","useMemo","ProductCardSkeleton","Skeleton","marginRight","ProductSearchComponent","searchResults","searchCount","isLoading","useParams","searchProducts","perPage","loadData","Array","fill","md","productData","lg","ceil","HomeComponent","InputComponent","handlechange","inputType","undefined","setdisplay","currency","setCurrency","inputProps","startAdornment","InputAdornment","isArray","dependency","InputLabelProps","shrink","InputProps","root","input","FileUploadButton","accept","htmlFor","round","split","formControl","CheckboxComponent","FormControl","MaterialUIPickers","format","KeyboardButtonProps","minWidth","SelectComponent","menuItems","InputLabel","Select","labelId","defaultValue","formatDate","date","moment","formatTime","formatSetDate","ColorPicker","handleSelect","copy","entries","aliceblue","antiquewhite","whitesmoke","darkred","crimson","red","midnightblue","mediumblue","dodgerblue","cyan","gold","goldenrod","yellow","darkgreen","lime","greenyellow","seagreen","springgreen","darkorange","chocolate","coral","purple","blueviolet","fuchsia","deeppink","hotpink","lightpink","black","dimgray","formName","buttonTitle","setdata","setTouched","setErrors","isTouched","setistouched","isValid","setOptions","defaultDerived","newState","forEach","defaultTouch","address","temp_address","join","permanent_address","addData","predata","preTouch","handleRedirect","update","newimage","prev","handleDateChange","utils","formclass","field","defaultForm","productForm","ProductForm","Configs","googleMaps","center","lat","lng","defaultZoom","WrappedMap","withScriptjs","withGoogleMap","storeData","defaultCenter","location","store","storeId","coordinates","ProfileView","loadingElement","googleMapURL","containerElement","mapElement","profileForm","ProfileForm","Loader","LinearProgress","ProductView","products","fetchProducts","handlePageChange","pageNumber","handlePageNumber","setData","imageurl","view","setView","columns","setColumns","desktopCols","rowData","editable","mobilecols","innerWidth","query","pageSize","res","totalCount","exportButton","isEditHidden","onRowAdd","onRowUpdate","oldData","dataUpdate","tableData","onRowDelete","dataDelete","MessageComponent","senderId","reciverId","recieverName","time","messages","users","runSocket","socket","on","emit","i","userid","selectUser","parse","io","msgContent","Moment","usrContent","Input","ProductCardDetail","productDetails","fetchDetails","gutterBottom","parseInt","Cart","direction","deleteCartItem","reduce","acc","About","Routes","exact","curriedProductReducer","produce","draft","action","allProducts","p","__id","subCategories","sub","selectedCategories","cat","subs","attr","prod","Set","filters","selectedMainCategory","initialState","isAuthenticated","progress","INITIAL_STATE","favoriteItems","combineReducers","find","favorite","middleware","thunk","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","createMuiTheme","MomentUtils","containerId","draggable","hostname","match","ReactDOM","StylesProvider","injectFirst","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b27ba502.chunk.js","sourcesContent":["import React from 'react';\r\nimport Link  from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Copyright:React.FC = () => {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\">\r\n          Copyright\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\nexport default Copyright;\r\n","const ValidateEmail = (email) => {\r\n  if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const validateForm = (key, state, options = {form:''}) => {\r\n  let errors = {\r\n    ...state.errors,\r\n    errorMessage: { ...state.errors.errorMessage },\r\n    isError: state.errors.isError,\r\n  };\r\n  switch (key) {\r\n    case 'username':\r\n      errors.errorMessage[key] =\r\n        state.data[key].length !== 0 ? '' : `${key} is required`;\r\n      break;\r\n    case 'email':\r\n      errors.errorMessage[key] = ValidateEmail(state.data[key])\r\n        ? ''\r\n        : 'invalid email';\r\n      break;\r\n    case 'password':\r\n      if(options.form && options.form   === 'login'){\r\n        errors.errorMessage[key] =\r\n        state.data[key].length !== 0 ? '' : `${key} is required`;\r\n        break;\r\n      }\r\n      errors.errorMessage[key] = state.data[key]\r\n        ? state.data[key].length <= 6\r\n          ? 'weak password'\r\n          : state.data['confirmPassword'].length > 6\r\n            ?\r\n             state.data['confirmPassword'] === state.data[key]\r\n            ? '' : 'passwords dont match'\r\n            : ''\r\n        : `${key} is required`\r\n      break;\r\n    case 'confirmPassword':\r\n      errors.errorMessage[key] = state.data[key]\r\n        ? state.data['password'] === state.data[key]\r\n          ? ''\r\n          : 'passwords dont match'\r\n        : `${key} is required`;\r\n      break;\r\n    default:\r\n      errors.errorMessage[key] = state.data[key] ? '' : `${key} is Required`;\r\n      break;\r\n  }\r\n  errors.isError =\r\n  Object.values(errors.errorMessage).filter((err) => err).length > 0;\r\n  return errors;\r\n};\r\n","export const setItem = (name,value) => {\r\n    localStorage.setItem(name,value)\r\n}\r\nexport const removeItem = (name) => {\r\n    localStorage.removeItem(name);\r\n}\r\n\r\nexport const getItem = (name) => {\r\n    return localStorage.getItem(name);\r\n}\r\n\r\nexport const clearStorage = () => {\r\n    localStorage.clear();\r\n}","import axios from 'axios';\r\nimport { getItem } from 'components/utils/localStorage/LocalStorage';\r\n\r\nconst http = axios.create({\r\n  // baseURL: 'http://localhost:5000/api' ,\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n  responseType: 'json',\r\n});\r\n\r\nconst httpHeaders = (isSecure) => {\r\n  let options = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  if (isSecure) {\r\n    options['Authorization'] = getItem('token');\r\n  }\r\n  return options;\r\n};\r\n\r\nconst get = (url, { params = {} } = {}, isSecure = false) => {\r\n  return new Promise((resolve, reject) => {\r\n    http\r\n      .get(url, {\r\n        headers: httpHeaders(isSecure),\r\n        params,\r\n      })\r\n      .then((response) => {\r\n        resolve(response.data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nconst post = (url, data = {}, { params = {} } = {}, isSecure) => {\r\n  return new Promise((resolve, reject) => {\r\n    http\r\n      .post(url, data, { headers: httpHeaders(isSecure), params })\r\n      .then((response) => {\r\n        resolve(response.data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err.response);\r\n      });\r\n  });\r\n};\r\n\r\nconst put = (url, data = {}, { params = {} } = {}, isSecure) => {\r\n  return new Promise((resolve, reject) => {\r\n    http\r\n      .put(url, data, { headers: httpHeaders(isSecure) })\r\n      .then((response) => {\r\n        resolve(response.data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err.response);\r\n      });\r\n  });\r\n};\r\n\r\nconst patch = (url, data = {}, { params = {} } = {}, isSecure) => {\r\n  return new Promise((resolve, reject) => {\r\n    http\r\n      .patch(url, data, { headers: httpHeaders(isSecure) })\r\n      .then((response) => {\r\n        resolve(response.data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err.response);\r\n      });\r\n  });\r\n};\r\n\r\nconst remove = (url, isSecure) => {\r\n  return new Promise((resolve, reject) => {\r\n    http\r\n      .delete(url, { headers: httpHeaders(isSecure) })\r\n      .then((response) => {\r\n        resolve(response.data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err.response);\r\n      });\r\n  });\r\n};\r\n\r\nconst uploadFile = (method, url, data, files) => {\r\n  return new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    const formData = new FormData();\r\n    if (files && files.length) {\r\n      formData.append('image', files[0], files[0].name);\r\n    }\r\n\r\n    for (let key in data) {\r\n      if (typeof data[key] === 'object') {\r\n        continue;\r\n      }\r\n      formData.append(key, data[key]);\r\n    }\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState === 4) {\r\n        console.log('req cycle compoleted', xhr.response);\r\n        if (xhr.status === 200) {\r\n          console.log('success');\r\n          resolve(xhr.response);\r\n        } else {\r\n          reject(xhr.response);\r\n        }\r\n      }\r\n    };\r\n    xhr.open(method, url, true);\r\n    xhr.send(formData);\r\n  });\r\n};\r\n\r\nexport const axiosApi = { get, post, put,patch, remove, uploadFile };\r\n","import {toast} from 'react-toastify';\r\n\r\nconst showSuccess = (msg:string) => {\r\n    toast.success(msg);\r\n}\r\nconst showInfo = (msg:string) => {\r\n    toast.info(msg);\r\n}\r\n\r\nconst showWarning = (msg:string) => {\r\n    toast.warn(msg);\r\n}\r\nconst showError = (msg:string) => {\r\n    toast.error(msg);\r\n}\r\n//handle error\r\nconst handleError = (error) => {\r\n    let defaultMessage = 'something went wrong'\r\n    if(error && error.message){\r\n        defaultMessage = error.message;\r\n    }\r\n    if(error && error.data && error.data.message){\r\n        defaultMessage = error.data.message;\r\n    }\r\n    showError(defaultMessage);\r\n\r\n}\r\n\r\nexport default {\r\n    showSuccess,showWarning,showInfo,handleError\r\n}","import { axiosApi } from 'api/axios/axiosApi'\r\nimport { clearStorage, setItem } from 'components/utils/localStorage/LocalStorage'\r\nimport Snackbar from 'components/utils/notification/Snackbar'\r\nimport {LOGIN_FALIURE,LOGIN_REQUEST,LOGIN_SUCCESS,LOGOUT,SET_IS_LOADING} from './types'\r\nexport const login = (data) => dispatch => {\r\n    return new Promise((resolve,reject) =>{\r\n        dispatch({\r\n            type:LOGIN_REQUEST\r\n        })\r\n        dispatch(setLoading(true))\r\n        axiosApi.post('/auth/login', data ,{},true)\r\n        .then(data => {\r\n            Snackbar.showSuccess(`${data.user.username} Logged in Successfully`)\r\n            setItem('token',data.token) \r\n            setItem('user',JSON.stringify(data.user))\r\n            dispatch({\r\n                type:LOGIN_SUCCESS,\r\n                payload:data.user\r\n            })\r\n            resolve('success')\r\n        })\r\n        .catch(err => {\r\n            Snackbar.handleError(err.data);\r\n            dispatch({\r\n                type:LOGIN_FALIURE,\r\n                payload:err.data.message\r\n            })\r\n            reject('error');\r\n        })\r\n        .finally(() => {\r\n            dispatch(setLoading(false))\r\n        })\r\n    })\r\n}\r\n\r\n\r\n// const updateUser = (data) => dispatch => {\r\n//     //todo\r\n// }\r\n\r\nexport const logout = () => dispatch => {\r\n    clearStorage()\r\n    dispatch({type:LOGOUT})\r\n}\r\n\r\nconst setLoading = (payload) => ({\r\n    type: SET_IS_LOADING,\r\n    payload,\r\n  });\r\n\r\n\r\n","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FALIURE = 'LOGIN_FALIURE';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const SET_IS_LOADING = 'SET_IS_LOADING';","import React, { Component } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Link } from 'react-router-dom';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Copyright from './../../copyright/Copyright';\r\nimport { validateForm } from './validation/LoginValidation';\r\nimport './LoginComponent.scss';\r\nimport { IErrorState, IOptionsState } from './../interfaces/Interfaces';\r\nimport {\r\n  setItem,\r\n  removeItem,\r\n  getItem,\r\n} from 'components/utils/localStorage/LocalStorage';\r\nimport { connect } from 'react-redux';\r\nimport { login } from './../../../actions/user/authActions';\r\n\r\nconst useStyles: any = () => ({\r\n  paper: {\r\n    marginTop: '128px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: '4px',\r\n    backgroundColor: 'white',\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: '4px',\r\n  },\r\n  submit: {\r\n    margin: '8px 0 4px',\r\n  },\r\n  logging: {\r\n    margin: '8px 0 4px',\r\n    backgroundColor: 'green',\r\n  },\r\n});\r\ninterface IProps {\r\n  classes: any;\r\n  history: any;\r\n  location: any;\r\n  snack: {\r\n    message: string;\r\n    varient: string;\r\n    timeout: number;\r\n    open: boolean;\r\n  };\r\n  match: any;\r\n  loginUser: (data: IDataState) => any;\r\n  auth: any;\r\n}\r\n\r\ninterface IDataState {\r\n  username: String;\r\n  password: String;\r\n}\r\ninterface IState {\r\n  errors: IErrorState;\r\n  data: IDataState;\r\n  options: IOptionsState;\r\n  touched: ITouchState;\r\n}\r\n\r\ninterface ITouchState {\r\n  username: boolean;\r\n  password: boolean;\r\n}\r\nexport class Login extends Component<IProps, IState> {\r\n  state: IState = {\r\n    data: {\r\n      username: '',\r\n      password: '',\r\n    },\r\n    errors: {\r\n      errorMessage: {},\r\n      isError: false,\r\n    },\r\n    options: {\r\n      rememberMe: false,\r\n      isSubmitting: false,\r\n    },\r\n    touched: {\r\n      username: false,\r\n      password: false,\r\n    },\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    const {auth:{isLoggedin,isAuthorized},history} = this.props;\r\n    if(isLoggedin && isAuthorized){\r\n      history.push('/');\r\n    }\r\n    const username = getItem('username') || '';\r\n    const rememberMe = getItem('rememberMe') === 'true' ? true : false;\r\n    if (rememberMe && username) {\r\n      this.setState((prevState) => ({\r\n        ...prevState,\r\n        data: { ...prevState.data, username },\r\n        options: {\r\n          ...prevState.options,\r\n          rememberMe,\r\n        },\r\n      }));\r\n    }\r\n  }\r\n\r\n\r\n  handleChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n    //remember me\r\n    const { name, value, checked }: any = e.target;\r\n    if (name === 'rememberMe') {\r\n      this.setState(\r\n        (prevState) => ({\r\n          ...prevState,\r\n          options: {\r\n            ...prevState.options,\r\n            [name]: checked,\r\n          },\r\n        }),\r\n        () => {\r\n          if (this.state.options.rememberMe) {\r\n            setItem('rememberMe', this.state.options.rememberMe);\r\n            if (this.state.data.username) {\r\n              setItem('username', this.state.data.username);\r\n            }\r\n            return;\r\n          }\r\n          removeItem('username');\r\n          removeItem('rememberMe');\r\n        },\r\n      );\r\n      return;\r\n    }\r\n    this.setState(\r\n      (prevState) => ({\r\n        ...prevState,\r\n        data: { ...prevState.data, [name]: value },\r\n      }),\r\n      () => {\r\n        let errors = validateForm(name, this.state, { form: 'login' });\r\n        this.setState((prevState) => ({\r\n          ...prevState,\r\n          errors: {\r\n            ...prevState.errors,\r\n            errorMessage: { ...errors.errorMessage, loginError: '' },\r\n            isError: errors.isError,\r\n          },\r\n          touched: { ...prevState.touched, [name]: true },\r\n        }));\r\n      },\r\n    );\r\n  };\r\n\r\n  handleSubmit =  (e) => {\r\n    e.preventDefault();\r\n    const { history } = this.props;\r\n    this.setState(\r\n      (prevState) => ({\r\n        ...prevState,\r\n        options: {\r\n          ...prevState.options,\r\n          isSubmitting: true,\r\n        },\r\n      }),\r\n        () => {\r\n          this.props.loginUser(this.state.data)\r\n          .then(data => {\r\n                history.push(`/dashboard`)\r\n          })\r\n          .catch(err =>{\r\n            this.setState({\r\n                ...this.state,\r\n                errors:{\r\n                  ...this.state.errors,\r\n                  errorMessage:{\r\n                     ...this.state.errors.errorMessage,\r\n                     loginError:this.props.auth.errorMessage}}})\r\n          })\r\n        }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      options: { rememberMe },\r\n      errors: { isError, errorMessage },\r\n      touched,\r\n    } = this.state;\r\n    const { isSubmitting } = this.props.auth;\r\n    const submitButtonClass = isSubmitting\r\n      ? classes.submitting\r\n      : classes.submit;\r\n    const errorClass = isError ? '-error' : null;\r\n    const isInvalid =\r\n      isError ||\r\n      Object.values(touched).filter((data) => data === false).length !== 0;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\" className='container'>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form\r\n            className={classes.form}\r\n            noValidate\r\n            onSubmit={this.handleSubmit}\r\n          >\r\n            <TextField\r\n              className={`form-field form-field${\r\n                errorMessage.username !== '' ? '-error' : null\r\n              }`}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              autoComplete=\"username\"\r\n              autoFocus\r\n              onChange={(e: any) => this.handleChange(e)}\r\n            />\r\n            <Grid className=\"error-span\">\r\n              {errorMessage.username && errorMessage.username}\r\n            </Grid>\r\n            <TextField\r\n              className={`form-field form-field${errorClass}`}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(e: any) => this.handleChange(e)}\r\n            />\r\n            <Grid className=\"error-span\">\r\n              {errorMessage.password} {errorMessage.loginError}\r\n            </Grid>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  name=\"rememberMe\"\r\n                  onChange={(e: any) => this.handleChange(e)}\r\n                  value=\"remember\"\r\n                  color=\"primary\"\r\n                  checked={rememberMe}\r\n                />\r\n              }\r\n              label=\"Remember me\"\r\n            />\r\n            {isSubmitting ? (\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={submitButtonClass}\r\n                disabled={isSubmitting}\r\n              >\r\n                Logging in...\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={submitButtonClass}\r\n                disabled={isInvalid}\r\n              >\r\n                Sign In\r\n              </Button>\r\n            )}\r\n            <Grid container>\r\n              <Grid item xs = {6} >\r\n                <Link to=\"/forgot\">\r\n                  <Typography variant=\"body2\" id=\"forgot-link\">\r\n                    Forgot password?\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n              <Grid item xs = {6}>\r\n                <Link to=\"/signup\">\r\n                  <Typography variant=\"body2\" id=\"forgot-link\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nconst mapDIspatchToProps = (dispatch) => ({\r\n  loginUser: (data) => dispatch(login(data)),\r\n});\r\n\r\nexport const LoginComponent = connect(\r\n  mapStateToProps,\r\n  mapDIspatchToProps,\r\n)(withStyles(useStyles)(Login));\r\n","import React, { Component } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Copyright from './../../copyright/Copyright';\r\nimport { validateForm } from './validation/LoginValidation';\r\nimport { IErrorState, IOptionsState } from './../interfaces/Interfaces';\r\nimport {Link} from 'react-router-dom';\r\nimport { axiosApi } from 'api/axios/axiosApi';\r\nimport snack from './../../utils/notification/Snackbar';\r\n\r\ninterface IProps {\r\n  classes: any;\r\n  history:any;\r\n}\r\n\r\ninterface IDataState {\r\n  firstName: String;\r\n  lastName: String;\r\n  username: String;\r\n  email: String;\r\n  password: String;\r\n  confirmPassword: String;\r\n}\r\n\r\ninterface ITouchState {\r\n  firstName: boolean;\r\n  lastName: boolean;\r\n  username: boolean;\r\n  email: boolean;\r\n  password: boolean;\r\n  confirmPassword: boolean;\r\n}\r\n\r\ninterface IState {\r\n  errors: IErrorState;\r\n  data: IDataState;\r\n  options: IOptionsState;\r\n  touched:ITouchState;\r\n}\r\n\r\nconst useStyles: any = () => ({\r\n  paper: {\r\n    marginTop: '128px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: '4px',\r\n    backgroundColor: 'white',\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: '4px',\r\n  },\r\n  submit: {\r\n    margin: '8px 0 4px',\r\n  },\r\n});\r\nclass SignupComponent extends Component<IProps, IState> {\r\n  state: IState = {\r\n    data: {\r\n      username: '',\r\n      password: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      confirmPassword: '',\r\n    },\r\n    errors: {\r\n      errorMessage: {},\r\n      isError: false,\r\n    },\r\n    options: {\r\n      rememberMe: false,\r\n      isSubmitting: false,\r\n    },\r\n    touched:{\r\n      username:false,\r\n      password:false,\r\n      firstName:false,\r\n      lastName:false,\r\n      email:false,\r\n      confirmPassword:false,\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n  }\r\n\r\n  handleChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n    const { name, value }: any = e.target;\r\n    this.setState(\r\n      (prevState) => ({\r\n        ...prevState,\r\n        data: { ...prevState.data, [name]: value },\r\n      }),\r\n      () => {\r\n        let errors = validateForm(name,this.state);\r\n        this.setState((prevState) => ({\r\n          ...prevState,\r\n          errors: {\r\n            ...prevState.errors,\r\n            errorMessage: errors.errorMessage,\r\n            isError: errors.isError,\r\n          },\r\n          touched: { ...prevState.touched,\r\n            [name]: true }\r\n        }));\r\n      },\r\n    );\r\n  };\r\n\r\n  handleSubmit = (e:React.FormEvent<HTMLInputElement>) => {\r\n    e.preventDefault();\r\n    const {email,password,username,firstName,lastName} = this.state.data\r\n    const {history} = this.props;\r\n    const data = {\r\n      name:firstName +' '+lastName,\r\n      username,\r\n      email,\r\n      password,\r\n    }\r\n\r\n    this.setState(\r\n      (prevState) => ({\r\n        ...prevState,\r\n        options:{\r\n          ...prevState.options,\r\n          isSubmitting: true\r\n        }   \r\n      }),\r\n      () => {\r\n        axiosApi.post('/auth/register',data,{},true)\r\n        .then((data:any) => {\r\n            snack.showSuccess(data.username + 'Registered Successfully') \r\n            setTimeout(() => {\r\n              history.push(`/login`)\r\n            },1000)  \r\n        })\r\n      .catch(err => {\r\n          snack.handleError(err);\r\n          this.setState({...this.state,\r\n            errors:{\r\n              ...this.state.errors,\r\n              errorMessage:{\r\n                ...this.state.errors.errorMessage,\r\n                loginError:err.message}}})\r\n      })\r\n      .finally(() => {\r\n        this.setState({\r\n          ...this.state,\r\n          options:{...this.state.options,isSubmitting:false}})   \r\n         \r\n      }) \r\n      },\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      options: { isSubmitting},\r\n      errors: { isError, errorMessage },\r\n      touched,\r\n    } = this.state;\r\n    const submitButtonClass = isSubmitting\r\n      ? classes.submitting\r\n      : classes.submit;\r\n    const isInvalid = isError || Object.values(touched).filter(data => data === false).length !== 0;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\" className='container'>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit = {(e:any ) => this.handleSubmit(e)}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"fname\"\r\n                  name=\"firstName\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  onChange={(e: any) => this.handleChange(e)}\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                />\r\n                <Grid item className=\"error-span\">\r\n                  {errorMessage.firstName}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  onChange={(e: any) => this.handleChange(e)}\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  autoComplete=\"lname\"\r\n                />\r\n                <Grid item  className=\"error-span\">\r\n                  {errorMessage.lastName}\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  onChange={(e: any) => this.handleChange(e)}\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                />\r\n                <Grid item className=\"error-span\">\r\n                  {errorMessage.email}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  onChange={(e: any) => this.handleChange(e)}\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  autoComplete=\"username\"\r\n                />\r\n                <Grid item className=\"error-span\">\r\n                  {errorMessage.username}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  onChange={(e: any) => this.handleChange(e)}\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                />\r\n                <Grid item className=\"error-span\">\r\n                  {errorMessage.password}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  onChange={(e: any) => this.handleChange(e)}\r\n                  fullWidth\r\n                  name=\"confirmPassword\"\r\n                  label=\"Confirm Password\"\r\n                  type=\"password\"\r\n                  id=\"confirmPassword\"\r\n                  autoComplete=\"current-password\"\r\n                />\r\n                <Grid item className=\"error-span\">\r\n                  {errorMessage.confirmPassword}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\r\n                  }\r\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            {isSubmitting ?\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={submitButtonClass}\r\n              disabled={isSubmitting}>\r\n              Signing up...\r\n            </Button>\r\n            :<Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={submitButtonClass}\r\n              disabled={isInvalid}\r\n            >\r\n               Sign Up\r\n            </Button>\r\n            }\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link to=\"/login\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={5}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(useStyles)(SignupComponent);\r\n","import React from 'react'\r\nimport './NotFound.scss';\r\nimport { Typography } from '@material-ui/core';\r\nconst NotFound = () => {\r\n    return (\r\n        <div className ='not-found-container'>\r\n            <Typography variant = \"h3\">\r\n                404 not found\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React, { Component } from 'react';\r\nimport './Dashboard.scss';\r\ninterface IProps {\r\n  history: any;\r\n  match: any;\r\n  location: any;\r\n}\r\n\r\ninterface IState {}\r\n\r\nexport default class Dashboard extends Component<IProps, IState> {\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <div className=\"dashboard wrapper\">\r\n          <div className = 'navigation container'>\r\n              navigation bar\r\n          </div>\r\n        <div className = 'dash-item container'>dash1</div>\r\n        <div className = 'dash-item container'>dash2</div>\r\n        <div className = 'dash-item container'>dash3</div>\r\n        <div className = 'dash-item container'>dash4</div>\r\n        <div className = 'dash-item container '>dash5</div>\r\n        <div className = 'dash-item container '>dash6</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toggleTheme } from 'actions/app/appActions';\r\nimport './ThemeMode.scss';\r\n\r\nfunction Theme() {\r\n  const [selectedTheme, setTheme] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const theme = useSelector((state) => state.app.theme);\r\n  useEffect(() => {\r\n    const initTheme = () => {\r\n        if(theme === 'dark'){\r\n            setTheme(true);\r\n        }\r\n    };\r\n    initTheme();\r\n  }, [theme]);\r\n\r\n  useEffect(() => {\r\n    const switchTheme = () => {\r\n      document.body.classList.add(theme);\r\n    };\r\n    switchTheme();\r\n  }, [theme]);\r\n\r\n  const handletoggle = (e) => {\r\n    const {checked} = e.target;\r\n    setTheme(checked)\r\n    document.body.classList.remove(theme);\r\n    dispatch(toggleTheme());\r\n  };\r\n  return (\r\n    <label className = 'toggle-label'>\r\n      <input\r\n        className=\"toggle-checkbox\"\r\n        type=\"checkbox\"\r\n        onClick={handletoggle}\r\n        onChange = {() => {}}\r\n        checked = {selectedTheme}\r\n      ></input>\r\n      <div className=\"toggle-slot\">\r\n        <div className=\"sun-icon-wrapper\">\r\n          <div\r\n            className=\"iconify sun-icon\"\r\n            data-icon=\"feather-sun\"\r\n            data-inline=\"false\"\r\n          ></div>\r\n        </div>\r\n        <div className=\"toggle-button\"></div>\r\n        <div className=\"moon-icon-wrapper\">\r\n          <div\r\n            className=\"iconify moon-icon\"\r\n            data-icon=\"feather-moon\"\r\n            data-inline=\"false\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    </label>\r\n  );\r\n}\r\nexport default Theme;\r\n","import { SET_PROGRESS, TOGGLE_THEME } from \"./types\"\r\n\r\nexport const setProgress = (val) => dispatch => {\r\n    dispatch({\r\n        type:SET_PROGRESS,\r\n        payload:val\r\n    })\r\n}\r\nexport const toggleTheme = () => dispatch => {\r\n    dispatch({\r\n        type:TOGGLE_THEME\r\n    })\r\n}\r\n","export const SET_PROGRESS = 'SET_PROGRESS';\r\nexport const TOGGLE_THEME = 'TOGGLE_THEME';","import React, { useState, useEffect, useRef } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { Avatar, Icon, Typography } from '@material-ui/core';\r\nimport './OptionsTray.scss';\r\nimport { logout } from 'actions/user/authActions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Theme from 'components/common/Theme/Theme';\r\nfunction OptionsTray(props) {\r\n  \r\n  return (\r\n    <Navbar>\r\n      <NavItem icon={'favorite_border'} path = {'/favorites'}/>\r\n      <NavItem icon={'shopping_cart'} path = {'/cart'}/>\r\n      <NavItem icon={'person'}>\r\n        <DropdownMenu></DropdownMenu>\r\n      </NavItem>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <ul className=\"navbar-nav\">{props.children}</ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nfunction NavItem(props) {\r\n  const history = useHistory();\r\n  const cartItems = useSelector(state => state.cart.cartItems)\r\n  function handleNavigation(path) {\r\n    history.push(path);\r\n  }\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <ClickAwayListener onClickAway={() => setOpen(false)}>\r\n    <li className=\"nav-item\">\r\n      <button className=\"icon-button\" onClick={() => props.path ? handleNavigation(props.path):setOpen(!open)}>\r\n        <Icon>{props.icon}</Icon>\r\n      </button>\r\n      {props.path ==='/cart' && cartItems.length ?\r\n                <span className = \"cart-count\">{cartItems.length}</span> \r\n                :null\r\n      }      \r\n      {open && props.children}\r\n    </li>\r\n      </ClickAwayListener>\r\n  );\r\n}\r\n\r\nfunction DropdownMenu(props) {\r\n  const [activeMenu, setActiveMenu] = useState('main');\r\n  const [menuHeight, setMenuHeight] = useState(null);\r\n  const dropdownRef = useRef(null);\r\n  const history = useHistory();\r\n  const imageSrc = process.env.REACT_APP_IMAGE_URL;\r\n  const auth = useSelector(state => state.auth)\r\n const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setMenuHeight(dropdownRef.current?.firstChild.offsetHeight + 50);\r\n  }, []);\r\n\r\n  function calcHeight(el) {\r\n    const height = el.offsetHeight + el.firstChild.clientHeight;\r\n    setMenuHeight(height);\r\n  }\r\n\r\n  function handleLogout() {\r\n    dispatch(logout());\r\n    history.push('/login');\r\n  }\r\n\r\n  function handleNavigation(path) {\r\n    history.push(path);\r\n  }\r\n\r\n  function DropdownItem(props) {\r\n    return (\r\n      <span\r\n        className=\"menu-item\"\r\n        onClick={() =>\r\n          props.handleItemClick\r\n          ? props.handleItemClick()\r\n          : props.goToMenu && setActiveMenu(props.goToMenu)\r\n        }\r\n        >\r\n        {props.leftIconComponent ? (\r\n          <span className=\"icon-button\">\r\n            <span className=\"icon-left icon\">{props.leftIconComponent}</span>\r\n          </span>\r\n        ) : (\r\n          <span className=\"icon-button\">\r\n            <Icon className=\"icon-left\">{props.leftIcon}</Icon>\r\n          </span>\r\n        )}\r\n        {props.label && props.label}\r\n        {props.children}\r\n        <span className=\"icon-right\">\r\n          <Icon>{props.rightIcon}</Icon>\r\n        </span>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"dropdown\" style={{ height: menuHeight }} ref={dropdownRef}>\r\n      <CSSTransition\r\n        in={activeMenu === 'main'}\r\n        timeout={500}\r\n        classNames=\"menu-primary\"\r\n        unmountOnExit\r\n        onEnter={calcHeight}\r\n      >\r\n        <div className=\"menu\">\r\n          <DropdownItem\r\n            handleItemClick={() => handleNavigation('/profile')}\r\n            leftIconComponent={\r\n              <Avatar\r\n                alt={auth && auth.user.username}\r\n                src={`${imageSrc}/${auth && auth.user.image}`}\r\n                width={'20px'}\r\n                height={'20px'}\r\n              />\r\n            }\r\n          >\r\n            <span>\r\n              <Typography variant=\"h6\">{auth && auth.user.username}</Typography>\r\n              See your Profile\r\n            </span>\r\n          </DropdownItem>\r\n          <DropdownItem\r\n            leftIcon={'settings'}\r\n            rightIcon={'chevron_right'}\r\n            goToMenu=\"settings\"\r\n          >\r\n            Settings\r\n          </DropdownItem>\r\n          <DropdownItem\r\n            leftIcon={'brightness_medium'}\r\n            rightIcon={'chevron_right'}\r\n            goToMenu=\"displaySettings\"\r\n          >\r\n            Display Preferences\r\n          </DropdownItem>\r\n          <DropdownItem handleItemClick={handleLogout} leftIcon=\"logout\">\r\n            Logout\r\n          </DropdownItem>\r\n         </div>\r\n      </CSSTransition>\r\n\r\n      <CSSTransition\r\n        in={activeMenu === 'settings'}\r\n        timeout={500}\r\n        classNames=\"menu-secondary\"\r\n        unmountOnExit\r\n        onEnter={calcHeight}\r\n      >\r\n        <div className=\"menu\">\r\n          <DropdownItem goToMenu=\"main\" leftIcon={'chevron_left'}>\r\n            <h2>Profile</h2>\r\n          </DropdownItem>\r\n          <DropdownItem leftIcon={'settings'}>Setting 1</DropdownItem>\r\n          <DropdownItem leftIcon={'settings'}>Setting 2</DropdownItem>\r\n          <DropdownItem leftIcon={'settings'}>Setting 3</DropdownItem>\r\n          <DropdownItem leftIcon={'settings'}>Setting 4</DropdownItem>\r\n         \r\n        </div>\r\n      </CSSTransition>\r\n      <CSSTransition\r\n        in={activeMenu === 'displaySettings'}\r\n        timeout={500}\r\n        classNames=\"menu-secondary\"\r\n        unmountOnExit\r\n        onEnter={calcHeight}\r\n      >\r\n        <div className=\"menu\">\r\n          <DropdownItem goToMenu=\"main\" leftIcon={'chevron_left'}>\r\n            <h2>Profile</h2>\r\n          </DropdownItem>\r\n          <DropdownItem leftIcon={'settings'} label = 'Toggle Theme'><Theme/></DropdownItem>\r\n        </div>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   auth: state.auth,\r\n// });\r\n\r\n\r\nexport default (OptionsTray);\r\n","import { axiosApi } from 'api/axios/axiosApi';\r\nimport Snackbar from 'components/utils/notification/Snackbar';\r\nimport {\r\n  FETCH_CATEGORIES,\r\n  FETCH_SUBCATEGORIES,\r\n  FETCH_PRODUCTS,\r\n  FETCH_SEARCH_PRODUCTS,\r\n  SEARCH_PRODUCTS_ERROR,\r\n  FETCH_PRODUCTS_ERROR,\r\n  SET_IS_LOADING,\r\n  SET_PAGE_NUMBER,\r\n  SET_FILTER_CONDITION,\r\n  ADD_PRODUCT,\r\n  UPDATE_PRODUCT,\r\n  DELETE_PRODUCT,\r\n  SET_PRODUCT_ERROR,\r\n  FETCH_ATTRIBUTES,\r\n  FETCH_PRODUCT_DETAILS,\r\n  FETCH_ALL_PRODUCTS,\r\n  LIKE_PRODUCT,\r\n  UNLIKE_PRODUCT\r\n} from './types';\r\n\r\nexport const fetchDetails = (id) => async(dispatch) => {\r\n  try{\r\n    dispatch(setLoading(true))\r\n    const data = await axiosApi.get(`/product/details/${id}`)\r\n    dispatch({type:FETCH_PRODUCT_DETAILS,payload:data})\r\n  }\r\n  catch (err) {\r\n    \r\n  }\r\n  finally{\r\n    dispatch(setLoading(false))\r\n  }\r\n}\r\n\r\nexport const fetchProducts = (perPage = 20, currentPage = 1) => (dispatch) => {\r\n  dispatch(setLoading(true));\r\n  axiosApi\r\n    .get(\r\n      '/product',\r\n      {\r\n        params: {\r\n          perPage,\r\n          currentPage,\r\n        },\r\n      },\r\n      true,\r\n    )\r\n    // axiosApi.get('/product',{params:{currentPage:pageNumber,perPage:pageSize}},true)\r\n    .then((data) => {\r\n      dispatch({\r\n        type: FETCH_PRODUCTS,\r\n        payload: data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      Snackbar.handleError(err);\r\n      dispatch({ type: FETCH_PRODUCTS_ERROR, payload: err });\r\n    })\r\n    .finally(() => {\r\n      dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\nexport const addProduct = (product,isSecure) => async(dispatch) =>{\r\n  // return new Promise((resolve,reject) => async(dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const data = await axiosApi.post('/product', product, isSecure);\r\n      dispatch({ type: ADD_PRODUCT, payload: data });\r\n      // resolve(data)\r\n    } catch (err) {\r\n      Snackbar.handleError(err);\r\n      // reject(err);\r\n    } finally {\r\n      dispatch(setLoading(false));\r\n    }\r\n  // })\r\n};\r\n\r\nexport const updateProduct = (product, isSecure) => async(dispatch) => {\r\n  // return new Promise((resolve,reject) => async(dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const data = await axiosApi.put(`/product/${product._id}`, product, isSecure);\r\n    dispatch({ type: UPDATE_PRODUCT, payload: data });\r\n    // resolve(data)\r\n  } catch (err) {\r\n    Snackbar.handleError(err);\r\n    // reject(err);\r\n  } finally {\r\n    dispatch(setLoading(false));\r\n  }\r\n// })\r\n};\r\n\r\nexport const deleteProduct = (id, isSecure) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const data = await axiosApi.delete(`/product/${id}`,{}, isSecure);\r\n    dispatch({ type: DELETE_PRODUCT, payload: data });\r\n  } catch (err) {\r\n    Snackbar.handleError(err);\r\n  } finally {\r\n    dispatch(setLoading(false));\r\n  }\r\n};\r\n\r\nexport const likeProduct = (userId,prevData, isSecure,page = '') => async (dispatch) => {\r\n  const newData = {...prevData,loves:[...prevData.loves,userId]};\r\n  dispatch({ type: LIKE_PRODUCT, payload: newData});\r\n  if(page == 'productDetails'){\r\n    //can cause problem after adding projection todo\r\n    dispatch({type:FETCH_PRODUCT_DETAILS,payload:newData})\r\n  }\r\n  try {\r\n    const data = await axiosApi.patch(`/product/like`,{_id:prevData._id},{}, isSecure);\r\n    dispatch({ type: LIKE_PRODUCT, payload: data });\r\n    if(page == 'productDetails'){\r\n      dispatch({type:FETCH_PRODUCT_DETAILS,payload:data})\r\n    }\r\n    Snackbar.showInfo(`${data.name} Added to Favorites`)\r\n  } catch (err) {\r\n    dispatch({ type: LIKE_PRODUCT, payload: prevData });\r\n    if(page == 'productDetails'){\r\n      dispatch({type:FETCH_PRODUCT_DETAILS,payload:prevData})\r\n    }\r\n  } finally {\r\n  }\r\n};\r\n\r\nexport const unlikeProduct = (userId,prevData,isSecure,page = '') => async (dispatch) => {\r\n  const newData = {...prevData,loves:[...prevData.loves.filter(id => id!==userId)]};\r\n  dispatch({ type: UNLIKE_PRODUCT, payload: newData});\r\n  if(page == 'productDetails'){\r\n    //can cause problem after adding projection todo\r\n    dispatch({type:FETCH_PRODUCT_DETAILS,payload:newData})\r\n  }\r\n  try {\r\n    const data = await axiosApi.patch(`/product/unlike`,{_id:prevData._id},{}, isSecure);\r\n    dispatch({ type: UNLIKE_PRODUCT, payload: data });\r\n    if(page == 'productDetails'){\r\n      dispatch({type:FETCH_PRODUCT_DETAILS,payload:data})\r\n    }\r\n  } catch (err) {\r\n    dispatch({ type: UNLIKE_PRODUCT, payload: prevData});\r\n    if(page == 'productDetails'){\r\n      dispatch({type:FETCH_PRODUCT_DETAILS,payload:prevData})\r\n    }\r\n  } finally {\r\n  }\r\n};\r\n\r\n\r\nexport const searchProducts = (conditionData = {},options = {}) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    for (let key in conditionData) {\r\n      if (conditionData[key].length === 0) {\r\n        delete conditionData[key];\r\n      }\r\n    }\r\n    const data = await axiosApi.post(\r\n      '/product/search',\r\n      conditionData,\r\n      {params: {\r\n        ...options\r\n      },},\r\n      false,\r\n    );\r\n    dispatch({ type: FETCH_SEARCH_PRODUCTS, payload: data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: SEARCH_PRODUCTS_ERROR,\r\n      payload: err,\r\n    });\r\n  } finally {\r\n    dispatch(setLoading(false));\r\n  }\r\n};\r\n\r\nexport const fetchAllProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const data = await axiosApi.post(\r\n      '/product/search',\r\n      {},\r\n      {},\r\n      false,\r\n    );\r\n    dispatch({ type: FETCH_ALL_PRODUCTS, payload: data });\r\n    dispatch({type:FETCH_ATTRIBUTES});\r\n  } catch (err) {\r\n    dispatch({\r\n      type: SEARCH_PRODUCTS_ERROR,\r\n      payload: err,\r\n    });\r\n  } finally {\r\n    dispatch(setLoading(false));\r\n  }\r\n};\r\n\r\nexport const setFilterCondition = (key,condition,filterKey) => ({\r\n  type: SET_FILTER_CONDITION,\r\n  payload:{key,condition,filterKey}\r\n});\r\n\r\nexport const fetchCategories = () => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const data = await axiosApi.get('/product/categories', {}, {}, false);\r\n    dispatch({ type: FETCH_CATEGORIES, payload: data });\r\n  } catch (err) {\r\n    Snackbar.handleError(err);\r\n  } finally {\r\n    dispatch(setLoading(false));\r\n  }\r\n};\r\n\r\nexport const fetchSubCategories = () => ({ type: FETCH_SUBCATEGORIES });\r\nexport const fetchAttributes =() => (dispatch) => dispatch({type:FETCH_ATTRIBUTES});\r\nconst setLoading = (payload) => ({\r\n  type: SET_IS_LOADING,\r\n  payload,\r\n});\r\n\r\nexport const handlePageNumber = (pageNumber) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_PAGE_NUMBER,\r\n    payload: pageNumber,\r\n  });\r\n};\r\n\r\nexport const setProductError = (err) => dispatch => {\r\n  dispatch({\r\n    type:SET_PRODUCT_ERROR,\r\n    payload:err\r\n  })\r\n}\r\n","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\r\nexport const FETCH_SEARCH_PRODUCTS = 'SEARCH_PRODUCTS';\r\nexport const FETCH_PRODUCTS_ERROR = 'FETCH_PRODUCTS';\r\nexport const SEARCH_PRODUCTS_ERROR = \"SEARCH_PRODUCTS_ERROR\"\r\nexport const SET_IS_LOADING = 'SET_IS_LOADING';\r\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\r\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT';\r\nexport const SET_PRODUCT_ERROR = 'SET_PRODUCT_ERROR';\r\nexport const SET_PAGE_NUMBER = 'SET_PAGE_NUMBER';\r\n\r\n/* user activity */\r\nexport const LIKE_PRODUCT = 'LIKE_PRODUCT';\r\nexport const UNLIKE_PRODUCT = 'UNLIKE_PRODUCT';\r\n\r\n\r\nexport const FETCH_CATEGORIES = 'FETCH_CATEGORIES';\r\nexport const FETCH_SUBCATEGORIES = 'FETCH_SUBCATEGORIES';\r\n// export const SET_SELECTED_CATEGORIES = 'SET_SELECTED_CATEGORIES';\r\n// export const SET_SELECTED_SUBCATEGORIES = 'SET_SELECTED_SUBCATEGORIES';\r\nexport const SET_FILTER_CONDITION = 'SET_FILTER_CONDITION';\r\nexport const FETCH_ATTRIBUTES = 'FETCH_ATTRIBUTES';\r\nexport const FETCH_PRODUCT_DETAILS = 'FETCH_PRODUCT_DETAILS';\r\nexport const FETCH_ALL_PRODUCTS = 'FETCH_ALL_PRODUCTS';","import React, { useState, useEffect, FormEvent } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport { Link } from 'react-router-dom';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport {  Button, Icon, Collapse } from '@material-ui/core';\r\n// import './ProductSearch.scss'\r\nimport {useSelector} from 'react-redux';\r\n\r\n\r\nfunction ProductSearch() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [categories,setCategories] = useState([])\r\n  const [subCategory, setSubCategory] = useState([]);\r\n  const [selectedCategory,setSelectedCategory] = useState(''); \r\n  const product = useSelector(state => state.product)\r\n  const {mainCategories} = product;\r\n  useEffect(() => {\r\n    setCategories(mainCategories && mainCategories[2]['Women']);\r\n    setTitle('Categories');\r\n  }, [mainCategories]);\r\n\r\n  const handleClick = (cat) => {\r\n    setOpen(!open);\r\n    if(!open){\r\n      setTitle(cat)\r\n    }else{\r\n        setTitle('Categories');\r\n    }\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setTitle('Categories');\r\n    setOpen(false)\r\n  }\r\n\r\n  const filterSubCategory = (category) => {\r\n    console.log(category)\r\n    // setSubCategory(mainCategories[2]['Women'][0][category]);\r\n    handleClick(category);\r\n};\r\n\r\n  const handleCategoryChange = (e: any, cat, name) => {\r\n    if (name === 'category') {\r\n        filterSubCategory(cat[0]);\r\n        setSelectedCategory(cat);\r\n    }\r\n  };\r\n  return (\r\n    <List>\r\n      <ListItem>\r\n        {open && <Button className = 'btn-title' onClick = {handleClose}>\r\n        <Typography variant=\"subtitle2\">{title}</Typography>\r\n            <Icon>\r\n                chevron_left\r\n            </Icon>\r\n            </Button>\r\n        }\r\n        {!open && <Typography variant=\"subtitle1\">{title.toUpperCase()}</Typography>}\r\n      </ListItem>\r\n      <Collapse className ='main-list' in={!open} timeout='auto' unmountOnExit>\r\n      {\r\n        categories.map((catObj,ind) => {\r\n            return (\r\n                <ListItem key={ind} className='list-item'>\r\n                  <Link className='cat-link' to = {`/products/search/${Object.keys(catObj)[0]}`}>\r\n                  {Object.keys(catObj)[0]}\r\n                  </Link>\r\n                  {/* <Icon onClick={(e) => handleCategoryChange(e, Object.values(catObj), 'category')}>\r\n                    chevron_right\r\n                  </Icon> */}\r\n                </ListItem>\r\n            );\r\n          })\r\n      }  \r\n          </Collapse>\r\n      <Collapse in={open} timeout='auto' unmountOnExit>\r\n      {subCategory && subCategory.map((subObj:any,ind: any) => {\r\n        return (\r\n            <ListItem className = 'sub-list' key={ind}>\r\n            <Link className='cat-link' to = {`/products/search/${selectedCategory}/${Object.keys(subObj)[0]}`}>\r\n              {Object.keys(subObj)[0]}\r\n            </Link>\r\n              </ListItem>\r\n        );\r\n      })\r\n    }\r\n    </Collapse>\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default ProductSearch;\r\n","import React, { useState, useEffect } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.scss';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  makeStyles,\r\n  Theme,\r\n  fade,\r\n  createStyles,\r\n} from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport clsx from 'clsx';\r\nimport { useDispatch } from 'react-redux';\r\nimport OptionsTray from './optionsTray/OptionsTray';\r\nimport { fetchCategories } from 'actions/products/productActions';\r\nimport ProductSearch from './components/ProductSearch';\r\n// import {ArrowBack} from '@material-ui/icons';\r\n\r\ninterface IHeaderLink {\r\n  name: string;\r\n  path: string;\r\n  iconName: string;\r\n}\r\n\r\ninterface IProps {\r\n  isLoggedin?: boolean;\r\n  // logout?:() => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    list: {\r\n      width: 250,\r\n    },\r\n    fullList: {\r\n      width: 'auto',\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: '12ch',\r\n        '&:focus': {\r\n          width: '20ch',\r\n        },\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\nconst Header: React.FC<IProps> = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [toggle, settoggle] = useState(false);\r\n  const { isLoggedin } = props;\r\n\r\n  const headerLinks: IHeaderLink[] = [\r\n    { name: 'Home', path: '/', iconName: 'home' },\r\n    { name: 'Dashboard', path: '/dashboard', iconName: 'dashboard' },\r\n    { name: 'About', path: '/about', iconName: 'about' },\r\n    { name: 'divider', path: '', iconName: '' },\r\n    { name: 'Add Product', path: '/add-product', iconName: 'add' },\r\n    { name: 'My Store', path: '/my-products', iconName: 'store' },\r\n    // { name: 'Messages', path: '/messages', iconName: 'chat' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCategories());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <AppBar color=\"transparent\" className=\"header-wrapper\">\r\n        <Toolbar className=\"header-container\">\r\n          <>\r\n            {isLoggedin && (\r\n              <IconButton\r\n                edge=\"start\"\r\n                onClick={() => settoggle((cur: boolean) => !cur)}\r\n                className=\"menu-button\"\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n            )}\r\n            <div className=\"logo\">\r\n              <Typography variant=\"h6\" className=\"title\">\r\n                STORE\r\n              </Typography>\r\n            </div>\r\n            {/* <div className = 'search-container'>\r\n            <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n            </div>\r\n          </div> */}\r\n            {!isLoggedin ? (\r\n              <Grid className=\"default-header-auth container\">\r\n                <Link to=\"/login\">\r\n                  <Button color=\"inherit\">Login</Button>\r\n                </Link>\r\n                <Link to=\"/signup\">\r\n                  <Button color=\"inherit\">Sign Up</Button>\r\n                </Link>\r\n              </Grid>\r\n            ) : (\r\n              <OptionsTray />\r\n            )}\r\n          </>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* //sidenav */}\r\n      {isLoggedin ? (\r\n        <aside\r\n          className={clsx(classes.list, {\r\n            [classes.fullList]: 'top',\r\n          })}\r\n          role=\"presentation\"\r\n        >\r\n          <SwipeableDrawer\r\n            className={`${classes.fullList} sidebar-wrapper`}\r\n            anchor={'left'}\r\n            open={toggle}\r\n            onClose={() => settoggle(false)}\r\n            onOpen={() => settoggle(true)}\r\n          >\r\n            <div className=\"sidebar-container wrapper\">\r\n              {headerLinks.map(({ name, path, iconName }, index) =>\r\n                name === 'divider' ? (\r\n                  <Divider key={name + index} />\r\n                ) : (\r\n                  <List key={name} className={`${classes.list} header-link container`}>\r\n                    <Link key={name} to={path} onClick={() => settoggle(false)}>\r\n                      <ListItem>\r\n                        <ListItemIcon>\r\n                          <Icon>{iconName}</Icon>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={name} />\r\n                      </ListItem>\r\n                    </Link>\r\n                  </List>\r\n                ),\r\n              )}\r\n              <ProductSearch/>\r\n            </div>\r\n          </SwipeableDrawer>\r\n        </aside>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Header from 'components/header/Header';\r\nimport {connect} from 'react-redux';\r\n\r\nconst ProtectedRoutes = ({ component: Component, ...props }) => {\r\n  const {isLoggedin} = props.auth;\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={(props) => {\r\n        return <>{isLoggedin ? (\r\n            <>\r\n            <Header isLoggedin = {isLoggedin}/>\r\n            <div className = 'core-app-wrapper'>\r\n              <Component {...props}/>\r\n            </div>\r\n            </>\r\n            )\r\n            : (<Redirect to=\"/\" />)}\r\n            </>;\r\n      }}\r\n    ></Route>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) =>({\r\n  auth:state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(ProtectedRoutes);\r\n//todo  pass location of past page ","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Header from 'components/header/Header';\r\nimport { getItem } from 'components/utils/localStorage/LocalStorage';\r\n\r\nfunction PublicRoutes({ component: Component, ...props }) {\r\n  const isLoggedin = getItem('token') ? true : false;\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={(props) => (\r\n        <>\r\n          <Header isLoggedin={isLoggedin} />\r\n          <div className = 'core-app-wrapper'>\r\n          <Component {...props} />\r\n          </div>\r\n        </>\r\n      )}\r\n    ></Route>\r\n  );\r\n}\r\n\r\nexport default PublicRoutes;\r\n","export const NumberWithCommas = (val) => {\r\n    return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}","import { axiosApi } from 'api/axios/axiosApi';\r\nimport Snackbar from 'components/utils/notification/Snackbar';\r\nimport {\r\n    CART_DELETE_ITEM,\r\n    CART_ADD_ITEM,\r\n  } from './types';\r\n\r\n  export const addToCart = (prodId,qty) =>async(dispatch) => {\r\n      try{\r\n        const data = await axiosApi.get('product/details/'+prodId,)\r\n        dispatch({\r\n            type:CART_ADD_ITEM,\r\n            payload:{\r\n                id:data._id,\r\n                name:data.name,\r\n                image:data.image,\r\n                price:data.price,\r\n                description:data.description,\r\n                quantity:data.quantity,\r\n                qty:qty||1}\r\n        })\r\n      }\r\n      catch(err){\r\n         Snackbar.handleError(err)   \r\n      }\r\n  }\r\n\r\n  export const deleteCartItem = (id) => async(dispatch) => {\r\n    try{\r\n      dispatch({\r\n          type:CART_DELETE_ITEM,\r\n          payload:id,\r\n      })\r\n    }\r\n    catch(err){\r\n       Snackbar.handleError(err)   \r\n    }\r\n    \r\n}","export const CART_ADD_ITEM = 'ADD_CART_ITEM';\r\nexport const CART_DELETE_ITEM = 'CART_DELETE_ITEM';","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { NumberWithCommas } from 'components/utils/numbers/numbers';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './ProductCard.scss';\r\nimport {useDispatch} from 'react-redux';\r\nimport { addToCart } from 'actions/cart/cartActions';\r\nimport { likeProduct, unlikeProduct } from 'actions/products/productActions';\r\nimport {useSelector} from 'react-redux';\r\n\r\nexport default function ProductCard({ data }) {\r\n  // const classes = useStyles();\r\n  const imageurl = process.env.REACT_APP_IMAGE_URL;\r\n  const auth = useSelector(state => state.auth)\r\n  const {user:{_id},isLoggedin} = auth;\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const isLoved = data.loves && data.loves.includes(_id);\r\n\r\n  const handleDetailPage = () => \r\n    {\r\n        history.push(`details/${data._id}`)\r\n    }\r\n  \r\n  const handleLove = () => {\r\n    isLoved ? dispatch(unlikeProduct(_id,data,isLoggedin)) : dispatch(likeProduct(_id,data,isLoggedin))\r\n  } \r\n\r\n  return (\r\n    data &&\r\n    <Card className = 'product-card-container container'>\r\n      <CardActionArea>\r\n      <Box className='card-wrapper' onClick = {handleDetailPage}>\r\n      <Box className=\"card-background\">\r\n        <CardMedia\r\n          className=\"product-image\"\r\n          component=\"img\"\r\n          alt={ data.name}\r\n          // height=\"370\"\r\n          width=\"370\"\r\n          image={\r\n             data.image\r\n              ? `${imageurl}/${ data.image}`\r\n              : 'https://commercial.bunn.com/img/image-not-available.png'\r\n          }\r\n          title={ data.name}\r\n        />\r\n        <span className=\"brand\">{ data.brand}</span>\r\n      </Box>\r\n      <CardContent className=\"card-info\">\r\n        {/* <span className=\"card-info-new\"> new</span> */}\r\n        <Box className=\"card-info-name\">\r\n          <Typography  variant=\"h5\" component=\"h2\">\r\n            { data.name}\r\n          </Typography>\r\n        </Box>\r\n        <Box className = 'price-wrapper'>\r\n        {/* <Box className=\"card-info-price\"> */}\r\n            <Typography component=\"span\" className=\"card-info-price\">\r\n              Rs {NumberWithCommas(data ? data.price:0)}\r\n            </Typography>\r\n        {/* </Box> */}\r\n        </Box>\r\n        </CardContent>\r\n      </Box>\r\n      </CardActionArea>\r\n        <CardActions className ='card-actions-wrapper'>\r\n          <Button className={`${isLoved? 'love-ed' : 'love'}`} onClick={handleLove}>\r\n            {!isLoved && <Icon>favorite_border</Icon>}\r\n            {isLoved && <Icon>favorite</Icon>}\r\n          </Button>\r\n          <Button className=\"buy\" onClick = {() => dispatch(addToCart(data._id))}>\r\n            <Icon>add_shopping_cart</Icon>\r\n            Add to Cart\r\n          </Button>\r\n        </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nfunction PaginationComponent({count,setPage,currentPage}) {\r\n    const handleChange = (event, value) => {\r\n      setPage(value);\r\n    };\r\n    return (\r\n        <Pagination count={count} page={currentPage} onChange={handleChange} color = 'primary' />\r\n    )\r\n}\r\n\r\nexport default PaginationComponent\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport './ButtonComponent.scss'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nfunction ButtonComponent({type,color,handlesubmit,disabled = false ,options:{size,isSubmitting = false,icon,variantType},classname,value}) {\r\n  return (\r\n    <>\r\n    <Grid item xs = {6}>\r\n      {icon ?\r\n        <IconButton aria-label=\"edit\"\r\n        className={classname ||'btn'}\r\n        disabled={isSubmitting  }\r\n        onClick = {handlesubmit}\r\n        >\r\n          <Icon>\r\n            {icon}\r\n          </Icon>\r\n        </IconButton>\r\n        :\r\n      <Button\r\n        type = {type ||'submit'}\r\n        // fullWidth\r\n        variant={variantType || 'contained'}\r\n        color={'secondary'}\r\n        className={classname ||'button-default'}\r\n        disabled={isSubmitting}\r\n        onClick = {handlesubmit}\r\n        size = {size}\r\n\r\n      >\r\n        {isSubmitting ?'Submitting':value === 'Edit Product'?'Confirm Edit Product':value}\r\n      </Button>\r\n      }\r\n    </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ButtonComponent;\r\n","import { ListItemIcon, Typography } from '@material-ui/core';\r\nimport React, { useRef } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonComponent from '../Button/ButtonComponent';\r\nimport './CustomSelect.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setFilterCondition } from 'actions/products/productActions';\r\nfunction CustomSelect({ queryName, label, options, multiple, filterKey }) {\r\n  const dispatch = useDispatch();\r\n  const product = useSelector((state) => state.product);\r\n  const { filterCondition } = product;\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n  const [width, setWidth] = React.useState('0px');\r\n  const ref = useRef();\r\n  // const handleChange = (event) => {\r\n  //   setSelected(event.target.value);\r\n  // };\r\n\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setWidth(event.currentTarget.clientWidth);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChangeMultiple = (event, index) => {\r\n    if (selected.includes(options[index])) {\r\n      const ind = selected.indexOf(options[index]);\r\n      const oldSelected = [...selected];\r\n      oldSelected.splice(ind, 1);\r\n      setSelected(oldSelected);\r\n      return;\r\n    }\r\n    setSelected((pre) => [...pre, options[index]]);\r\n  };\r\n\r\n  //resize\r\n  React.useEffect(() => {\r\n    setWidth(ref.current.clientWidth + 'px');\r\n    const resizeEvent = () => {\r\n      setWidth(ref.current.clientWidth + 'px');\r\n    }\r\n    function resize() {\r\n      window.addEventListener('resize',resizeEvent);\r\n    }\r\n    resize();\r\n    return () => {\r\n      window.removeEventListener('resize',resizeEvent);\r\n    };\r\n  }, []);\r\n\r\n  //for multiple\r\n  React.useEffect(() => {\r\n    const changeFilter = () => {\r\n      if (multiple && selected.length > 0) {\r\n        dispatch(setFilterCondition(queryName, selected, filterKey));\r\n      }\r\n    };\r\n    changeFilter();\r\n  }, [multiple,filterKey,queryName,selected]);\r\n\r\n  //for single\r\n  React.useEffect(() => {\r\n    const changeFilter = () => {\r\n      if (filterCondition.count === 0 && selectedIndex === 0) return;\r\n      if (!multiple) {\r\n        const conditionData = {};\r\n        if (queryName === 'sort') {\r\n          switch (options[selectedIndex]) {\r\n            case 'popularity':\r\n              conditionData[queryName] = 'desc';\r\n              conditionData['sortBy'] = 'loveCount';\r\n              break;\r\n            case 'low to high':\r\n              conditionData[queryName] = 'asc';\r\n              conditionData['sortBy'] = 'price';\r\n              break;\r\n            case 'high to low':\r\n              conditionData[queryName] = 'desc';\r\n              conditionData['sortBy'] = 'price';\r\n              break;\r\n            case 'relevance':\r\n              conditionData[queryName] = 'desc';\r\n              conditionData['sortBy'] = 'viewsCount';\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n        dispatch(setFilterCondition(queryName, conditionData, filterKey));\r\n      }\r\n    };\r\n    changeFilter();\r\n  }, [selectedIndex,multiple,filterKey,queryName]);\r\n\r\n  const selectedName = selected;\r\n  return (\r\n    <>\r\n      <List\r\n        className=\"product-search-container container\"\r\n        component=\"nav\"\r\n        aria-label=\"Sort settings\"\r\n      >\r\n        <ListItem\r\n          ref={ref}\r\n          button\r\n          className=\"custom-select-btn\"\r\n          onClick={handleClickListItem}\r\n        >\r\n          <ListItemText primary={label}></ListItemText>\r\n          <ListItemIcon className=\"arrows\">\r\n            <Icon>expand_more</Icon>\r\n          </ListItemIcon>\r\n        </ListItem>\r\n      </List>\r\n\r\n      {multiple ? (\r\n        <Menu\r\n          className=\"menu-main-wrapper\"\r\n          // id=\"lock-menu\"\r\n          elevation={0}\r\n          anchorEl={anchorEl}\r\n          getContentAnchorEl={null}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n          }}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n        >\r\n          <div className=\"menu-info\" style={{ width: `${width}` }}>\r\n            <div className=\"info-selected\">\r\n              <Typography variant=\"subtitle2\">\r\n                {selectedName.length} selected\r\n              </Typography>\r\n              <div className=\"selected-names-wrapper\">\r\n                {selectedName\r\n                  .slice(Math.max(selected.length - 3, 0))\r\n                  .map((item) => (\r\n                    <span className=\"selected-name-span\">{item}</span>\r\n                  ))}\r\n                {selectedName.length > 3 && (\r\n                  <span className=\"selected-name-span\">\r\n                    {selectedName.length - 3} more\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"clear-btn\">\r\n              <ButtonComponent\r\n                type=\"reset\"\r\n                handlesubmit={handleClear}\r\n                className=\"clear-filter\"\r\n                value=\"clear\"\r\n                options={{ isSubmitting: false, variantType: 'outlined' }}\r\n              />\r\n            </div>\r\n          </div>\r\n          {options &&\r\n            options.map((name, index) => (\r\n              <MenuItem\r\n                className={\r\n                  selectedName.includes(name)\r\n                    ? 'menu-item menu-item-selected selected-name-span'\r\n                    : 'menu-item'\r\n                }\r\n                key={name}\r\n                name={name}\r\n                onClick={(event) => handleChangeMultiple(event, index)}\r\n              >\r\n                {name}\r\n              </MenuItem>\r\n            ))}\r\n        </Menu>\r\n      ) : (\r\n        <Menu\r\n          className=\"menu-main-wrapper\"\r\n          id=\"lock-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          getContentAnchorEl={null}\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n          }}\r\n        >\r\n          {options.map((option, index) => (\r\n            <MenuItem\r\n              key={option}\r\n              style={{ width: `${width}` }}\r\n              className={\r\n                index === selectedIndex\r\n                  ? 'menu-item menu-item-selected'\r\n                  : 'menu-item'\r\n              }\r\n              selected={index === selectedIndex}\r\n              onClick={(event) => handleMenuItemClick(event, index)}\r\n            >\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomSelect;\r\n","import React ,{useMemo}from 'react';\r\nimport './ProductFilter.scss';\r\nimport CustomSelect from 'components/common/CustomSelect/CustomSelect';\r\nimport {useSelector} from 'react-redux';\r\nfunction ProductFilterComponent() {\r\n    const product = useSelector(state => state.product)\r\n    const {attributes:{category,brand}} = product;\r\n    const sortItems = useMemo(() => ['Relevance','Popularity', 'low to high', 'high to low'],[]);\r\n  return (\r\n    <div\r\n      className=\"product-search-wrapper\"\r\n    >\r\n        <CustomSelect filterKey = {'options'} queryName={'sort'} label = {'Sort'} options= {sortItems} multiple = {false}/>\r\n        <CustomSelect filterKey = {'filters'} queryName={'category'} label = {'Category'} options= {category} multiple = {true}/>\r\n        {/* <CustomSelect filterKey = {'filters'} queryName={'brand'} label = {'Brand'} options= {brand} multiple = {true}/> */}\r\n        {/* <CustomSelect queryName = {'color'} label = {'Color'} options = {color} multiple = {false}/> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(ProductFilterComponent);\r\n","import Skeleton from '@material-ui/lab/Skeleton'\r\nimport React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction ProductCardSkeleton() {\r\n    return (\r\n        <Card className = 'product-card-container container skeleton'>\r\n        <Box className='card-wrapper'>\r\n        <Box className=\"card-background\">\r\n        <Skeleton variant=\"rect\" width={'100%'} height={370} />\r\n         <Skeleton variant = 'text' className=\"brand\" height = {\"1em\"} width = {'70%'} style = {{marginLeft:'10px'}}/>\r\n        </Box>\r\n        <Box className=\"card-info\">\r\n          <Box className=\"card-info-name\">\r\n            <Skeleton  variant=\"text\" height = {\"1em\"} width = {'70%'} style = {{marginLeft:'10px'}} />\r\n          </Box>\r\n          <Box className = 'price-wrapper'>\r\n              <Skeleton variant=\"text\" height = {\"1em\"} width = {'30%'} style = {{marginRight:'10px'}}/>\r\n          </Box>\r\n          </Box>\r\n        </Box>\r\n          <CardActions className ='card-actions-wrapper'>\r\n          <Skeleton variant=\"text\" height = {\"2em\"} width = {'30%'} style = {{marginLeft:'10px'}}/>\r\n          <Skeleton variant=\"text\" height = {\"2em\"} width = {'30%'} style = {{marginRight:'10px'}}/>\r\n          </CardActions>\r\n      </Card>\r\n    )\r\n}\r\n\r\nexport default ProductCardSkeleton\r\n","import React, { useState, useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport { Grid } from '@material-ui/core';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport ProductCard from 'components/common/Cards/product/ProductCard';\r\nimport './ProductSearchComponent.scss';\r\nimport { searchProducts } from 'actions/products/productActions';\r\nimport PaginationComponent from 'components/common/Pagination/PaginationComponent';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport ProductFilterComponent from '../product-filter/ProductFilterComponent';\r\nimport ProductCardSkeleton from 'components/common/Cards/product/Skeletons/ProductCardSkeleton';\r\n\r\nconst ProductSearchComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const product = useSelector((state) => state.product);\r\n  const { searchResults, searchCount, filterCondition, isLoading } = product;\r\n  const [currentPage, setPage] = useState(1);\r\n  const params= useParams();\r\n  const perPage = 100;\r\n\r\n  useEffect(() => {\r\n    const loadData = () => {\r\n      const conditionData = { ...filterCondition };\r\n      dispatch(searchProducts(conditionData, { currentPage, perPage ,...params}));\r\n    };\r\n    loadData();\r\n  }, [currentPage, perPage,params,filterCondition.count]);\r\n  return (\r\n    <>\r\n        <ProductFilterComponent />\r\n        {!isLoading && searchResults.length === 0 && (\r\n        <>\r\n          <Grid item xs={3}></Grid>\r\n          <Grid item className=\" no-products-found container\" xs={12}>\r\n            No Products Found\r\n          </Grid>\r\n          <Grid item xs={3}></Grid>\r\n        </>\r\n        )}\r\n        <Grid container  spacing={3} className=\"product-container\">\r\n          {isLoading &&\r\n            Array(perPage)\r\n              .fill('')\r\n              .map((val, index) => (\r\n                <Grid\r\n                  item\r\n                  className=\"grid-item-product\"\r\n                  key={index}\r\n                  xs={12}\r\n                  sm={6}\r\n                  md={4}\r\n                >\r\n                 <ProductCardSkeleton/>\r\n                </Grid>\r\n              ))}\r\n          {searchResults.length > 0 &&\r\n            searchResults.map((productData: any) => (\r\n              <Grid\r\n                item\r\n                className=\"grid-item-product\"\r\n                key={productData._id}\r\n                xs={12}\r\n                sm={6}\r\n                md={4}\r\n                lg={3}\r\n              >\r\n                <ProductCard data={productData} />\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n      {searchResults && searchResults.length > 0 && (\r\n        <Grid container spacing={4} className=\"pagination-container container\">\r\n          <PaginationComponent\r\n            currentPage={currentPage}\r\n            count={Math.ceil(searchCount / perPage)}\r\n            setPage={setPage}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductSearchComponent;\r\n","import { Grid } from '@material-ui/core';\r\nimport React from 'react'\r\n// import ProductFilterComponent from '../product/product-filter/ProductFilterComponent';\r\nimport ProductSearchComponent from '../product/product=search/ProductSearchComponent';\r\n\r\nfunction HomeComponent(props) {\r\n    return (\r\n                <Grid container className = 'all-products'>\r\n                    {/* <ProductFilterComponent/> */}\r\n                    <ProductSearchComponent/>\r\n                </Grid>\r\n    )\r\n}\r\n\r\nexport default HomeComponent\r\n","import React , {useEffect,useState} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport './InputComponent.scss';\r\nfunction InputComponent({ type,name,label,error,handlechange,data,props}) {\r\n    const inputType = type === undefined ? 'string':`${type}`;\r\n    const [display, setdisplay] = useState(true)\r\n    const [currency,setCurrency] = useState(false);\r\n    \r\n    const inputProps ={\r\n    startAdornment: <InputAdornment position=\"start\">{currency}</InputAdornment>,\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(Array.isArray(props.dependency)){\r\n                setdisplay(data[props.dependency[0]])\r\n        }\r\n        if(props.currency){\r\n            setCurrency(props.currency)\r\n        }\r\n    }, [props.currency])\r\n\r\n    return (\r\n        <>\r\n        <Grid item xs ={12} sm ={6} md ={4} key={name}>\r\n        <TextField\r\n              className = {`form-field form-field${error !== ''?'-error':null} form-field-${display?'show':'hide'}`}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id={name}\r\n              label={label}\r\n              name={name}\r\n              required={props.required || false}\r\n              type = {inputType}\r\n              autoComplete={name}\r\n              autoFocus\r\n              onChange={handlechange}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={currency? {...inputProps}:{}\r\n              }\r\n              value={data[name] ||''}\r\n            />\r\n            <Grid className = 'error-span'>{error}</Grid>\r\n        </Grid>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default InputComponent\r\n","import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport './FileUploadButton.scss'\r\nimport { Icon, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n  }),\r\n);\r\n\r\nconst FileUploadButton = ({name,label,value,props, handlechange,error }) => {\r\n  const classes = useStyles();\r\n  const imageUrl = process.env.REACT_APP_IMAGE_URL;\r\n\r\n  return (\r\n    <div className={classes.root +' '+'upload-button-wrapper'} key={name}>\r\n      <input\r\n        name={name}\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"contained-button-file\"\r\n        multiple={props.multiple || false}\r\n        type=\"file\"\r\n        onChange={handlechange}\r\n      />\r\n      <label htmlFor=\"contained-button-file\">\r\n        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n          <Icon>\r\n             add\r\n          </Icon>\r\n          {value &&\r\n          <img className = {`image-overlay ${props.round ?'image-overlay-round':null}`} src = {`${imageUrl}/${value}`}>\r\n          </img>\r\n        }\r\n        </Button>\r\n      </label>\r\n      <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"icon-button-file\"\r\n        type=\"file\"\r\n      />\r\n      \r\n      {!props.round && <Typography className = 'photo-info' variant = 'caption'>\r\n        {value ? typeof value === 'string'? value.split('-')[1] :value[0].name:'No Photo selected' }\r\n      </Typography>}\r\n      {/* <label htmlFor=\"icon-button-file\">\r\n        <IconButton\r\n          color=\"primary\"\r\n          aria-label=\"upload picture\"\r\n          component=\"span\"\r\n        >\r\n          <PhotoCamera />\r\n        </IconButton>\r\n      </label> */}\r\n    </div>\r\n  );\r\n};\r\nexport default FileUploadButton;\r\n","import React from 'react'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid  from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\nfunction CheckboxComponent({name,label,data,value,handlechange}) {\r\n    const classes = useStyles();\r\n    return (\r\n       <>\r\n       <Grid item xs ={12} key={name}>\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n        <FormControlLabel\r\n            control={<Checkbox className ='form-checkbox' checked={value} onChange={handlechange} inputProps={{ 'aria-label': 'secondary checkbox' }} name={name} />}\r\n            label={label}\r\n        />\r\n        </FormControl>\r\n       </Grid>\r\n       </>\r\n\r\n    )\r\n}\r\n\r\nexport default CheckboxComponent\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nexport default function MaterialUIPickers({name,label,value,handlechange}) {\r\n  return (\r\n      <Grid key ={name} container justify=\"space-around\">\r\n        <KeyboardDatePicker\r\n          name ={name}\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label={label}\r\n          format=\"DD/MM/YYYY\"\r\n          value={value|| null}\r\n          onChange={(e) => handlechange(e,name)}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n      </Grid>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      display: 'block',\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  }),\r\n);\r\n\r\nconst SelectComponent = ({name, label, value, props = {dependency:[],menuItems:[{key:'',value:''}]}, handleChange, data }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [display, setdisplay] = useState(true);\r\n  useEffect(() => {\r\n    if (Array.isArray(props.dependency)) {\r\n      setdisplay(data[props.dependency[0]]);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n     <Grid key ={name} container  className={`${classes.formControl} form-field-${\r\n            display ? 'show' : 'hide'\r\n          }`}>\r\n      <Grid item xs={3}/>\r\n      <Grid item xs={6}>\r\n        <FormControl\r\n          className={`${classes.formControl} form-field-${\r\n            display ? 'show' : 'hide'\r\n          }`}\r\n        >\r\n          <InputLabel id=\"demo-controlled-open-select-label\">\r\n            {label}\r\n          </InputLabel>\r\n          <Select\r\n            name={name}\r\n            labelId=\"demo-controlled-open-select-label\"\r\n            id=\"demo-controlled-open-select\"\r\n            open={open}\r\n            onClose={handleClose}\r\n            onOpen={handleOpen}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            defaultValue = {value || props.menuItems[0].key}\r\n          >\r\n            {/* <MenuItem value=\"none\">\r\n              <em>None</em>\r\n            </MenuItem> */}\r\n            {props.menuItems.map((item,index) => (\r\n              <MenuItem key ={index} value={item.key}>{item.value}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={3}/>\r\n    </Grid>\r\n    </>\r\n  );\r\n};\r\nexport default SelectComponent;\r\n","import moment from 'moment';\r\n\r\nfunction formatDate(date){\r\n    return moment(date).format(\"MMM Do YYYY\")\r\n}\r\n\r\nfunction formatSetDate(date){\r\n    return moment(date).format(\"YYYY/MM/DD\")\r\n}\r\n\r\nfunction formatTime(date){\r\n    return moment(date).format('hh:mm a')\r\n}\r\n\r\n\r\nexport default {\r\n    formatDate,formatTime,formatSetDate\r\n}","import React, { useState } from 'react';\r\nimport './ColorPicker.scss';\r\nfunction ColorPicker({\r\n  name,\r\n  label,\r\n  type,\r\n  value,\r\n  handlechange,\r\n  ...rest\r\n}) {\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const colors = {\r\n    aliceblue: '#f0f8ff',\r\n    antiquewhite: '#faebd7',\r\n    whitesmoke: '#f5f5f5',\r\n    darkred: '#8b0000',\r\n    crimson: '#dc143c',\r\n    red: '#ff0000',\r\n    midnightblue: '#191970',\r\n    mediumblue: '#0000cd',\r\n    dodgerblue: '#1e90ff',\r\n    cyan: '#00ffff',\r\n    gold: '#ffd700',\r\n    goldenrod: '#daa520',\r\n    yellow: '#ffff00',\r\n    darkgreen: '#006400',\r\n    lime: '#00ff00',\r\n    greenyellow: '#adff2f',\r\n    seagreen: '#2e8b57',\r\n    springgreen: '#00ff7f',\r\n    darkorange: '#ff8c00',\r\n    chocolate: '#d2691e',\r\n    coral: '#ff7f50',\r\n    purple: '#800080',\r\n    blueviolet: '#8a2be2',\r\n    fuchsia: '#ff00ff',\r\n    deeppink: '#ff1493',\r\n    hotpink: '#ff69b4',\r\n    lightpink: '#ffb6c1',\r\n    black: '#000000',\r\n    dimgray: '#696969',\r\n  };\r\n  const handleSelect = (color) => {\r\n    const e = { target: { name, type } };\r\n    if (selected.includes(color)) {\r\n      const ind = selected.indexOf(color);\r\n      const copy = [...selected];\r\n      copy.splice(ind, 1);\r\n      setSelected(copy);\r\n      return;\r\n    }\r\n    setSelected((pre) => [...pre, color]);\r\n    handlechange(e, selected);\r\n  };\r\n\r\n  return (\r\n    <div className=\"color-picker-container\">\r\n      <h3>Select Colors</h3>\r\n      <div className=\"select-list\">\r\n        {Object.entries(colors).map((data,index) => (\r\n          <span\r\n            key = {index}\r\n            name={name}\r\n            type={type}\r\n            value={selected}\r\n            style={{ backgroundColor: data[1] }}\r\n            className={\r\n              selected.includes(data[1])\r\n                ? 'color-picker-item color-picker-item-active'\r\n                : 'color-picker-item'\r\n            }\r\n            name={data[0]}\r\n            value={data[1]}\r\n            onClick={(event) => handleSelect(data[1])}\r\n          />\r\n        ))}\r\n      </div>\r\n      <h3>Selected Colors</h3>\r\n      <div className=\"selected-list\">\r\n        {selected.map((color) => (\r\n          <span\r\n            style={{ backgroundColor: color }}\r\n            className=\"color-picker-item\"\r\n            onClick={() => handleSelect(color)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColorPicker;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles, Grid } from '@material-ui/core';\r\nimport InputComponent from '../Input/InputComponent';\r\nimport ButtonComponent from '../Button/ButtonComponent';\r\nimport FileUploadButton from '../FileUploadButton/FileUploadButton';\r\nimport CheckboxComponent from '../Checkbox/CheckboxComponent';\r\nimport DatePicker from '../DatePicker/DatePicker';\r\nimport snack from './../../utils/notification/Snackbar';\r\nimport { axiosApi } from './../../../api/axios/axiosApi';\r\nimport SelectComponent from '../Select/SelectComponent';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport utils from 'components/utils/utils';\r\nimport { getItem } from 'components/utils/localStorage/LocalStorage';\r\nimport {connect} from 'react-redux';\r\nimport ColorPicker from '../ColorPicker/ColorPicker';\r\n\r\nconst useStyles = () =>\r\n  makeStyles({\r\n    paper: {\r\n      marginTop: '128px',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: '4px',\r\n      backgroundColor: 'white',\r\n    },\r\n    form: {\r\n      width: '100vw',\r\n      marginTop: '4px',\r\n    },\r\n    submit: {\r\n      margin: '8px 0 4px',\r\n    },\r\n  });\r\n\r\nconst FormBuilder = ({ url, className, formName, form, buttonTitle ,auth}) => {\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const classes = useStyles();\r\n  const [data, setdata] = useState({});\r\n  const [touched, setTouched] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [isTouched, setistouched] = useState(false);\r\n  const [options, setOptions] = useState({\r\n    isSubmitting: false,\r\n    isError: false,\r\n    isValid: false,\r\n  });\r\n  const [title,setTitle] = useState('');\r\n\r\n  const defaultDerived = (state) => {\r\n    const newState = {};\r\n    if (state === 'touched') {\r\n      form.forEach((item) => {\r\n        if (item.props?.required) {\r\n          newState[item.key] = false;\r\n        }\r\n      });\r\n    }\r\n    if (state === 'data') {\r\n      form.forEach((item) => {\r\n        if (item.type === 'boolean') {\r\n          newState[item.key] = false;\r\n        } else if (item.type === 'number') {\r\n          newState[item.key] = 0;\r\n        }\r\n        else if(item.type === 'array'){\r\n          newState[item.key] = []\r\n        }\r\n        else {\r\n          newState[item.key] = '';\r\n        }\r\n      });\r\n      if (params.id) {\r\n        newState['newimage'] = '';\r\n      }\r\n    }\r\n    if (state === 'error') {\r\n      form.forEach((item) => {\r\n        newState[item.key] = '';\r\n      });\r\n    }\r\n    return newState;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const defaultTouch = defaultDerived('touched');\r\n    const error = defaultDerived('error');\r\n    const data = defaultDerived('data');\r\n    setdata(data);\r\n    setTouched(defaultTouch);\r\n    setErrors(error);\r\n    if(formName === 'Product'){\r\n      let title = params.id ? `Edit ${formName}` : `Add ${formName}`;\r\n      setTitle(title);\r\n      if (params.id) {\r\n        axiosApi\r\n          .post(`${url}/search`, { _id: params.id },auth.isAuthorized)\r\n          .then((response) => {\r\n            if (response.length) {\r\n              setdata({ ...data, ...response[0] });\r\n              return;\r\n            }\r\n            setdata(data);\r\n\r\n          })\r\n          .catch((err) => {\r\n            snack.handleError('unable to fetch data');\r\n            setdata(data);\r\n          });\r\n      }\r\n    }\r\n  }, [params.id,url,formName]);\r\n\r\n  useEffect(() => {\r\n    const defaultTouch = defaultDerived('touched');\r\n    const error = defaultDerived('error');\r\n    const data = defaultDerived('data');\r\n    setdata(data);\r\n    setTouched(defaultTouch);\r\n    setErrors(error);\r\n    if(formName === 'Profile'){\r\n      let title = `Update ${formName}`\r\n      setTitle(title);\r\n      axiosApi\r\n      .get(`${url}/${auth.user._id}`,{},auth.isAuthorized)\r\n      .then((response) => {\r\n          if(response.address){\r\n          response.temp_address = (response['address']['temp_address'] &&  response['address']['temp_address'].join(',')) || ''\r\n          response.permanent_address = (response['address']['permanent_address'] &&  response['address']['permanent_address']) || ''\r\n        }\r\n        setdata({ ...data, ...response});\r\n      })\r\n      .catch((err) => {\r\n        snack.handleError('unable to fetch data');\r\n        setdata(data);\r\n      });\r\n    }\r\n  }, [url,formName])\r\n\r\n\r\n\r\n  const handleChange = (e,addData) => {\r\n    let {name, value, type, checked, files } = e.target;\r\n    console.log({addData})\r\n    if (type === 'checkbox') {\r\n      value = checked;\r\n    }\r\n    if (type === 'file') {\r\n      value = files;\r\n    }\r\n    if(type === 'array') {\r\n      value = [...addData];\r\n    }\r\n\r\n    setdata((predata) => ({ ...predata, [name]: value }));\r\n    // let errors = validateProductForm(name,this.state);\r\n    // setErrors(preError => ({...preError,errors}))\r\n    form.forEach((item) => {\r\n      if (item.props?.required && item.key === name) {\r\n        setTouched((preTouch) => ({ ...preTouch, [name]: true }));\r\n      }\r\n    });\r\n    setistouched(Object.values(touched).filter((data) => !data).length === 0);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // setOptions((pre) => ({ ...pre, isSubmitting: true }));\r\n    if (data._id) {\r\n      update();\r\n      return;\r\n    } \r\n    else {\r\n      add();\r\n    }\r\n  };\r\n  const handleRedirect = () => {\r\n    if(formName === 'Profile'){\r\n      return;\r\n    }\r\n    if(formName === 'Product'){\r\n      history.push('/my-products');\r\n    }\r\n  }\r\n\r\n  const update = () => {\r\n    const files = data.newimage;\r\n    delete data.newimage;\r\n    setOptions((prev) => ({ ...prev, isSubmitting: true }));\r\n    axiosApi\r\n      .uploadFile(\r\n        'PUT',\r\n        `${process.env.REACT_APP_BASE_URL}${url}/${data._id}?token=${getItem(\r\n          'token',\r\n        )}`,\r\n        data,\r\n        files,\r\n      )\r\n      .then((data) => {\r\n        snack.showSuccess(`${formName} updated successfully`);\r\n        setOptions((prev) => ({ ...prev, isSubmitting: false }));\r\n        handleRedirect();\r\n      })\r\n      .catch((err) => {\r\n        snack.handleError(err);\r\n        setOptions((prev) => ({ ...prev, isSubmitting: false }));\r\n      });\r\n  };\r\n\r\n  const add = () => {\r\n    setOptions((prev) => ({ ...prev, isSubmitting: true }));\r\n    const files = data.image;\r\n    delete data.image;\r\n    if (files && files[0]) {\r\n      axiosApi\r\n        .uploadFile(\r\n          'POST',\r\n          `${process.env.REACT_APP_BASE_URL}${url}?token=${getItem('token')}`,\r\n          data,\r\n          files,\r\n        )\r\n        .then((data) => {\r\n          snack.showSuccess(`${formName} added successfully`);\r\n          setOptions((prev) => ({ ...prev, isSubmitting: false }));\r\n          handleRedirect();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          snack.handleError(err);\r\n          setOptions((prev) => ({ ...prev, isSubmitting: false }));\r\n        });\r\n    } else {\r\n      axiosApi\r\n        .post(url, data, {}, true)\r\n        .then((data) => {\r\n          snack.showSuccess(`${formName} added successfully`);\r\n          setOptions((prev) => ({ ...prev, isSubmitting: false }));\r\n          handleRedirect();\r\n         \r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          snack.handleError(err.data);\r\n          setOptions((prev) => ({ ...prev, isSubmitting: false }));\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (date, name) => {\r\n    const value = utils.formatSetDate(date);\r\n    setdata((predata) => ({ ...predata, [name]: value }));\r\n  };\r\n\r\n  const formclass = className || 'dynamic-form';\r\n  return (\r\n    <Container component=\"main\" className ='container'>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        {formName && (\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            {title}\r\n          </Typography>\r\n        )}\r\n        <form\r\n          className={`${classes.form} ${formclass}`}\r\n          noValidate\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <Grid container spacing={2}>\r\n            {form.map((field, index) =>\r\n              field.type === undefined || field.type === 'number' ? (\r\n                <InputComponent\r\n                  key={`${field.key}-${index}`}\r\n                  name={field.key}\r\n                  label={field.label}\r\n                  type={field.type}\r\n                  error={errors[field.key]}\r\n                  props={field.props}\r\n                  data={data}\r\n                  handlechange={handleChange}\r\n                />\r\n              ) : field.type === 'file' ? (\r\n                <FileUploadButton\r\n                  key={`${field.key}-${index}`}\r\n                  name={data._id && !data.image ? 'newimage' : field.key}\r\n                  label={data._id ? 'Update Photo' : field.label}\r\n                  value={data._id && !data.image ? data['newimage'] : data[field.key]}\r\n                  error={data._id ? errors['newimage'] : errors[field.key]}\r\n                  props={field.props}\r\n                  handlechange={handleChange}\r\n                />\r\n              ) : field.type === 'date' ? (\r\n                <DatePicker\r\n                  key={`${field.key}-${index}`}\r\n                  name={field.key}\r\n                  label={field.label}\r\n                  value={data[field.key]}\r\n                  error={errors[field.key]}\r\n                  handlechange={handleDateChange}\r\n                />\r\n              ) : field.type === 'boolean' ? (\r\n                <CheckboxComponent\r\n                  key={`${field.key}-${index}`}\r\n                  name={field.key}\r\n                  label={field.label}\r\n                  value={data[field.key] || false}\r\n                  data={data}\r\n                  handlechange={handleChange}\r\n                />\r\n              ) : field.type === 'select' ? (\r\n                <SelectComponent\r\n                  key={`${field.key}-${index}`}\r\n                  name={field.key}\r\n                  label={field.label}\r\n                  value={data[field.key]}\r\n                  props={field.props}\r\n                  data={data}\r\n                  handlechange={handleChange}\r\n                />\r\n              ) : field.type === 'array' ? (\r\n                <ColorPicker\r\n                  key={`${field.key}-${index}`}\r\n                  name={field.key}\r\n                  label={field.label}\r\n                  value={data[field.key]}\r\n                  props={field.props}\r\n                  type={field.type}\r\n                  handlechange={handleChange}\r\n                />):null,\r\n            )}\r\n            <ButtonComponent\r\n              classname={` btn btn-${className}`}\r\n              value={title}\r\n              options={options}\r\n              disabled = {isTouched}\r\n            />\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth:state.auth\r\n})\r\nexport default connect(mapStateToProps)(FormBuilder)\r\n","import React, { Component } from 'react';\r\nimport FormBuilder from 'components/common/FormBuilder/FormBuilder';\r\ninterface IProps {}\r\ninterface IState {\r\n}\r\nconst defaultForm = {\r\n  productForm:[\r\n    {key:'image',label:'Upload Photo',type:'file', props:{multiple:false}},\r\n    {key:'name',label:'Name',props:{required:true}},\r\n    {key:'price',label:'Price',type:'number',props:{required:true ,currency:'Rs' }},\r\n    {key:'category',label:'Category',props:{required:true}},\r\n    {key:'subCategory',label:'Sub Category',props:{required:true}},\r\n    {key:'sku',label:'Product ID',props:{}},\r\n    {key:'brand',label:'Brand',props:{}},\r\n    {key:'color',label:'Select Colors', type:'array', props:{}},\r\n    {key:'description',label:'Description',props:{}},\r\n    {key:'status',label:'Status',type:'select',props:{\r\n      menuItems:[{key:'avaliable',value:'avaliable'},{key:'out of stock',value:'out of stock'},{key:'booked',value:'booked'},{key:'sold',value:'sold'}]\r\n      }  \r\n    },\r\n    {key:'manuDate',label:'Manufactured Date', type:'date',props:{}},\r\n    {key:'expiryDate',label:'Expiry Date', type:'date',props:{}},\r\n    {key:'quantity',label:'Quantity',type:'number',props:{}},\r\n    {key:'unitOfMeasurement',label:'Unit of Measurement ',props:{}},\r\n    {key:'sizeValue',label:'Size',props:{dependency:'unitOfMeasurement'}},\r\n    {key:'discountedItem',label:'Discounted Item',type:'boolean',props:{}},\r\n    {key:'discountType',label:'Type of Discount',type:'select',props:{\r\n      dependency:['discountedItem'],menuItems:[{key:'percentage',value:'percentage'},{key:'amount',value:'amount'},{key:'quantity',value:'quantity'}]}},\r\n    {key:'discountValue',label:'Discount',type:'number',props:{dependency:['discountedItem','discountType']}},\r\n    {key:'offerDiscountType',label:'Type of Offer Discount',type:'select',props:{\r\n        dependency:['discountedItem'],\r\n        menuItems:[{key:'percentage',value:'percentage'},{key:'amount',value:'amount'},{key:'quantity',value:'quantity'}]\r\n      }  \r\n    },\r\n    {key:'offers',label:'Offer Name',props:{dependency:['discountedItem']}},\r\n    {key:'offerDiscount',label:'Offer Discount',type:'number',props:{dependency:['discountedItem','offerDiscountType']}},\r\n  ]\r\n};\r\n\r\n\r\nclass ProductForm extends Component<IProps> {\r\n  \r\n  render() {\r\n    return (\r\n      <>\r\n        <FormBuilder\r\n          url ={'/product'}\r\n          formName=\"Product\"\r\n          className ={'add'}\r\n          buttonTitle={'Product'}\r\n          form={defaultForm.productForm}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductForm;\r\n","const Configs = {\r\n    googleMaps:{\r\n        center:{lat:27.7172,lng:85.3240},\r\n        defaultZoom:10\r\n    }\r\n}\r\nexport default Configs\r\n\r\n","import Configs from 'configs/Configs';\r\nimport React from 'react';\r\nimport { GoogleMap,withScriptjs,withGoogleMap,Marker} from 'react-google-maps';\r\n\r\nfunction Map({storeData}) {\r\n    const {center,defaultZoom} = Configs.googleMaps;\r\n    // const [selected,setSelectedStore] = useState({})\r\n  return (\r\n    <GoogleMap defaultZoom={defaultZoom} defaultCenter={center}>\r\n        {storeData && storeData.location.map(store => \r\n        <Marker \r\n            key = {store.storeId}\r\n            position = {{lat:store.coordinates[0],lng:store.coordinates[1]}}\r\n        />)}\r\n    </GoogleMap>\r\n  );\r\n}\r\n//takes props googleMapsUrl loadingElement contaienrElement mapElement\r\nconst WrappedMap = withScriptjs(withGoogleMap(Map))\r\nexport default WrappedMap;\r\n","import WrappedMap from 'components/common/Map/Map'\r\nimport React from 'react'\r\n\r\nfunction ProfileView() {\r\n    return (\r\n        <div style = {{width:'100%',height:'500px'}}>\r\n             <WrappedMap\r\n                loadingElement= {<div style = {{height:'100%'}}> Loading ... </div>}\r\n                googleMapURL = {`${process.env.REACT_APP_GOOGLE_MAPS_URL}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`}\r\n                containerElement = {<div style = {{height:'100%'}}/>}\r\n                mapElement = {<div style = {{height:'100%'}}/>}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileView\r\n","import React, { Component } from 'react';\r\nimport FormBuilder from 'components/common/FormBuilder/FormBuilder';\r\nimport ProfileView from '../profile-view/ProfileView';\r\ninterface IProps {}\r\ninterface IState {\r\n}\r\nconst defaultForm = {\r\n  profileForm:[\r\n    {key:'image',label:'Upload Photo',type:'file', props:{multiple:false,round:true}},\r\n    {key:'username',label:'Shop Name',props:{}},\r\n    {key:'description',label:'Description',props:{}},\r\n    {key:'phone',label:'Phone',type:'number',props:{}},\r\n    {key:'temp_address',label:'Temporary Address',props:{dependency:['address'],type:'array'}},\r\n    {key:'permanent_address',label:'Permanent Address',props:{dependency:['address']}},\r\n    {key:'status',label:'Status',type:'select',props:{menuItems:[{key:'active',value:'active'},{key:'inactive',value:'inactive'}]}},\r\n    {key:'gender',label:'Gender',type:'select',props:{menuItems:[{key:'male',value:'male'},{key:'female',value:'female'},{key:'others',value:'others'}]}},\r\n  ]\r\n};\r\n\r\nclass ProfileForm extends Component<IProps> {\r\n  \r\n  render() {\r\n    return (\r\n      <>\r\n        <FormBuilder\r\n          url ={'/user'}\r\n          formName=\"Profile\"\r\n          className ={'edit'}\r\n          buttonTitle={'Profile'}\r\n          form={defaultForm.profileForm}\r\n        />\r\n        <ProfileView/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileForm;\r\n","import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\nconst Loader = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress color=\"secondary\" />\r\n    </div>\r\n  );\r\n}\r\nexport default Loader;","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MaterialTable from 'material-table';\r\nimport Loader from 'components/common/loader/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ButtonComponent from 'components/common/Button/ButtonComponent';\r\nimport './ProductView.scss';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport snack from './../../../utils/notification/Snackbar';\r\nimport {\r\n  addProduct,\r\n  deleteProduct,\r\n  fetchProducts,\r\n  handlePageNumber,\r\n  updateProduct,\r\n} from './../../../../actions/products/productActions';\r\nimport { axiosApi } from 'api/axios/axiosApi';\r\n\r\nfunction ProductViewComponent(props) {\r\n  const { currentPage, perPage, handlePageChange } = props;\r\n  // const {products:{data}} = product\r\n  const [data, setData]: any = useState([]);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const url = '/product';\r\n  const product = useSelector((state) => state.product);\r\n  const imageurl = process.env.REACT_APP_IMAGE_URL;\r\n  const [view, setView] = useState('');\r\n  const [columns, setColumns]: any = useState([]);\r\n  const desktopCols = [\r\n    {\r\n      title: 'Edit All',\r\n      render: (rowData) => (\r\n        <ButtonComponent\r\n          handlesubmit={() => history.push(`/add-product/${rowData._id}`)}\r\n          color={'secondary'}\r\n          classname={'btn-edit btn-edit-round'}\r\n          options={{\r\n            size: 'medium',\r\n            isSubmitting: false,\r\n            icon: 'description',\r\n            variantType: 'contained',\r\n          }}\r\n          type=\"button\"\r\n          value=\"Detailed Edit\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Photo',\r\n      field: 'image',\r\n      editable: 'never',\r\n      render: (rowData) => (\r\n        <img\r\n          style={{ height: 50, borderRadius: '5%' }}\r\n          src={`${imageurl}/${rowData.image}`}\r\n          alt={rowData.image}\r\n        />\r\n      ),\r\n    },\r\n    { title: 'Name', field: 'name' },\r\n    { title: 'Category', field: 'category' },\r\n    { title: 'Sub Category', field: 'subCategory' },\r\n    { title: 'Price', field: 'price', type: 'numeric' },\r\n    { field: 'brand', title: 'Brand', props: {} },\r\n    { field: 'description', title: 'Description', props: {} },\r\n    { field: 'quantity', title: 'Quantity', type: 'numeric', props: {} },\r\n  ];\r\n\r\n  const mobilecols = [\r\n    {\r\n      title: 'Photo',\r\n      field: 'image',\r\n      editable: 'never',\r\n      render: (rowData) => (\r\n        <img\r\n          style={{ height: 50, borderRadius: '5%' }}\r\n          src={`${imageurl}/${rowData.image}`}\r\n          alt={rowData.image}\r\n        />\r\n      ),\r\n    },\r\n    { title: 'Name', field: 'name' },\r\n    { title: 'Category', field: 'category' },\r\n    { title: 'Price', field: 'price', type: 'numeric' },\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    const resizeEvent = () => {\r\n     \r\n      if (window.innerWidth <= 678) {\r\n        if (view === 'mobile') {\r\n          return;\r\n        }\r\n        setColumns(mobilecols);\r\n        setView('mobile');\r\n      } else {\r\n        if (view === 'desktop') {\r\n          return;\r\n        }\r\n        setColumns(desktopCols);\r\n        setView('desltop');\r\n      }\r\n    };\r\n    function resize() {\r\n      if(window.innerWidth <= 678 && view === ''){\r\n        setView('mobile')\r\n        setColumns(mobilecols)\r\n      }else{\r\n        setView('desktop');\r\n        setColumns(desktopCols);\r\n      }\r\n      window.addEventListener('resize', resizeEvent);\r\n    }\r\n    resize();\r\n    return () => {\r\n      window.removeEventListener('resize', resizeEvent);\r\n    };\r\n  }, []);\r\n\r\n  // const handleNext = () => {\r\n  //   let lastPage = 10;\r\n  //   //todo get total data/perPage\r\n  //   if (currentPage !== lastPage) {\r\n  //     handlePageChange(currentPage + 1);\r\n  //     dispatch(fetchProducts(currentPage));\r\n  //   }\r\n  // };\r\n\r\n  // const handlePrevious = () => {\r\n  //   const { currentPage, handlePageChange } = props;\r\n  //   if (currentPage !== 1) {\r\n  //     handlePageChange(currentPage - 1);\r\n  //     dispatch(fetchProducts(currentPage));\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   loadData();\r\n  // }, []);\r\n\r\n  // const loadData = (perPage = 5, currentPage = 1) => {\r\n  //   dispatch(fetchProducts(perPage, currentPage));\r\n  // };\r\n\r\n  return props.isLoading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Grid container className=\"material-table-wrapper wrapper\">\r\n      <MaterialTable\r\n        title=\"My Products\"\r\n        columns={columns}\r\n        data={(query) =>\r\n          new Promise((resolve, reject) => {\r\n            let url = '/product?';\r\n            axiosApi\r\n              .get(\r\n                url,\r\n                {\r\n                  params: {\r\n                    currentPage: query.page + 1,\r\n                    perPage: query.pageSize,\r\n                  },\r\n                },\r\n                true,\r\n              )\r\n              .then((res: any) => {\r\n                resolve({\r\n                  data: res.data,\r\n                  page: query.page,\r\n                  totalCount: res.count,\r\n                });\r\n              })\r\n              .catch((err) => {\r\n                reject();\r\n              });\r\n          })\r\n        }\r\n        // data={props.data}\r\n        options={{\r\n          exportButton: true,\r\n          search: false,\r\n        }}\r\n        editable={{\r\n          isEditHidden: () => view === 'mobile',\r\n          onRowAdd: (newData) =>\r\n            new Promise((resolve, reject) => {\r\n              // dispatch(addProduct(newData,true))\r\n              // resolve();\r\n              axiosApi\r\n                .post(`${url}`, newData, {}, true)\r\n                .then((response: any) => {\r\n                  setData([...data, response.data]);\r\n                  snack.showSuccess(`${newData.name} added successfully`);\r\n                  resolve();\r\n                })\r\n                .catch((err) => {\r\n                  snack.handleError(err);\r\n                  reject();\r\n                });\r\n            }),\r\n          onRowUpdate: (newData: any, oldData: any) =>\r\n            new Promise((resolve, reject) => {\r\n              // dispatch(updateProduct(newData,true))\r\n              // resolve();\r\n              axiosApi\r\n                .put(`${url}/${newData._id}`, newData, {}, true)\r\n                .then((data: any) => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n                  snack.showSuccess(`${newData.name} updated successfully`);\r\n                  resolve();\r\n                })\r\n                .catch((err) => {\r\n                  reject();\r\n                });\r\n            }),\r\n          onRowDelete: (oldData: any) =>\r\n            new Promise((resolve, reject) => {\r\n              // dispatch(deleteProduct(oldData._id,true))\r\n              // resolve();\r\n              axiosApi\r\n                .remove(`${url}/${oldData._id}`, true)\r\n                .then((response: any) => {\r\n                  const dataDelete = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setData([...dataDelete]);\r\n                  snack.showSuccess(`${oldData.name} removed successfully`);\r\n                  resolve();\r\n                })\r\n                .catch((err) => {\r\n                  snack.handleError(err.data);\r\n                  reject();\r\n                });\r\n            }),\r\n        }}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoading: state.product.isLoading,\r\n  data: state.product.products.data,\r\n  perPage: state.product.perPage,\r\n  currentPage: state.product.currentPage,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchProducts: (perPage, currentPage) =>\r\n    dispatch(fetchProducts(perPage, currentPage)),\r\n  handlePageChange: (pageNumber) => dispatch(handlePageNumber(pageNumber)),\r\n});\r\n\r\nexport const ProductView = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(ProductViewComponent);\r\n","import React, { Component } from 'react';\r\nimport * as io from 'socket.io-client';\r\nimport { Box, Typography, Input, Button } from '@material-ui/core';\r\nimport './MessageComponent.scss';\r\nimport { getItem } from 'components/utils/localStorage/LocalStorage';\r\nimport Moment from './../../utils/utils'\r\nimport Snackbar from 'components/utils/notification/Snackbar';\r\nclass MessageComponent extends Component {\r\n  state = {\r\n    data: {\r\n      message: '',\r\n      senderId: '',\r\n      username: '',\r\n      reciverId: '',\r\n      recieverName: '',\r\n      time: '',\r\n    },\r\n    messages: [],\r\n    users: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.user = JSON.parse(getItem('user'));\r\n    this.socket = io(process.env.REACT_APP_SOCKET_URL);\r\n    this.runSocket();\r\n  }\r\n  componentWillUnmount() {\r\n      this.socket.emit('disconnect');\r\n  }\r\n\r\n  runSocket = () => {\r\n    this.socket.on('connect', () => {\r\n      console.log('connected to socket');\r\n    });\r\n    this.socket.emit('new-user',{username:this.user.username,name:this.user.name})\r\n    this.socket.on('rply-msg', (data) => {\r\n      const { messages } = this.state;\r\n      messages.push(data);\r\n      this.setState((pre) => ({\r\n        ...pre,\r\n        messages,\r\n      }));\r\n    });\r\n\r\n    this.socket.on('rply-msg-to', (data) => {\r\n      const { messages } = this.state;\r\n      messages.push(data);\r\n      this.setState((pre) => ({\r\n        ...pre,\r\n        data:{...pre.data,reciverId:data.senderId},\r\n        messages,\r\n      }));\r\n    });\r\n    this.socket.on('user',data => {\r\n      console.log(data,'users gettinhg')\r\n      let senderId;\r\n        data.forEach((user,i) => {\r\n          if(user.username === this.user.username){\r\n            senderId = user.id;\r\n          }\r\n        })\r\n        this.setState(prev =>({\r\n            ...prev,\r\n            data:{...prev.data,senderId},\r\n            users:data\r\n        }))\r\n    })\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      data: { ...prevState.data, [name]: value },\r\n    }));\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    console.log(this.state.data)\r\n    e.preventDefault();\r\n    if(!this.state.data.reciverId){\r\n      return Snackbar.showInfo('Please select user to send Message')\r\n    }\r\n    const data = {\r\n      ...this.state.data,\r\n    };\r\n    data.userid = this.user._id;\r\n    data.username = this.user.username;\r\n    data.time = new Date();\r\n    this.socket.emit('new-message', data);\r\n    this.setState(prev => ({\r\n      ...prev,\r\n      data:{...prev.data,message:''}\r\n    }))\r\n  };\r\n\r\n  selectUser = (user) => {\r\n      this.setState(prev => ({\r\n        ...prev,\r\n        data:{...prev.data,reciverId:user.id,\r\n        recieverName:user.username}\r\n      }))\r\n  }\r\n  render() {\r\n    const username = this.user && this.user.username\r\n    const { message } = this.state.data;\r\n    let msgContent = this.state.messages && this.state.messages.map((message,index) => {\r\n      return (\r\n        <li className={`message message-${ message.username && username === message.username?'right':'left'}`} key={index}>\r\n          <Typography variant=\"subtitle1\">{message.message}</Typography>\r\n          <Typography variant=\"subtitle2\">{message.username}</Typography>\r\n          <Typography variant=\"caption\">\r\n            <small> {Moment.formatDate(message.time)}</small>\r\n          </Typography>\r\n        </li>\r\n      );\r\n    });\r\n    let usrContent = this.state.users && this.state.users.map((user,index) => {\r\n        return (\r\n          <li className={`user `} key={index}>\r\n            <Typography onClick = {() => this.selectUser(user)} variant=\"subtitle2\">{user.username}</Typography>\r\n          </li>\r\n        );\r\n      });\r\n    return (\r\n      <Box className=\"messages-wrapper\">\r\n        <Box className=\"messages-container\">\r\n          <Box className=\"messages\">\r\n            <Typography variant=\"h5\">Messages</Typography>\r\n            <Box className=\"message-box\">\r\n                <ul>\r\n                    {msgContent}\r\n                </ul>\r\n            </Box>\r\n            <form className=\"message-control\" onSubmit={this.handleSubmit}>\r\n              <Input\r\n                name=\"message\"\r\n                value={message}\r\n                onChange={this.handleChange}\r\n                className=\"msg-input\"\r\n              ></Input>\r\n              <Button type=\"submit\">Send</Button>\r\n            </form>\r\n          </Box>\r\n          <Box className=\"users-list\">\r\n             \r\n            <Typography variant=\"h5\">Users</Typography>\r\n            <Box className=\"users-box\">\r\n            <ul>\r\n                  {usrContent}\r\n              </ul>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageComponent;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport './ProductCardDetail.scss';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NumberWithCommas } from 'components/utils/numbers/numbers';\r\nimport { fetchDetails, likeProduct, unlikeProduct } from 'actions/products/productActions';\r\nimport Loader from 'components/common/loader/Loader';\r\nimport { addToCart } from 'actions/cart/cartActions';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default function ProductCardDetail() {\r\n  const classes = useStyles();\r\n  const imageurl = process.env.REACT_APP_IMAGE_URL;\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state) => state.product.productDetails);\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const { id }: any = params;\r\n  const {user:{_id},isLoggedin} = auth;\r\n  const isLoved = data.loves && data.loves.includes(_id);\r\n  // const [data,setData]:any = React.useState({});\r\n  React.useEffect(() => {\r\n    dispatch(fetchDetails(id));\r\n  }, [id]);\r\n\r\n  const handleLove = () => {\r\n    isLoved ? dispatch(unlikeProduct(_id,data,isLoggedin,'productDetails')) : dispatch(likeProduct(_id,data,isLoggedin,'productDetails'))\r\n  } \r\n\r\n  return data ? (\r\n    <Box className={`${classes.root} card-detail-wrapper container`}>\r\n      {/* <CardActionArea> */}\r\n      <Box className=\"card-background\">\r\n        <Box className=\"gradient\" color=\"blue\"></Box>\r\n        <Box className=\"gradient\" color=\"green\"></Box>\r\n        <Box className=\"gradient\" color=\"orange\"></Box>\r\n        <Box className=\"gradient\" color=\"black\"></Box>\r\n        <Box className=\"gradient\" color=\"red\"></Box>\r\n        <CardMedia\r\n          className=\"product-image\"\r\n          component=\"img\"\r\n          alt={data.name}\r\n          height=\"350\"\r\n          width=\"350\"\r\n          image={\r\n            data.image\r\n              ? `${imageurl}/${data.image}`\r\n              : 'https://commercial.bunn.com/img/image-not-available.png'\r\n          }\r\n          title={data.name}\r\n        />\r\n        <span className=\"brand\">{data.brand && data.brand}</span>\r\n        <Button className={`${isLoved? 'love-ed' : 'love'}`} onClick={handleLove}>\r\n            {!isLoved && <Icon>favorite_border</Icon>}\r\n            {isLoved && <Icon>favorite</Icon>}\r\n        </Button>\r\n      </Box>\r\n      <CardContent className=\"card-info\">\r\n        <Box className=\"card-name\">\r\n          <Typography gutterBottom variant=\"h4\">\r\n            {data.name}\r\n          </Typography>\r\n          <span className=\"new\"> new</span>\r\n        </Box>\r\n        <Box className=\"card-description\">\r\n          <Typography className=\"title-label\" variant=\"h5\">\r\n            Product info\r\n          </Typography>\r\n          <Typography\r\n            className=\"title\"\r\n            variant=\"body2\"\r\n            color=\"textSecondary\"\r\n            component=\"p\"\r\n          >\r\n            {data.description}\r\n          </Typography>\r\n        </Box>\r\n        {data.color && data.color.length > 0 && (\r\n          <Box className=\"color-container\">\r\n            <Typography className=\"title-label\" variant=\"h5\">\r\n              Colors\r\n            </Typography>\r\n            <Box className=\"colors\">\r\n              {/* <span className=\"color\" color=\"blue\"></span> */}\r\n              {data.color &&\r\n                data.color.map((color) => (\r\n                  <span key={color} className=\"color\" color={color}></span>\r\n                ))}\r\n              {/* <span className=\"color active\" color=\"black\"></span>\r\n              <span className=\"color\" color=\"red\"></span>\r\n              <span className=\"color\" color=\"rose-gold\"></span> */}\r\n            </Box>\r\n          </Box>\r\n        )}\r\n        <Box className=\"size-container\">\r\n          <Typography className=\"title-label\" variant=\"h6\">\r\n            size\r\n          </Typography>\r\n          <Box className=\"sizes\">\r\n            <span className=\"size active\">pro</span>\r\n            <span className=\"size\">max</span>\r\n          </Box>\r\n        </Box>\r\n        <Box className=\"card-price\">\r\n          <Box className=\"price\">\r\n            <Button\r\n              className=\"buy\"\r\n              onClick={() => dispatch(addToCart(data._id))}\r\n            >\r\n              <Icon>add_shopping_cart</Icon>\r\n              Add to Cart\r\n            </Button>\r\n            <Typography className=\"currency title-label\" variant=\"h6\">\r\n              Rs\r\n            </Typography>\r\n            <Typography variant=\"h6\" color=\"textPrimary\">\r\n              {NumberWithCommas(parseInt(data.price))}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </CardContent>\r\n      {/* </CardActionArea> */}\r\n    </Box>\r\n  ) : (\r\n    <Loader />\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, CardMedia, Grid, Typography } from '@material-ui/core';\r\nimport { addToCart,deleteCartItem } from 'actions/cart/cartActions';\r\nimport './Cart.scss';\r\n\r\nfunction Cart() {\r\n  const imageurl = process.env.REACT_APP_IMAGE_URL;\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const { id, qty } = params;\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  useEffect(() => {\r\n    function addToCartInit(){\r\n      if (id) {\r\n        dispatch(addToCart(id, qty));\r\n      }\r\n    };\r\n    addToCartInit();\r\n  }, [id,qty]);\r\n\r\n  const handleCheckout = () => {\r\n    history.push('/signin?redirect=shipping');\r\n  };\r\n  return (\r\n      <>\r\n      <Typography variant=\"h5\">My Cart</Typography>\r\n      <Grid container direction=\"column\" className=\"cart\">\r\n      {cartItems &&\r\n      <Grid container className=\"cart-list \">\r\n          {cartItems.map((item) => {\r\n            return (\r\n              <Grid item xs={12} sm ={7} className = 'cart-list-item container'>\r\n                <CardMedia\r\n                  className=\"cart-list-item-image\"\r\n                  component=\"img\"\r\n                  alt={item && item.description}\r\n                  height=\"100\"\r\n                  width=\"100\"\r\n                  image={\r\n                    item && item.image\r\n                      ? `${imageurl}/${item && item.image}`\r\n                      : 'https://commercial.bunn.com/img/image-not-available.png'\r\n                  }\r\n                  title={item && item.name}\r\n                />\r\n                <div className = 'cart-list-item-info'>\r\n                <Typography>\r\n                  Item:{item.name}\r\n                </Typography>\r\n                  <Typography>\r\n                  Price: Rs{item.price}\r\n                  </Typography>\r\n                </div>\r\n                <div className = 'cart-list-item-actions'>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  className=\"btn-delete \"\r\n                  onClick={() => dispatch(deleteCartItem(item.id))}\r\n                >\r\n                  Remove\r\n                </Button>\r\n                </div>\r\n              </Grid>\r\n            );\r\n                \r\n          })}\r\n          </Grid>\r\n      }\r\n      {cartItems.length === 0 ? (\r\n        <Grid item xs ={12}  className=\"cart-empty container\">\r\n          <Typography variant=\"h6\">OOPS! Your Cart is Empty</Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => history.push('/')}\r\n          >\r\n            Shop Now\r\n          </Button>\r\n        </Grid>\r\n      ) : (\r\n        <div className=\"cart-checkout\">\r\n        <Grid container  className='details' >\r\n          <Typography>Items in Cart : {cartItems.length}</Typography>\r\n          <Typography variant=\"h6\">\r\n            {' '}\r\n            Total : {cartItems.reduce((acc, item) => item.price + acc, 0)}\r\n          </Typography>\r\n         \r\n        </Grid>\r\n        <div className = 'cta'>\r\n          <Button className=\"btn btn-pay\" variant=\"contained\" color=\"primary\" onClick = {handleCheckout}>\r\n            Proceed To Checkout\r\n          </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            Developer :Sushicodee\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport {LoginComponent} from 'components/auth/Login/LoginComponent';\r\nimport SignupComponent from 'components/auth/Login/SignupComponent';\r\nimport NotFound from 'components/NotFound/NotFound';\r\nimport Dashboard from 'components/dashboard/Dashboard';\r\nimport ProtectedRoutes from './protected/ProtectedRoutes';\r\nimport PublicRoutes from './public/PublicRoutes';\r\nimport HomeComponent from 'components/dashboard/home/HomeComponent';\r\nimport ProductForm from 'components/dashboard/product/product-form/ProductForm';\r\nimport ProfileForm from 'components/dashboard/profile/profile-form/ProfileForm';\r\nimport {ProductView} from 'components/dashboard/product/product-view/ProductView';\r\nimport ProductSearchComponent from 'components/dashboard/product/product=search/ProductSearchComponent';\r\nimport MessageComponent from 'components/dashboard/messages/MessageComponent';\r\nimport ProductCardDetail from 'components/common/Cards/product/ProductCardDetail';\r\nimport Cart from 'components/dashboard/cart/Cart';\r\nimport About from 'components/dashboard/about/About';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <>\r\n      {/* <Header isLoggedin={isLoggedin}></Header> */}\r\n      <Switch>\r\n        <PublicRoutes exact path=\"/\" component = {HomeComponent}/>\r\n        <PublicRoutes path=\"/login\" component={LoginComponent} />\r\n        <PublicRoutes path=\"/signup\" component={SignupComponent} />\r\n        <ProtectedRoutes path ='/dashboard' component = {Dashboard}/>\r\n        <ProtectedRoutes path ='/add-product/:id' component = {ProductForm}/>\r\n        <ProtectedRoutes path ='/about' component = {About}/>\r\n        <ProtectedRoutes path ='/add-product' component = {ProductForm}/>\r\n        <ProtectedRoutes path ='/my-products' component = {ProductView}/>\r\n        <ProtectedRoutes path ='/messages' component = {MessageComponent}/>\r\n        <ProtectedRoutes path ='/profile' component = {ProfileForm}/>\r\n        <ProtectedRoutes path ='/cart/:id?' component = {Cart}/>\r\n        <PublicRoutes path = '/products/search/:category?/:subCategory?' component = {ProductSearchComponent}/>\r\n        <PublicRoutes path = '/details/:id'  component = {ProductCardDetail}/>\r\n        <PublicRoutes component={NotFound} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import produce from 'immer';\r\nimport {\r\n  FETCH_PRODUCTS,\r\n  FETCH_SEARCH_PRODUCTS,\r\n  FETCH_CATEGORIES,\r\n  FETCH_SUBCATEGORIES,\r\n  SET_IS_LOADING,\r\n  SET_PAGE_NUMBER,\r\n  SET_FILTER_CONDITION,\r\n  ADD_PRODUCT,\r\n  DELETE_PRODUCT,\r\n  UPDATE_PRODUCT,\r\n  FETCH_ATTRIBUTES,\r\n  FETCH_PRODUCT_DETAILS,\r\n  FETCH_ALL_PRODUCTS,\r\n  LIKE_PRODUCT,\r\n  UNLIKE_PRODUCT,\r\n} from 'actions/products/types';\r\n\r\nconst initialState = {\r\n  allProducts:[],\r\n  products: [],\r\n  searchResults: [],\r\n  searchCount:0,\r\n  isLoading: false,\r\n  currentPage: 1,\r\n  perPage: 5,\r\n  categories: [],\r\n  subCategories: [],\r\n  filterCondition: {filters:{},options:{},count:0},\r\n  attributes: {},\r\n  productDetails: {},\r\n  mainCategories:[],\r\n  selectedMainCategory:'',\r\n};\r\n\r\n// export const productReducer = (state = initialState, action) => {\r\nconst productReducer = (draft, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PRODUCTS: {\r\n      draft.products = action.payload;\r\n      return;\r\n    }\r\n    case FETCH_ALL_PRODUCTS: {\r\n      draft.allProducts = action.payload;\r\n      return;\r\n    }\r\n\r\n    case FETCH_PRODUCT_DETAILS:\r\n      draft.productDetails = action.payload;\r\n      return;\r\n\r\n    case ADD_PRODUCT: {\r\n      draft.products.push(action.payload)\r\n      return;\r\n    }\r\n\r\n    case DELETE_PRODUCT: {\r\n      draft.products = draft.products.filter((p) => p.__id !== action.payload);\r\n      return;\r\n    }\r\n    case UPDATE_PRODUCT: {\r\n      draft.products = draft.products.map((product) => {\r\n        if (product._id === action.payload.__id) {\r\n          return action.payload;\r\n        }\r\n        return product;\r\n      })\r\n      return;\r\n    }\r\n\r\n    case SET_FILTER_CONDITION: {\r\n      draft.filterCondition[action.payload.filterKey][action.payload.key] = action.payload.condition\r\n      draft.filterCondition.count++;\r\n      return;\r\n    }\r\n\r\n  \r\n    case SET_IS_LOADING: {\r\n      draft.isLoading = action.payload;\r\n      return;\r\n    \r\n    }\r\n    case SET_PAGE_NUMBER: {\r\n      draft.currentPage = action.payload;\r\n      return;\r\n    }\r\n\r\n    case FETCH_CATEGORIES: {\r\n      draft.mainCategories = action.payload;\r\n      // draft.categories = action.payload;\r\n      return;\r\n    }\r\n\r\n    case FETCH_SUBCATEGORIES: {\r\n      let subCategories = [];\r\n      let sub = [];\r\n      draft.selectedCategories.forEach((cat) => {\r\n        let subs = draft.searchResults.filter((item) => item.category === cat);\r\n        subCategories = [draft.subCategories,subs];\r\n      });\r\n      subCategories.forEach((data) => {\r\n        if (data.subCategory && sub.includes(data.subCategory)) {\r\n        } else {\r\n          sub.push(data.subCategory);\r\n        }\r\n      });\r\n      draft.subCategories = subCategories;\r\n      return;\r\n    }\r\n\r\n    case FETCH_ATTRIBUTES: {\r\n      const attr = {};\r\n      const keys = ['brand','category','color','price'];\r\n      const products = draft.searchResults;\r\n      if(Object.keys(draft.filterCondition).length === 0){\r\n        products.filter(prod => {\r\n          for(let key in draft.filterCondition){\r\n            return draft.filterCondition[key].includes(prod[key])\r\n          }\r\n      })\r\n      }\r\n      products.forEach(prod => {\r\n        keys.forEach(key => {\r\n          if(prod[key] && attr[key] === undefined){\r\n            attr[key] = [prod[key]]\r\n          }\r\n          else if(prod[key]  && attr[key].indexOf(prod[key] === -1)){\r\n            attr[key].push(prod[key])\r\n          }\r\n        })\r\n      })\r\n      keys.forEach(key => {\r\n        attr[key] = [...new Set(attr[key])]\r\n      })\r\n      draft.attributes = attr;\r\n      return;\r\n    }\r\n    /* search products page */\r\n    case FETCH_SEARCH_PRODUCTS: {\r\n      draft.searchResults = action.payload.data;\r\n      draft.searchCount = action.payload.count;\r\n      return;\r\n    }\r\n\r\n    case LIKE_PRODUCT: {\r\n      draft.searchResults = draft.searchResults.map((product) => {\r\n        if (product._id === action.payload._id) {\r\n          return action.payload;\r\n        }\r\n        return product;\r\n      })\r\n      return;\r\n    }\r\n\r\n    case UNLIKE_PRODUCT: {\r\n      draft.searchResults = draft.searchResults.map((product) => {\r\n        if (product._id === action.payload._id) {\r\n          return action.payload;\r\n        }\r\n        return product;\r\n      })\r\n      return;\r\n    }\r\n    default:\r\n      return draft;\r\n  }\r\n};\r\n\r\nexport const curriedProductReducer = produce(productReducer,initialState);\r\n","import { getItem } from 'components/utils/localStorage/LocalStorage';\r\nimport {\r\n  LOGIN_FALIURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  SET_IS_LOADING\r\n} from './../actions/user/types';\r\n\r\nlet user = JSON.parse(getItem('user')) || {};\r\n\r\nconst initialState = {\r\n  user: user,\r\n  isAuthenticated: false,\r\n  isAuthorized:user && user.role ? true : false,\r\n  isSubmitting: false,\r\n  isLoggedin: user && user.role ? true : false,\r\n  errorMessage: '',\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        isSubmitting: true,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedin: true,\r\n        isSubmitting: false,\r\n        isAuthorized:true,\r\n        isAuthenticated:true,\r\n        user: action.payload,\r\n      };\r\n    case SET_IS_LOADING:\r\n      return {\r\n        ...state,\r\n        isSubmitting: action.payload,\r\n      };\r\n    case LOGIN_FALIURE:\r\n      return {\r\n        ...state,\r\n        isSubmitting: false,\r\n        errorMessage: action.payload,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n          ...state,\r\n          isAuthorized:false,\r\n          isAuthenticated:false,\r\n          isLoggedin:false,\r\n          user:{}\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { getItem, setItem } from 'components/utils/localStorage/LocalStorage';\r\nimport {SET_PROGRESS, TOGGLE_THEME} from './../actions/app/types';\r\n\r\nconst theme = getItem('theme') || 'light' \r\ndocument.body.classList.add(theme);\r\nconst initialState = {\r\n    theme:theme,\r\n    progress:false,\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case SET_PROGRESS: \r\n        return {\r\n            ...state,\r\n            progress:action.payload\r\n        }\r\n        case TOGGLE_THEME: \r\n        const theme = state.theme === 'light'?'dark':'light';\r\n        setItem('theme',theme);\r\n        return {\r\n            ...state,\r\n            theme\r\n        }\r\n        default :return state;\r\n    }\r\n}","import { CART_ADD_ITEM, CART_DELETE_ITEM } from 'actions/cart/types';\r\nconst INITIAL_STATE = {\r\n  cartItems: [],\r\n};\r\nexport const cartReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      const product = state.cartItems.find((p) => p.id === item.id);\r\n      if (product) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((p) => (p.id === item.id ? item : p)),\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        cartItems: [...state.cartItems, item],\r\n      };\r\n    case CART_DELETE_ITEM:\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems.filter(p => p.id !== action.payload)],\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ADD_TO_FAVORITES, REMOVE_FROM_FAVORITES,FAVORITES_CLEAR_ALL} from 'actions/favorites/types';\r\nconst INITIAL_STATE = {\r\n  favoriteItems: [],\r\n};\r\nexport const favoritesReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_FAVORITES:\r\n      return {\r\n        ...state,\r\n        favoriteItems: action.payload,\r\n      };\r\n    case REMOVE_FROM_FAVORITES:\r\n        return {\r\n          ...state,\r\n          favoriteItems: action.payload,\r\n    };\r\n    case FAVORITES_CLEAR_ALL:\r\n        state = INITIAL_STATE;\r\n        return{\r\n            state\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};","import {curriedProductReducer} from './productReducer';\r\nimport {authReducer} from './authReducer';\r\nimport {combineReducers} from 'redux';\r\nimport { appReducer } from './appReducer';\r\nimport {cartReducer} from './cartReducer';\r\nimport {favoritesReducer} from './favoritesReducer';\r\n\r\nexport default combineReducers({\r\n    product:curriedProductReducer,\r\n    auth:authReducer,\r\n    app:appReducer,\r\n    cart:cartReducer,\r\n    favorite:favoritesReducer,\r\n})\r\n","export const ADD_TO_FAVORITES = 'ADD_TO_FAVORITES';\r\nexport const REMOVE_FROM_FAVORITES = 'REMOVE_FROM_FAVORITES';\r\nexport const FAVORITES_CLEAR_ALL = 'FAVORITES_CLEAR_ALL'; ","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './../reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware)),\r\n);\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport Routes from 'routes/Routes';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from 'store/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport {createMuiTheme,MuiThemeProvider} from '@material-ui/core'\r\nimport { getItem } from './utils/localStorage/LocalStorage';\r\nconst App: React.FC = () => {\r\n  const theme = createMuiTheme({\r\n    palette:{\r\n      type:getItem('theme') === 'dark' ? 'dark' :'light'\r\n    }\r\n  })\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        {/* <MuiThemeProvider theme = {theme}> */}\r\n        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n          <Router>\r\n            <Routes />\r\n          </Router>\r\n        </MuiPickersUtilsProvider>\r\n        {/* </MuiThemeProvider> */}\r\n        <ToastContainer containerId=\"an id\" draggable={false} />\r\n      </Provider>\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { StylesProvider } from '@material-ui/core/styles';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    // <Router>\r\n      <StylesProvider injectFirst>\r\n        <App />\r\n      </StylesProvider>,\r\n    // </Router>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}