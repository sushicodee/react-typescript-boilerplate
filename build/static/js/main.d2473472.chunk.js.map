{"version":3,"sources":["components/copyright/Copyright.tsx","components/auth/Login/validation/LoginValidation.ts","components/utils/localStorage/LocalStorage.js","api/axios/axiosApi.ts","components/utils/notification/Snackbar.tsx","actions/user/authActions.js","actions/user/types.js","components/auth/Login/LoginComponent.tsx","components/auth/Login/SignupComponent.tsx","components/NotFound/NotFound.tsx","components/dashboard/Dashboard.tsx","components/common/Theme/Theme.jsx","actions/app/appActions.js","actions/app/types.js","components/header/optionsTray/OptionsTray.jsx","actions/products/productActions.js","actions/products/types.js","components/header/Header.tsx","routes/protected/ProtectedRoutes.tsx","routes/public/PublicRoutes.tsx","components/common/Button/ButtonComponent.tsx","components/common/CustomSelect/CustomSelect.jsx","components/dashboard/product/product-filter/ProductFilterComponent.jsx","components/utils/numbers/numbers.js","actions/cart/cartActions.js","actions/cart/types.js","components/common/Cards/product/ProductCard.tsx","components/common/Pagination/PaginationComponent.jsx","components/dashboard/product/product=search/ProductSearchComponent.tsx","components/dashboard/home/HomeComponent.tsx","components/common/Input/InputComponent.tsx","components/common/FileUploadButton/FileUploadButton.tsx","components/common/Checkbox/CheckboxComponent.tsx","components/common/DatePicker/DatePicker.tsx","components/common/Select/SelectComponent.tsx","components/utils/utils.js","components/common/ColorPicker/ColorPicker.jsx","components/common/FormBuilder/FormBuilder.jsx","components/dashboard/product/product-form/ProductForm.tsx","configs/Configs.js","components/common/Map/Map.jsx","components/dashboard/profile/profile-view/ProfileView.jsx","components/dashboard/profile/profile-form/ProfileForm.tsx","components/common/loader/Loader.tsx","components/dashboard/product/product-view/ProductView.tsx","components/dashboard/messages/MessageComponent.jsx","components/common/Cards/product/ProductCardDetail.tsx","components/dashboard/cart/Cart.jsx","routes/Routes.tsx","reducers/productReducer.js","reducers/authReducer.js","reducers/appReducer.js","reducers/cartReducer.js","reducers/index.js","store/store.js","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["Copyright","Typography","variant","color","align","Link","Date","getFullYear","ValidateEmail","email","test","validateForm","key","state","options","form","errors","errorMessage","isError","data","length","Object","values","filter","err","setItem","name","value","localStorage","removeItem","getItem","http","axios","create","baseURL","process","responseType","httpHeaders","isSecure","axiosApi","get","url","params","Promise","resolve","reject","headers","then","response","catch","post","put","remove","delete","uploadFile","method","files","xhr","XMLHttpRequest","formData","FormData","append","onreadystatechange","readyState","console","log","status","open","send","msg","toast","success","info","error","defaultMessage","message","logout","dispatch","clear","type","setLoading","payload","Login","username","password","rememberMe","isSubmitting","touched","handleChange","e","target","checked","setState","prevState","loginError","handleSubmit","preventDefault","history","props","loginUser","push","auth","this","isLoggedin","isAuthorized","classes","submitting","submit","Component","LoginComponent","connect","Snackbar","user","token","JSON","stringify","finally","login","withStyles","paper","marginTop","display","flexDirection","alignItems","avatar","margin","backgroundColor","width","logging","SignupComponent","firstName","lastName","confirmPassword","snack","setTimeout","submitButtonClass","isInvalid","Container","component","maxWidth","CssBaseline","className","Avatar","noValidate","onSubmit","Grid","container","spacing","item","xs","sm","TextField","autoComplete","required","onChange","fullWidth","id","label","autoFocus","FormControlLabel","control","Checkbox","Button","disabled","justify","to","Box","mt","NotFound","Dashboard","Theme","useState","selectedTheme","setTheme","useDispatch","theme","useSelector","app","useEffect","document","body","classList","add","onClick","data-icon","data-inline","Navbar","children","NavItem","useHistory","cartItems","cart","setOpen","ClickAwayListener","onClickAway","path","Icon","icon","DropdownMenu","activeMenu","setActiveMenu","menuHeight","setMenuHeight","dropdownRef","useRef","calcHeight","el","height","offsetHeight","firstChild","clientHeight","DropdownItem","handleItemClick","goToMenu","leftIconComponent","leftIcon","rightIcon","current","style","ref","CSSTransition","in","timeout","classNames","unmountOnExit","onEnter","alt","src","image","OptionsTray","fetchProducts","perPage","currentPage","setFilterCondition","condition","filterKey","useStyles","makeStyles","createStyles","list","fullList","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","breakpoints","up","searchIcon","padding","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","Header","toggle","settoggle","a","AppBar","Toolbar","IconButton","edge","cur","clsx","role","SwipeableDrawer","anchor","onClose","onOpen","iconName","map","index","Divider","List","ListItem","ListItemIcon","ListItemText","primary","render","PublicRoutes","ButtonComponent","handlesubmit","size","variantType","classname","aria-label","CustomSelect","queryName","multiple","filterCondition","product","React","selected","setSelected","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","setWidth","handleClose","resizeEvent","clientWidth","window","addEventListener","removeEventListener","count","conditionData","changeFilter","selectedName","button","event","currentTarget","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","Boolean","slice","Math","max","MenuItem","includes","ind","indexOf","oldSelected","splice","pre","handleChangeMultiple","option","handleMenuItemClick","memo","attributes","category","brand","sortItems","useMemo","NumberWithCommas","val","toString","replace","addToCart","prodId","qty","_id","price","description","quantity","ProductCard","Card","CardActionArea","CardMedia","title","CardContent","CardActions","PaginationComponent","setPage","Pagination","page","ProductSearchComponent","searchResults","searchCount","isLoading","keys","forEach","undefined","searchProducts","loadData","Array","fill","md","lg","Skeleton","productData","ceil","HomeComponent","InputComponent","handlechange","inputType","setdisplay","currency","setCurrency","inputProps","startAdornment","InputAdornment","isArray","dependency","InputLabelProps","shrink","InputProps","root","input","FileUploadButton","accept","htmlFor","round","split","formControl","CheckboxComponent","FormControl","MaterialUIPickers","format","KeyboardButtonProps","minWidth","SelectComponent","menuItems","InputLabel","Select","labelId","defaultValue","formatDate","date","moment","formatTime","formatSetDate","ColorPicker","handleSelect","copy","entries","aliceblue","antiquewhite","whitesmoke","darkred","crimson","red","midnightblue","mediumblue","dodgerblue","cyan","gold","goldenrod","yellow","darkgreen","lime","greenyellow","seagreen","springgreen","darkorange","chocolate","coral","purple","blueviolet","fuchsia","deeppink","hotpink","lightpink","black","dimgray","formName","buttonTitle","useParams","setdata","setTouched","setErrors","isTouched","setistouched","isValid","setOptions","setTitle","defaultDerived","newState","defaultTouch","address","temp_address","join","permanent_address","addData","predata","preTouch","handleRedirect","update","newimage","prev","handleDateChange","utils","formclass","field","defaultForm","productForm","ProductForm","Configs","googleMaps","center","lat","lng","defaultZoom","WrappedMap","withScriptjs","withGoogleMap","storeData","defaultCenter","location","store","storeId","coordinates","ProfileView","loadingElement","googleMapURL","containerElement","mapElement","profileForm","ProfileForm","Loader","LinearProgress","ProductView","products","handlePageChange","pageNumber","handlePageNumber","rowData","editable","columns","exportButton","onRowAdd","newData","addProduct","onRowUpdate","oldData","updateProduct","onRowDelete","MessageComponent","senderId","reciverId","recieverName","time","messages","users","runSocket","socket","on","emit","i","userid","selectUser","parse","io","msgContent","Moment","usrContent","Input","ProductCardDetail","productDetails","fetchDetails","gutterBottom","parseInt","Cart","direction","deleteCartItem","reduce","acc","Routes","exact","curriedProductReducer","produce","draft","action","allProducts","p","__id","mainCategories","subCategories","sub","selectedCategories","cat","subs","subCategory","attr","prod","Set","categories","filters","selectedMainCategory","initialState","isAuthenticated","progress","INITIAL_STATE","combineReducers","find","middleware","thunk","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","MomentUtils","containerId","draggable","hostname","match","ReactDOM","StylesProvider","injectFirst","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d2473472.chunk.js","sourcesContent":["import React from 'react';\r\nimport Link  from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Copyright:React.FC = () => {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\">\r\n          Copyright\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\nexport default Copyright;\r\n","const ValidateEmail = (email) => {\r\n  if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const validateForm = (key, state, options = {form:''}) => {\r\n  let errors = {\r\n    ...state.errors,\r\n    errorMessage: { ...state.errors.errorMessage },\r\n    isError: state.errors.isError,\r\n  };\r\n  switch (key) {\r\n    case 'username':\r\n      errors.errorMessage[key] =\r\n        state.data[key].length !== 0 ? '' : `${key} is required`;\r\n      break;\r\n    case 'email':\r\n      errors.errorMessage[key] = ValidateEmail(state.data[key])\r\n        ? ''\r\n        : 'invalid email';\r\n      break;\r\n    case 'password':\r\n      if(options.form && options.form   === 'login'){\r\n        errors.errorMessage[key] =\r\n        state.data[key].length !== 0 ? '' : `${key} is required`;\r\n        break;\r\n      }\r\n      errors.errorMessage[key] = state.data[key]\r\n        ? state.data[key].length <= 6\r\n          ? 'weak password'\r\n          : state.data['confirmPassword'].length > 6\r\n            ?\r\n             state.data['confirmPassword'] === state.data[key]\r\n            ? '' : 'passwords dont match'\r\n            : ''\r\n        : `${key} is required`\r\n      break;\r\n    case 'confirmPassword':\r\n      errors.errorMessage[key] = state.data[key]\r\n        ? state.data['password'] === state.data[key]\r\n          ? ''\r\n          : 'passwords dont match'\r\n        : `${key} is required`;\r\n      break;\r\n    default:\r\n      errors.errorMessage[key] = state.data[key] ? '' : `${key} is Required`;\r\n      break;\r\n  }\r\n  errors.isError =\r\n  Object.values(errors.errorMessage).filter((err) => err).length > 0;\r\n  return errors;\r\n};\r\n","export const setItem = (name,value) => {\r\n    localStorage.setItem(name,value)\r\n}\r\nexport const removeItem = (name) => {\r\n    localStorage.removeItem(name);\r\n}\r\n\r\nexport const getItem = (name) => {\r\n    return localStorage.getItem(name);\r\n}\r\n\r\nexport const clearStorage = () => {\r\n    localStorage.clear();\r\n}","import axios from 'axios';\r\nimport { getItem } from 'components/utils/localStorage/LocalStorage';\r\n\r\n\r\nconst http = axios.create({\r\n        baseURL:process.env.REACT_APP_BASE_URL,\r\n        responseType:'json'\r\n})\r\n\r\nconst httpHeaders = (isSecure) => {\r\n    let options = {\r\n        'Content-Type':'application/json'\r\n    }\r\n    if(isSecure){\r\n        options['Authorization'] = getItem('token');\r\n    }\r\n    return options;\r\n}\r\n\r\nconst get=(url,{params = {}} = {},isSecure = false) =>{\r\n\r\n    return new Promise((resolve,reject) => {\r\n        http.get(url, {\r\n            headers:httpHeaders(isSecure),\r\n            params\r\n        })\r\n        .then(response => {\r\n            resolve(response.data);\r\n        })\r\n        .catch(err => {\r\n            reject(err)\r\n        })\r\n    })\r\n} \r\n\r\nconst post = (url,data = {},{params = {}} = {},isSecure) =>{\r\n    return new Promise((resolve,reject) => {\r\n        http.post(url,data,{headers:httpHeaders(isSecure),params})\r\n        .then(response => {\r\n            resolve(response.data)\r\n        })\r\n        .catch(err => {\r\n            reject(err.response)\r\n        })\r\n    })\r\n}\r\n\r\nconst put = (url,data = {},{params = {}} = {},isSecure) =>{\r\n    return new Promise((resolve,reject) => {\r\n        http.put(url,data,{headers:httpHeaders(isSecure)})\r\n        .then(response => {\r\n            resolve(response.data)\r\n        })\r\n        .catch(err => {\r\n            reject(err.response)\r\n        })\r\n    })\r\n}\r\n\r\nconst remove = (url,isSecure) =>{\r\n    return new Promise((resolve,reject) => {\r\n        http.delete(url,{headers:httpHeaders(isSecure)})\r\n        .then(response => {\r\n            resolve(response.data)\r\n        })\r\n        .catch(err => {\r\n            reject(err.response)\r\n        })\r\n    })\r\n}\r\n\r\nconst uploadFile = (method,url,data,files) => {\r\n    return new Promise((resolve,reject) => {\r\n        const xhr = new XMLHttpRequest();\r\n        const formData = new FormData();\r\n        if(files && files.length){\r\n            formData.append('image',files[0],files[0].name);\r\n        }\r\n    \r\n        for (let key in data){\r\n            if(typeof data[key] === 'object'){\r\n                continue;\r\n            }\r\n            formData.append(key,data[key]);\r\n        }\r\n        xhr.onreadystatechange = () => {\r\n            if(xhr.readyState === 4){\r\n                console.log('req cycle compoleted',xhr.response);\r\n                if(xhr.status === 200){\r\n                    console.log('success')\r\n                    resolve(xhr.response)\r\n                }\r\n                else{\r\n                    reject(xhr.response)\r\n                }\r\n            }\r\n        }\r\n        xhr.open(method,url,true);\r\n        xhr.send(formData);\r\n    })\r\n\r\n}\r\n\r\nexport const axiosApi = {get,post,put,remove,uploadFile}","import {toast} from 'react-toastify';\r\n\r\nconst showSuccess = (msg:string) => {\r\n    toast.success(msg);\r\n}\r\nconst showInfo = (msg:string) => {\r\n    toast.info(msg);\r\n}\r\n\r\nconst showWarning = (msg:string) => {\r\n    toast.warn(msg);\r\n}\r\nconst showError = (msg:string) => {\r\n    toast.error(msg);\r\n}\r\n//handle error\r\nconst handleError = (error) => {\r\n    console.log(error)\r\n    let defaultMessage = 'something went wrong'\r\n    if(error && error.message){\r\n        defaultMessage = error.message;\r\n    }\r\n    if(error && error.data && error.data.message){\r\n        defaultMessage = error.data.message;\r\n    }\r\n    showError(defaultMessage);\r\n\r\n}\r\n\r\nexport default {\r\n    showSuccess,showWarning,showInfo,handleError\r\n}","import { axiosApi } from 'api/axios/axiosApi'\r\nimport { clearStorage, setItem } from 'components/utils/localStorage/LocalStorage'\r\nimport Snackbar from 'components/utils/notification/Snackbar'\r\nimport {LOGIN_FALIURE,LOGIN_REQUEST,LOGIN_SUCCESS,LOGOUT,SET_IS_LOADING} from './types'\r\nexport const login = (data) => dispatch => {\r\n    return new Promise((resolve,reject) =>{\r\n        dispatch({\r\n            type:LOGIN_REQUEST\r\n        })\r\n        dispatch(setLoading(true))\r\n        axiosApi.post('/auth/login', data ,{},true)\r\n        .then(data => {\r\n            Snackbar.showSuccess(`${data.user.username} Logged in Successfully`)\r\n            setItem('token',data.token) \r\n            setItem('user',JSON.stringify(data.user))\r\n            dispatch({\r\n                type:LOGIN_SUCCESS,\r\n                payload:data.user\r\n            })\r\n            resolve('success')\r\n        })\r\n        .catch(err => {\r\n            Snackbar.handleError(err);\r\n            dispatch({\r\n                type:LOGIN_FALIURE,\r\n                payload:err\r\n            })\r\n            reject('error');\r\n        })\r\n        .finally(() => {\r\n            dispatch(setLoading(false))\r\n        })\r\n    })\r\n}\r\n\r\n\r\n// const updateUser = (data) => dispatch => {\r\n//     //todo\r\n// }\r\n\r\nexport const logout = () => dispatch => {\r\n    clearStorage()\r\n    dispatch({type:LOGOUT})\r\n}\r\n\r\nconst setLoading = (payload) => ({\r\n    type: SET_IS_LOADING,\r\n    payload,\r\n  });\r\n\r\n\r\n","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FALIURE = 'LOGIN_FALIURE';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const SET_IS_LOADING = 'SET_IS_LOADING';","import React, { Component } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Link } from 'react-router-dom';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Copyright from './../../copyright/Copyright';\r\nimport { validateForm } from './validation/LoginValidation';\r\nimport './LoginComponent.scss';\r\nimport { IErrorState, IOptionsState } from './../interfaces/Interfaces';\r\nimport {\r\n  setItem,\r\n  removeItem,\r\n  getItem,\r\n} from 'components/utils/localStorage/LocalStorage';\r\nimport { connect } from 'react-redux';\r\nimport { login } from './../../../actions/user/authActions';\r\n\r\nconst useStyles: any = () => ({\r\n  paper: {\r\n    marginTop: '128px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: '4px',\r\n    backgroundColor: 'white',\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: '4px',\r\n  },\r\n  submit: {\r\n    margin: '8px 0 4px',\r\n  },\r\n  logging: {\r\n    margin: '8px 0 4px',\r\n    backgroundColor: 'green',\r\n  },\r\n});\r\ninterface IProps {\r\n  classes: any;\r\n  history: any;\r\n  location: any;\r\n  snack: {\r\n    message: string;\r\n    varient: string;\r\n    timeout: number;\r\n    open: boolean;\r\n  };\r\n  match: any;\r\n  loginUser: (data: IDataState) => any;\r\n  auth: any;\r\n}\r\n\r\ninterface IDataState {\r\n  username: String;\r\n  password: String;\r\n}\r\ninterface IState {\r\n  errors: IErrorState;\r\n  data: IDataState;\r\n  options: IOptionsState;\r\n  touched: ITouchState;\r\n}\r\n\r\ninterface ITouchState {\r\n  username: boolean;\r\n  password: boolean;\r\n}\r\nexport class Login extends Component<IProps, IState> {\r\n  state: IState = {\r\n    data: {\r\n      username: '',\r\n      password: '',\r\n    },\r\n    errors: {\r\n      errorMessage: {},\r\n      isError: false,\r\n    },\r\n    options: {\r\n      rememberMe: false,\r\n      isSubmitting: false,\r\n    },\r\n    touched: {\r\n      username: false,\r\n      password: false,\r\n    },\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    const {auth:{isLoggedin,isAuthorized},history} = this.props;\r\n    if(isLoggedin && isAuthorized){\r\n      history.push('/');\r\n    }\r\n    const username = getItem('username') || '';\r\n    const rememberMe = getItem('rememberMe') === 'true' ? true : false;\r\n    if (rememberMe && username) {\r\n      this.setState((prevState) => ({\r\n        ...prevState,\r\n        data: { ...prevState.data, username },\r\n        options: {\r\n          ...prevState.options,\r\n          rememberMe,\r\n        },\r\n      }));\r\n    }\r\n  }\r\n\r\n\r\n  handleChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n    //remember me\r\n    const { name, value, checked }: any = e.target;\r\n    if (name === 'rememberMe') {\r\n      this.setState(\r\n        (prevState) => ({\r\n          ...prevState,\r\n          options: {\r\n            ...prevState.options,\r\n            [name]: checked,\r\n          },\r\n        }),\r\n        () => {\r\n          if (this.state.options.rememberMe) {\r\n            setItem('rememberMe', this.state.options.rememberMe);\r\n            if (this.state.data.username) {\r\n              setItem('username', this.state.data.username);\r\n            }\r\n            return;\r\n          }\r\n          removeItem('username');\r\n          removeItem('rememberMe');\r\n        },\r\n      );\r\n      return;\r\n    }\r\n    this.setState(\r\n      (prevState) => ({\r\n        ...prevState,\r\n        data: { ...prevState.data, [name]: value },\r\n      }),\r\n      () => {\r\n        let errors = validateForm(name, this.state, { form: 'login' });\r\n        this.setState((prevState) => ({\r\n          ...prevState,\r\n          errors: {\r\n            ...prevState.errors,\r\n            errorMessage: { ...errors.errorMessage, loginError: '' },\r\n            isError: errors.isError,\r\n          },\r\n          touched: { ...prevState.touched, [name]: true },\r\n        }));\r\n      },\r\n    );\r\n  };\r\n\r\n  handleSubmit =  (e) => {\r\n    e.preventDefault();\r\n    const { history } = this.props;\r\n    this.setState(\r\n      (prevState) => ({\r\n        ...prevState,\r\n        options: {\r\n          ...prevState.options,\r\n          isSubmitting: true,\r\n        },\r\n      }),\r\n        () => {\r\n          this.props.loginUser(this.state.data)\r\n          .then(data => {\r\n                history.push(`/dashboard`)\r\n          })\r\n          .catch(err =>{\r\n            this.setState({...this.state,\r\n                    errors:{\r\n                      ...this.state.errors,\r\n                      errorMessage:{\r\n                        ...this.state.errors.errorMessage,\r\n                        'loginError':this.props.auth.errorMessage}}})\r\n          })\r\n        }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      options: { rememberMe },\r\n      errors: { isError, errorMessage },\r\n      touched,\r\n    } = this.state;\r\n    const { isSubmitting } = this.props.auth;\r\n    const submitButtonClass = isSubmitting\r\n      ? classes.submitting\r\n      : classes.submit;\r\n    const errorClass = isError ? '-error' : null;\r\n    const isInvalid =\r\n      isError ||\r\n      Object.values(touched).filter((data) => data === false).length !== 0;\r\n    return (\r\n      //table\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form\r\n            className={classes.form}\r\n            noValidate\r\n            onSubmit={this.handleSubmit}\r\n          >\r\n            <TextField\r\n              className={`form-field form-field${\r\n                errorMessage.username !== '' ? '-error' : null\r\n              }`}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              autoComplete=\"username\"\r\n              autoFocus\r\n              onChange={(e: any) => this.handleChange(e)}\r\n              error={errorMessage.username}\r\n            />\r\n            <Grid className=\"error-span\">\r\n              {errorMessage.username && errorMessage.username}\r\n            </Grid>\r\n            <TextField\r\n              className={`form-field form-field${errorClass}`}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(e: any) => this.handleChange(e)}\r\n              error={errorMessage.password}\r\n            />\r\n            <Grid className=\"error-span\">\r\n              {errorMessage.password} {errorMessage.loginError}\r\n            </Grid>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  name=\"rememberMe\"\r\n                  onChange={(e: any) => this.handleChange(e)}\r\n                  value=\"remember\"\r\n                  color=\"primary\"\r\n                  checked={rememberMe}\r\n                />\r\n              }\r\n              label=\"Remember me\"\r\n            />\r\n            {isSubmitting ? (\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={submitButtonClass}\r\n                disabled={isSubmitting}\r\n              >\r\n                Logging in...\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={submitButtonClass}\r\n                disabled={isInvalid}\r\n              >\r\n                Sign In\r\n              </Button>\r\n            )}\r\n            <Grid container>\r\n              <Grid item xs = {6} >\r\n                <Link to=\"/forgot\">\r\n                  <Typography variant=\"body2\" id=\"forgot-link\">\r\n                    Forgot password?\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n              <Grid item xs = {6}>\r\n                <Link to=\"/signup\">\r\n                  <Typography variant=\"body2\" id=\"forgot-link\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nconst mapDIspatchToProps = (dispatch) => ({\r\n  loginUser: (data) => dispatch(login(data)),\r\n});\r\n\r\nexport const LoginComponent = connect(\r\n  mapStateToProps,\r\n  mapDIspatchToProps,\r\n)(withStyles(useStyles)(Login));\r\n","import React, { Component } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Copyright from './../../copyright/Copyright';\r\nimport { validateForm } from './validation/LoginValidation';\r\nimport { IErrorState, IOptionsState } from './../interfaces/Interfaces';\r\nimport {Link} from 'react-router-dom';\r\nimport { axiosApi } from 'api/axios/axiosApi';\r\nimport snack from './../../utils/notification/Snackbar';\r\n\r\ninterface IProps {\r\n  classes: any;\r\n  history:any;\r\n}\r\n\r\ninterface IDataState {\r\n  firstName: String;\r\n  lastName: String;\r\n  username: String;\r\n  email: String;\r\n  password: String;\r\n  confirmPassword: String;\r\n}\r\n\r\ninterface ITouchState {\r\n  firstName: boolean;\r\n  lastName: boolean;\r\n  username: boolean;\r\n  email: boolean;\r\n  password: boolean;\r\n  confirmPassword: boolean;\r\n}\r\n\r\ninterface IState {\r\n  errors: IErrorState;\r\n  data: IDataState;\r\n  options: IOptionsState;\r\n  touched:ITouchState;\r\n}\r\n\r\nconst useStyles: any = () => ({\r\n  paper: {\r\n    marginTop: '128px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: '4px',\r\n    backgroundColor: 'white',\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: '4px',\r\n  },\r\n  submit: {\r\n    margin: '8px 0 4px',\r\n  },\r\n});\r\nclass SignupComponent extends Component<IProps, IState> {\r\n  state: IState = {\r\n    data: {\r\n      username: '',\r\n      password: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      confirmPassword: '',\r\n    },\r\n    errors: {\r\n      errorMessage: {},\r\n      isError: false,\r\n    },\r\n    options: {\r\n      rememberMe: false,\r\n      isSubmitting: false,\r\n    },\r\n    touched:{\r\n      username:false,\r\n      password:false,\r\n      firstName:false,\r\n      lastName:false,\r\n      email:false,\r\n      confirmPassword:false,\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n  }\r\n\r\n  handleChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n    const { name, value }: any = e.target;\r\n    this.setState(\r\n      (prevState) => ({\r\n        ...prevState,\r\n        data: { ...prevState.data, [name]: value },\r\n      }),\r\n      () => {\r\n        let errors = validateForm(name,this.state);\r\n        this.setState((prevState) => ({\r\n          ...prevState,\r\n          errors: {\r\n            ...prevState.errors,\r\n            errorMessage: errors.errorMessage,\r\n            isError: errors.isError,\r\n          },\r\n          touched: { ...prevState.touched,\r\n            [name]: true }\r\n        }));\r\n      },\r\n    );\r\n  };\r\n\r\n  handleSubmit = (e:React.FormEvent<HTMLInputElement>) => {\r\n    e.preventDefault();\r\n    const {email,password,username,firstName,lastName} = this.state.data\r\n    const {history} = this.props;\r\n    const data = {\r\n      name:firstName +' '+lastName,\r\n      username,\r\n      email,\r\n      password,\r\n    }\r\n\r\n    this.setState(\r\n      (prevState) => ({\r\n        ...prevState,\r\n        options:{\r\n          ...prevState.options,\r\n          isSubmitting: true\r\n        }   \r\n      }),\r\n      () => {\r\n        axiosApi.post('/auth/register',data,{},true)\r\n        .then((data:any) => {\r\n            snack.showSuccess(data.username + 'Registered Successfully') \r\n            setTimeout(() => {\r\n              history.push(`/login`)\r\n            },1000)  \r\n        })\r\n      .catch(err => {\r\n          snack.handleError(err);\r\n          this.setState({...this.state,\r\n            errors:{\r\n              ...this.state.errors,\r\n              errorMessage:{\r\n                ...this.state.errors.errorMessage,\r\n                'loginError':err.message}}})\r\n      })\r\n      .finally(() => {\r\n        this.setState({\r\n          ...this.state,\r\n          options:{...this.state.options,isSubmitting:false}})   \r\n         \r\n      }) \r\n      },\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      options: { isSubmitting},\r\n      errors: { isError, errorMessage },\r\n      touched,\r\n    } = this.state;\r\n    const submitButtonClass = isSubmitting\r\n      ? classes.submitting\r\n      : classes.submit;\r\n    const isInvalid = isError || Object.values(touched).filter(data => data === false).length !== 0;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit = {(e:any ) => this.handleSubmit(e)}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"fname\"\r\n                  name=\"firstName\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  onChange={(e: any) => this.handleChange(e)}\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                />\r\n                <Grid item className=\"error-span\">\r\n                  {errorMessage.firstName}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  onChange={(e: any) => this.handleChange(e)}\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  autoComplete=\"lname\"\r\n                />\r\n                <Grid item  className=\"error-span\">\r\n                  {errorMessage.lastName}\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  onChange={(e: any) => this.handleChange(e)}\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                />\r\n                <Grid item className=\"error-span\">\r\n                  {errorMessage.email}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  onChange={(e: any) => this.handleChange(e)}\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  autoComplete=\"username\"\r\n                />\r\n                <Grid item className=\"error-span\">\r\n                  {errorMessage.username}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  onChange={(e: any) => this.handleChange(e)}\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                />\r\n                <Grid item className=\"error-span\">\r\n                  {errorMessage.password}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  onChange={(e: any) => this.handleChange(e)}\r\n                  fullWidth\r\n                  name=\"confirmPassword\"\r\n                  label=\"Confirm Password\"\r\n                  type=\"password\"\r\n                  id=\"confirmPassword\"\r\n                  autoComplete=\"current-password\"\r\n                />\r\n                <Grid item className=\"error-span\">\r\n                  {errorMessage.confirmPassword}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\r\n                  }\r\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            {isSubmitting ?\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={submitButtonClass}\r\n              disabled={isSubmitting}>\r\n              Signing up...\r\n            </Button>\r\n            :<Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={submitButtonClass}\r\n              disabled={isInvalid}\r\n            >\r\n               Sign Up\r\n            </Button>\r\n            }\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link to=\"/login\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={5}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(useStyles)(SignupComponent);\r\n","import React from 'react'\r\nimport './NotFound.scss';\r\nimport { Typography } from '@material-ui/core';\r\nconst NotFound = () => {\r\n    return (\r\n        <div className ='not-found-container'>\r\n            <Typography variant = \"h3\">\r\n                404 not found\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React, { Component } from 'react';\r\nimport './Dashboard.scss';\r\ninterface IProps {\r\n  history: any;\r\n  match: any;\r\n  location: any;\r\n}\r\n\r\ninterface IState {}\r\n\r\nexport default class Dashboard extends Component<IProps, IState> {\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <div className=\"dashboard wrapper\">\r\n          <div className = 'navigation container'>\r\n              navigation bar\r\n          </div>\r\n        <div className = 'dash-item container'>dash1</div>\r\n        <div className = 'dash-item container'>dash2</div>\r\n        <div className = 'dash-item container'>dash3</div>\r\n        <div className = 'dash-item container'>dash4</div>\r\n        <div className = 'dash-item container '>dash5</div>\r\n        <div className = 'dash-item container '>dash6</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toggleTheme } from 'actions/app/appActions';\r\nimport './ThemeMode.scss';\r\n\r\nfunction Theme() {\r\n  const [selectedTheme, setTheme] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const theme = useSelector((state) => state.app.theme);\r\n  useEffect(() => {\r\n    const initTheme = () => {\r\n        if(theme === 'dark'){\r\n            setTheme(true);\r\n        }\r\n    };\r\n    initTheme();\r\n  }, [theme]);\r\n\r\n  useEffect(() => {\r\n    const switchTheme = () => {\r\n      document.body.classList.add(theme);\r\n    };\r\n    switchTheme();\r\n  }, [theme]);\r\n\r\n  const handletoggle = (e) => {\r\n    const {checked} = e.target;\r\n    setTheme(checked)\r\n    document.body.classList.remove(theme);\r\n    dispatch(toggleTheme());\r\n  };\r\n  return (\r\n    <label className = 'toggle-label'>\r\n      <input\r\n        className=\"toggle-checkbox\"\r\n        type=\"checkbox\"\r\n        onClick={handletoggle}\r\n        onChange = {() => {}}\r\n        checked = {selectedTheme}\r\n      ></input>\r\n      <div className=\"toggle-slot\">\r\n        <div className=\"sun-icon-wrapper\">\r\n          <div\r\n            className=\"iconify sun-icon\"\r\n            data-icon=\"feather-sun\"\r\n            data-inline=\"false\"\r\n          ></div>\r\n        </div>\r\n        <div className=\"toggle-button\"></div>\r\n        <div className=\"moon-icon-wrapper\">\r\n          <div\r\n            className=\"iconify moon-icon\"\r\n            data-icon=\"feather-moon\"\r\n            data-inline=\"false\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    </label>\r\n  );\r\n}\r\nexport default Theme;\r\n","import { SET_PROGRESS, TOGGLE_THEME } from \"./types\"\r\n\r\nexport const setProgress = (val) => dispatch => {\r\n    dispatch({\r\n        type:SET_PROGRESS,\r\n        payload:val\r\n    })\r\n}\r\nexport const toggleTheme = () => dispatch => {\r\n    dispatch({\r\n        type:TOGGLE_THEME\r\n    })\r\n}\r\n","export const SET_PROGRESS = 'SET_PROGRESS';\r\nexport const TOGGLE_THEME = 'TOGGLE_THEME';","import React, { useState, useEffect, useRef } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { Avatar, Icon, Typography } from '@material-ui/core';\r\nimport './OptionsTray.scss';\r\nimport { logout } from 'actions/user/authActions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Theme from 'components/common/Theme/Theme';\r\nfunction OptionsTray(props) {\r\n  \r\n  return (\r\n    <Navbar>\r\n      <NavItem icon={'favorite_border'} path = {'/favorites'}/>\r\n      <NavItem icon={'shopping_cart'} path = {'/cart'}/>\r\n      <NavItem icon={'person'}>\r\n        <DropdownMenu></DropdownMenu>\r\n      </NavItem>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <ul className=\"navbar-nav\">{props.children}</ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nfunction NavItem(props) {\r\n  const history = useHistory();\r\n  const cartItems = useSelector(state => state.cart.cartItems)\r\n  function handleNavigation(path) {\r\n    history.push(path);\r\n  }\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <ClickAwayListener onClickAway={() => setOpen(false)}>\r\n    <li className=\"nav-item\">\r\n      <button className=\"icon-button\" onClick={() => props.path ? handleNavigation(props.path):setOpen(!open)}>\r\n        <Icon>{props.icon}</Icon>\r\n      </button>\r\n      {props.path ==='/cart' && cartItems.length ?\r\n                <span className = \"cart-count\">{cartItems.length}</span> \r\n                :null\r\n      }      \r\n      {open && props.children}\r\n    </li>\r\n      </ClickAwayListener>\r\n  );\r\n}\r\n\r\nfunction DropdownMenu(props) {\r\n  const [activeMenu, setActiveMenu] = useState('main');\r\n  const [menuHeight, setMenuHeight] = useState(null);\r\n  const dropdownRef = useRef(null);\r\n  const history = useHistory();\r\n  const imageSrc = process.env.REACT_APP_IMAGE_URL;\r\n  const auth = useSelector(state => state.auth)\r\n const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setMenuHeight(dropdownRef.current?.firstChild.offsetHeight + 50);\r\n  }, []);\r\n\r\n  function calcHeight(el) {\r\n    const height = el.offsetHeight + el.firstChild.clientHeight;\r\n    setMenuHeight(height);\r\n  }\r\n\r\n  function handleLogout() {\r\n    dispatch(logout());\r\n    history.push('/login');\r\n  }\r\n\r\n  function handleNavigation(path) {\r\n    history.push(path);\r\n  }\r\n\r\n  function DropdownItem(props) {\r\n    return (\r\n      <span\r\n        className=\"menu-item\"\r\n        onClick={() =>\r\n          props.handleItemClick\r\n          ? props.handleItemClick()\r\n          : props.goToMenu && setActiveMenu(props.goToMenu)\r\n        }\r\n        >\r\n        {props.leftIconComponent ? (\r\n          <span className=\"icon-button\">\r\n            <span className=\"icon-left icon\">{props.leftIconComponent}</span>\r\n          </span>\r\n        ) : (\r\n          <span className=\"icon-button\">\r\n            <Icon className=\"icon-left\">{props.leftIcon}</Icon>\r\n          </span>\r\n        )}\r\n        {props.label && props.label}\r\n        {props.children}\r\n        <span className=\"icon-right\">\r\n          <Icon>{props.rightIcon}</Icon>\r\n        </span>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"dropdown\" style={{ height: menuHeight }} ref={dropdownRef}>\r\n      <CSSTransition\r\n        in={activeMenu === 'main'}\r\n        timeout={500}\r\n        classNames=\"menu-primary\"\r\n        unmountOnExit\r\n        onEnter={calcHeight}\r\n      >\r\n        <div className=\"menu\">\r\n          <DropdownItem\r\n            handleItemClick={() => handleNavigation('/profile')}\r\n            leftIconComponent={\r\n              <Avatar\r\n                alt={auth && auth.user.username}\r\n                src={`${imageSrc}/${auth && auth.user.image}`}\r\n                width={'20px'}\r\n                height={'20px'}\r\n              />\r\n            }\r\n          >\r\n            <span>\r\n              <Typography variant=\"h6\">{auth && auth.user.username}</Typography>\r\n              See your Profile\r\n            </span>\r\n          </DropdownItem>\r\n          <DropdownItem\r\n            leftIcon={'settings'}\r\n            rightIcon={'chevron_right'}\r\n            goToMenu=\"settings\"\r\n          >\r\n            Settings\r\n          </DropdownItem>\r\n          <DropdownItem\r\n            leftIcon={'brightness_medium'}\r\n            rightIcon={'chevron_right'}\r\n            goToMenu=\"displaySettings\"\r\n          >\r\n            Display Preferences\r\n          </DropdownItem>\r\n          <DropdownItem handleItemClick={handleLogout} leftIcon=\"logout\">\r\n            Logout\r\n          </DropdownItem>\r\n         </div>\r\n      </CSSTransition>\r\n\r\n      <CSSTransition\r\n        in={activeMenu === 'settings'}\r\n        timeout={500}\r\n        classNames=\"menu-secondary\"\r\n        unmountOnExit\r\n        onEnter={calcHeight}\r\n      >\r\n        <div className=\"menu\">\r\n          <DropdownItem goToMenu=\"main\" leftIcon={'chevron_left'}>\r\n            <h2>Profile</h2>\r\n          </DropdownItem>\r\n          <DropdownItem leftIcon={'settings'}>Setting 1</DropdownItem>\r\n          <DropdownItem leftIcon={'settings'}>Setting 2</DropdownItem>\r\n          <DropdownItem leftIcon={'settings'}>Setting 3</DropdownItem>\r\n          <DropdownItem leftIcon={'settings'}>Setting 4</DropdownItem>\r\n         \r\n        </div>\r\n      </CSSTransition>\r\n      <CSSTransition\r\n        in={activeMenu === 'displaySettings'}\r\n        timeout={500}\r\n        classNames=\"menu-secondary\"\r\n        unmountOnExit\r\n        onEnter={calcHeight}\r\n      >\r\n        <div className=\"menu\">\r\n          <DropdownItem goToMenu=\"main\" leftIcon={'chevron_left'}>\r\n            <h2>Profile</h2>\r\n          </DropdownItem>\r\n          <DropdownItem leftIcon={'settings'} label = 'Toggle Theme'><Theme/></DropdownItem>\r\n        </div>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   auth: state.auth,\r\n// });\r\n\r\n\r\nexport default (OptionsTray);\r\n","import { axiosApi } from 'api/axios/axiosApi';\r\nimport Snackbar from 'components/utils/notification/Snackbar';\r\nimport {\r\n  FETCH_CATEGORIES,\r\n  FETCH_SUBCATEGORIES,\r\n  FETCH_PRODUCTS,\r\n  FETCH_SEARCH_PRODUCTS,\r\n  SEARCH_PRODUCTS_ERROR,\r\n  FETCH_PRODUCTS_ERROR,\r\n  SET_IS_LOADING,\r\n  SET_PAGE_NUMBER,\r\n  SET_FILTER_CONDITION,\r\n  ADD_PRODUCT,\r\n  UPDATE_PRODUCT,\r\n  DELETE_PRODUCT,\r\n  SET_PRODUCT_ERROR,\r\n  FETCH_ATTRIBUTES,\r\n  FETCH_PRODUCT_DETAILS,\r\n  FETCH_ALL_PRODUCTS\r\n} from './types';\r\n\r\nexport const fetchDetails = (id) => async(dispatch) => {\r\n  try{\r\n    dispatch(setLoading(true))\r\n    const data = await axiosApi.get(`/product/details/${id}`)\r\n    dispatch({type:FETCH_PRODUCT_DETAILS,payload:data})\r\n  }\r\n  catch (err) {\r\n\r\n  }\r\n  finally{\r\n    dispatch(setLoading(false))\r\n  }\r\n}\r\n\r\nexport const fetchProducts = (perPage = 20, currentPage = 1) => (dispatch) => {\r\n  dispatch(setLoading(true));\r\n  axiosApi\r\n    .get(\r\n      '/product',\r\n      {\r\n        params: {\r\n          perPage,\r\n          currentPage,\r\n        },\r\n      },\r\n      true,\r\n    )\r\n    // axiosApi.get('/product',{params:{currentPage:pageNumber,perPage:pageSize}},true)\r\n    .then((data) => {\r\n      dispatch({\r\n        type: FETCH_PRODUCTS,\r\n        payload: data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      Snackbar.handleError(err);\r\n      dispatch({ type: FETCH_PRODUCTS_ERROR, payload: err });\r\n    })\r\n    .finally(() => {\r\n      dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\nexport const addProduct = (product,isSecure) => async(dispatch) =>{\r\n  // return new Promise((resolve,reject) => async(dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const data = await axiosApi.post('/product', product, isSecure);\r\n      dispatch({ type: ADD_PRODUCT, payload: data });\r\n      // resolve(data)\r\n    } catch (err) {\r\n      Snackbar.handleError(err);\r\n      // reject(err);\r\n    } finally {\r\n      dispatch(setLoading(false));\r\n    }\r\n  // })\r\n};\r\n\r\nexport const updateProduct = (product, isSecure) => async(dispatch) => {\r\n  // return new Promise((resolve,reject) => async(dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const data = await axiosApi.put(`/product/${product._id}`, product, isSecure);\r\n    dispatch({ type: UPDATE_PRODUCT, payload: data });\r\n    // resolve(data)\r\n  } catch (err) {\r\n    Snackbar.handleError(err);\r\n    // reject(err);\r\n  } finally {\r\n    dispatch(setLoading(false));\r\n  }\r\n// })\r\n};\r\n\r\nexport const deleteProduct = (id, isSecure) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const data = await axiosApi.delete(`/product/${id}`,{}, isSecure);\r\n    dispatch({ type: DELETE_PRODUCT, payload: data });\r\n    \r\n  } catch (err) {\r\n    Snackbar.handleError(err);\r\n  } finally {\r\n    dispatch(setLoading(false));\r\n  }\r\n};\r\n\r\nexport const searchProducts = (conditionData = {},options = {}) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    for (let key in conditionData) {\r\n      if (conditionData[key].length === 0) {\r\n        delete conditionData[key];\r\n      }\r\n    }\r\n    const data = await axiosApi.post(\r\n      '/product/search',\r\n      conditionData,\r\n      {params: {\r\n        ...options\r\n      },},\r\n      false,\r\n    );\r\n    dispatch({ type: FETCH_SEARCH_PRODUCTS, payload: data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: SEARCH_PRODUCTS_ERROR,\r\n      payload: err,\r\n    });\r\n  } finally {\r\n    dispatch(setLoading(false));\r\n  }\r\n};\r\n\r\nexport const fetchAllProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const data = await axiosApi.post(\r\n      '/product/search',\r\n      {},\r\n      {},\r\n      false,\r\n    );\r\n    dispatch({ type: FETCH_ALL_PRODUCTS, payload: data });\r\n    dispatch({type:FETCH_ATTRIBUTES});\r\n  } catch (err) {\r\n    dispatch({\r\n      type: SEARCH_PRODUCTS_ERROR,\r\n      payload: err,\r\n    });\r\n  } finally {\r\n    dispatch(setLoading(false));\r\n  }\r\n};\r\n\r\nexport const setFilterCondition = (key,condition,filterKey) => ({\r\n  type: SET_FILTER_CONDITION,\r\n  payload:{key,condition,filterKey}\r\n});\r\n\r\nexport const fetchCategories = () => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const data = await axiosApi.get('/product/categories', {}, {}, false);\r\n    dispatch({ type: FETCH_CATEGORIES, payload: data });\r\n  } catch (err) {\r\n    Snackbar.handleError(err);\r\n  } finally {\r\n    dispatch(setLoading(false));\r\n  }\r\n};\r\n\r\nexport const fetchSubCategories = () => ({ type: FETCH_SUBCATEGORIES });\r\nexport const fetchAttributes =() => (dispatch) => dispatch({type:FETCH_ATTRIBUTES});\r\nconst setLoading = (payload) => ({\r\n  type: SET_IS_LOADING,\r\n  payload,\r\n});\r\n\r\nexport const handlePageNumber = (pageNumber) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_PAGE_NUMBER,\r\n    payload: pageNumber,\r\n  });\r\n};\r\n\r\nexport const setProductError = (err) => dispatch => {\r\n  dispatch({\r\n    type:SET_PRODUCT_ERROR,\r\n    payload:err\r\n  })\r\n}\r\n","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\r\nexport const FETCH_SEARCH_PRODUCTS = 'SEARCH_PRODUCTS';\r\nexport const FETCH_PRODUCTS_ERROR = 'FETCH_PRODUCTS';\r\nexport const SEARCH_PRODUCTS_ERROR = \"SEARCH_PRODUCTS_ERROR\"\r\nexport const SET_IS_LOADING = 'SET_IS_LOADING';\r\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\r\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT';\r\nexport const SET_PRODUCT_ERROR = 'SET_PRODUCT_ERROR';\r\nexport const SET_PAGE_NUMBER = 'SET_PAGE_NUMBER';\r\n\r\nexport const FETCH_CATEGORIES = 'FETCH_CATEGORIES';\r\nexport const FETCH_SUBCATEGORIES = 'FETCH_SUBCATEGORIES';\r\n// export const SET_SELECTED_CATEGORIES = 'SET_SELECTED_CATEGORIES';\r\n// export const SET_SELECTED_SUBCATEGORIES = 'SET_SELECTED_SUBCATEGORIES';\r\nexport const SET_FILTER_CONDITION = 'SET_FILTER_CONDITION';\r\nexport const FETCH_ATTRIBUTES = 'FETCH_ATTRIBUTES';\r\nexport const FETCH_PRODUCT_DETAILS = 'FETCH_PRODUCT_DETAILS';\r\nexport const FETCH_ALL_PRODUCTS = 'FETCH_ALL_PRODUCTS';","import React, { useState, useEffect } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.scss';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles, Theme, fade, createStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport clsx from 'clsx';\r\nimport {useDispatch} from 'react-redux';\r\nimport OptionsTray from './optionsTray/OptionsTray';\r\nimport { fetchCategories } from 'actions/products/productActions';\r\n// import {ArrowBack} from '@material-ui/icons';\r\n\r\ninterface IHeaderLink {\r\n  name: string;\r\n  path: string;\r\n  iconName: string;\r\n}\r\n\r\ninterface IProps {\r\n  isLoggedin?: boolean;\r\n  // logout?:() => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\ncreateStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}),\r\n);\r\n\r\nconst Header: React.FC<IProps> = (props) => {\r\n  const classes = useStyles();\r\n  // const product = useSelector(state => state.product)\r\n  const dispatch = useDispatch();\r\n  const [toggle, settoggle] = useState(false);\r\n  // const {categories} = product;\r\n  // const [subCategory, setSubCategory] = useState([{}]);\r\n\r\n  const { isLoggedin } = props;\r\n  const headerLinks: IHeaderLink[] = [\r\n    { name: 'Home', path: '/', iconName: 'home' },\r\n    { name: 'Dashboard', path: '/dashboard', iconName: 'dashboard' },\r\n    { name: 'About', path: '/about', iconName: 'about' },\r\n    { name:'divider', path:'',iconName:''},\r\n    { name: 'Add Product', path: '/add-product', iconName: 'add' },\r\n    { name: 'My Store', path: '/my-products', iconName: 'store'},\r\n    { name: 'Messages', path: '/messages', iconName: 'chat'},\r\n  ];\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCategories())\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <AppBar color = 'transparent' className='header-wrapper'>\r\n        <Toolbar className=\"header-container\">\r\n          <>\r\n            {isLoggedin && (\r\n              <IconButton\r\n                edge=\"start\"\r\n                onClick={() => settoggle((cur: boolean) => !cur)}\r\n                className=\"menu-button\"\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n            )}\r\n            <div className = 'logo'>\r\n            <Typography variant=\"h6\" className=\"title\">\r\n              STORE\r\n            </Typography>\r\n            </div>\r\n            {/* <div className = 'search-container'>\r\n            <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n            </div>\r\n          </div> */}\r\n            {!isLoggedin ? (\r\n              <Grid className = 'default-header-auth container'>\r\n              <Link to=\"/login\">\r\n                <Button color=\"inherit\">Login</Button>\r\n              </Link>\r\n              <Link to=\"/signup\">\r\n              <Button color=\"inherit\">Sign Up</Button>\r\n              </Link>\r\n\r\n              </Grid>\r\n            ) : (\r\n              <OptionsTray/>\r\n            )}\r\n          </>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* //sidenav */}\r\n      {isLoggedin ? (\r\n        <div\r\n          className={clsx(classes.list, {\r\n            [classes.fullList]: 'top',\r\n          })}\r\n          role=\"presentation\"\r\n        >\r\n      \r\n          <SwipeableDrawer\r\n            className={`${classes.fullList} navbar-wrapper`}\r\n            anchor={'left'}\r\n            open={toggle}\r\n            onClose={() => settoggle(false)}\r\n            onOpen={() => settoggle(true)}\r\n          >\r\n            <div className ='wrapper'>\r\n            {headerLinks.map(({ name, path, iconName },index) => (\r\n              name === 'divider'?<Divider key ={name + index}/>:\r\n              <List key={name} className={`${classes.list} header-link`}>\r\n                <Link key ={name} to={path} onClick={() => settoggle(false)}>\r\n                  <ListItem>\r\n                    <ListItemIcon>\r\n                      <Icon>\r\n                        {iconName}\r\n                      </Icon>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={name} />\r\n                  </ListItem>\r\n                </Link>\r\n              </List>\r\n            ))}\r\n            </div>\r\n            {/* <ProductSearch category ={categories} allData ={allData}/> */}\r\n          </SwipeableDrawer>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\nexport default (Header)\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Header from 'components/header/Header';\r\nimport {connect} from 'react-redux';\r\n\r\nconst ProtectedRoutes = ({ component: Component, ...props }) => {\r\n  const {isLoggedin} = props.auth;\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={(props) => {\r\n        return <>{isLoggedin ? (\r\n            <>\r\n            <Header isLoggedin = {isLoggedin}/>\r\n            <div className = 'core-app-wrapper'>\r\n              <Component {...props}/>\r\n            </div>\r\n            </>\r\n            )\r\n            : (<Redirect to=\"/\" />)}\r\n            </>;\r\n      }}\r\n    ></Route>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) =>({\r\n  auth:state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(ProtectedRoutes);\r\n//todo  pass location of past page ","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Header from 'components/header/Header';\r\nimport { getItem } from 'components/utils/localStorage/LocalStorage';\r\n\r\nfunction PublicRoutes({ component: Component, ...props }) {\r\n  const isLoggedin = getItem('token') ? true : false;\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={(props) => (\r\n        <>\r\n          <Header isLoggedin={isLoggedin} />\r\n          <div className = 'core-app-wrapper'>\r\n          <Component {...props} />\r\n          </div>\r\n        </>\r\n      )}\r\n    ></Route>\r\n  );\r\n}\r\n\r\nexport default PublicRoutes;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport './ButtonComponent.scss'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nfunction ButtonComponent({type,color,handlesubmit,disabled = false ,options:{size,isSubmitting = false,icon,variantType},classname,value}) {\r\n  return (\r\n    <>\r\n    <Grid item xs = {6}>\r\n      {icon ?\r\n        <IconButton aria-label=\"edit\"\r\n        className={classname ||'btn'}\r\n        disabled={isSubmitting  }\r\n        onClick = {handlesubmit}\r\n        >\r\n          <Icon>\r\n            {icon}\r\n          </Icon>\r\n        </IconButton>\r\n        :\r\n      <Button\r\n        type = {type ||'submit'}\r\n        // fullWidth\r\n        variant={variantType || 'contained'}\r\n        color={'secondary'}\r\n        className={classname ||'button-default'}\r\n        disabled={isSubmitting}\r\n        onClick = {handlesubmit}\r\n        size = {size}\r\n\r\n      >\r\n        {isSubmitting ?'Submitting':value === 'Edit Product'?'Confirm Edit Product':value}\r\n      </Button>\r\n      }\r\n    </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ButtonComponent;\r\n","import { ListItemIcon, Typography } from '@material-ui/core';\r\nimport React, { useRef } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonComponent from '../Button/ButtonComponent';\r\nimport './CustomSelect.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setFilterCondition } from 'actions/products/productActions';\r\nfunction CustomSelect({ queryName, label, options, multiple, filterKey }) {\r\n  const dispatch = useDispatch();\r\n  const product = useSelector((state) => state.product);\r\n  const { filterCondition } = product;\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n  const [width, setWidth] = React.useState('0px');\r\n  const ref = useRef();\r\n  // const handleChange = (event) => {\r\n  //   setSelected(event.target.value);\r\n  // };\r\n\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setWidth(event.currentTarget.clientWidth);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChangeMultiple = (event, index) => {\r\n    if (selected.includes(options[index])) {\r\n      const ind = selected.indexOf(options[index]);\r\n      const oldSelected = [...selected];\r\n      oldSelected.splice(ind, 1);\r\n      setSelected(oldSelected);\r\n      return;\r\n    }\r\n    setSelected((pre) => [...pre, options[index]]);\r\n  };\r\n\r\n  //resize\r\n  React.useEffect(() => {\r\n    const resizeEvent = () => {\r\n      setWidth(ref.current.clientWidth + 'px');\r\n    }\r\n    function resize() {\r\n      window.addEventListener('resize',resizeEvent);\r\n    }\r\n    resize();\r\n    return () => {\r\n      window.removeEventListener('resize',resizeEvent);\r\n    };\r\n  }, []);\r\n\r\n  //for multiple\r\n  React.useEffect(() => {\r\n    const changeFilter = () => {\r\n      if (multiple && selected.length > 0) {\r\n        dispatch(setFilterCondition(queryName, selected, filterKey));\r\n      }\r\n    };\r\n    changeFilter();\r\n  }, [multiple,filterKey,queryName,selected]);\r\n\r\n  //for single\r\n  React.useEffect(() => {\r\n    const changeFilter = () => {\r\n      if (filterCondition.count === 0 && selectedIndex === 0) return;\r\n      if (!multiple) {\r\n        const conditionData = {};\r\n        if (queryName === 'sort') {\r\n          switch (options[selectedIndex]) {\r\n            case 'popularity':\r\n              conditionData[queryName] = 'desc';\r\n              conditionData['sortBy'] = 'loveCount';\r\n              break;\r\n            case 'low to high':\r\n              conditionData[queryName] = 'asc';\r\n              conditionData['sortBy'] = 'price';\r\n              break;\r\n            case 'high to low':\r\n              conditionData[queryName] = 'desc';\r\n              conditionData['sortBy'] = 'price';\r\n              break;\r\n            case 'relevance':\r\n              conditionData[queryName] = 'desc';\r\n              conditionData['sortBy'] = 'viewsCount';\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n        dispatch(setFilterCondition(queryName, conditionData, filterKey));\r\n      }\r\n    };\r\n    changeFilter();\r\n  }, [selectedIndex,filterCondition.count,multiple,filterKey,queryName]);\r\n\r\n  const selectedName = selected;\r\n  return (\r\n    <>\r\n      <List\r\n        className=\"product-search-container container\"\r\n        component=\"nav\"\r\n        aria-label=\"Sort settings\"\r\n      >\r\n        <ListItem\r\n          ref={ref}\r\n          button\r\n          className=\"custom-select-btn\"\r\n          onClick={handleClickListItem}\r\n        >\r\n          <ListItemText primary={label}></ListItemText>\r\n          <ListItemIcon className=\"arrows\">\r\n            <Icon>expand_more</Icon>\r\n          </ListItemIcon>\r\n        </ListItem>\r\n      </List>\r\n\r\n      {multiple ? (\r\n        <Menu\r\n          className=\"menu-main-wrapper\"\r\n          // id=\"lock-menu\"\r\n          elevation={0}\r\n          anchorEl={anchorEl}\r\n          getContentAnchorEl={null}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n          }}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n        >\r\n          <div className=\"menu-info\" style={{ width: `${width}` }}>\r\n            <div className=\"info-selected\">\r\n              <Typography variant=\"subtitle2\">\r\n                {selectedName.length} selected\r\n              </Typography>\r\n              <div className=\"selected-names-wrapper\">\r\n                {selectedName\r\n                  .slice(Math.max(selected.length - 3, 0))\r\n                  .map((item) => (\r\n                    <span className=\"selected-name-span\">{item}</span>\r\n                  ))}\r\n                {selectedName.length > 3 && (\r\n                  <span className=\"selected-name-span\">\r\n                    {selectedName.length - 3} more\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"clear-btn\">\r\n              <ButtonComponent\r\n                type=\"reset\"\r\n                handlesubmit={handleClear}\r\n                className=\"clear-filter\"\r\n                value=\"clear\"\r\n                options={{ isSubmitting: false, variantType: 'outlined' }}\r\n              />\r\n            </div>\r\n          </div>\r\n          {options &&\r\n            options.map((name, index) => (\r\n              <MenuItem\r\n                className={\r\n                  selectedName.includes(name)\r\n                    ? 'menu-item menu-item-selected selected-name-span'\r\n                    : 'menu-item'\r\n                }\r\n                key={name}\r\n                name={name}\r\n                onClick={(event) => handleChangeMultiple(event, index)}\r\n              >\r\n                {name}\r\n              </MenuItem>\r\n            ))}\r\n        </Menu>\r\n      ) : (\r\n        <Menu\r\n          className=\"menu-main-wrapper\"\r\n          id=\"lock-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          getContentAnchorEl={null}\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n          }}\r\n        >\r\n          {options.map((option, index) => (\r\n            <MenuItem\r\n              key={option}\r\n              style={{ width: `${width}` }}\r\n              className={\r\n                index === selectedIndex\r\n                  ? 'menu-item menu-item-selected'\r\n                  : 'menu-item'\r\n              }\r\n              selected={index === selectedIndex}\r\n              onClick={(event) => handleMenuItemClick(event, index)}\r\n            >\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomSelect;\r\n","import React ,{useMemo}from 'react';\r\nimport './ProductFilter.scss';\r\nimport CustomSelect from 'components/common/CustomSelect/CustomSelect';\r\nimport {useSelector} from 'react-redux';\r\nfunction ProductFilterComponent() {\r\n    const product = useSelector(state => state.product)\r\n    const {attributes:{category,brand}} = product;\r\n    const sortItems = useMemo(() => ['Relevance','Popularity', 'low to high', 'high to low'],[]);\r\n  return (\r\n    <div\r\n      className=\"product-search-wrapper\"\r\n    >\r\n        <CustomSelect filterKey = {'options'} queryName={'sort'} label = {'Sort'} options= {sortItems} multiple = {false}/>\r\n        <CustomSelect filterKey = {'filters'} queryName={'category'} label = {'Category'} options= {category} multiple = {true}/>\r\n        <CustomSelect filterKey = {'filters'} queryName={'brand'} label = {'Brand'} options= {brand} multiple = {true}/>\r\n        {/* <CustomSelect queryName = {'color'} label = {'Color'} options = {color} multiple = {false}/> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(ProductFilterComponent);\r\n","export const NumberWithCommas = (val) => {\r\n    return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}","import { axiosApi } from 'api/axios/axiosApi';\r\nimport Snackbar from 'components/utils/notification/Snackbar';\r\nimport {\r\n    CART_DELETE_ITEM,\r\n    CART_ADD_ITEM,\r\n  } from './types';\r\n\r\n  export const addToCart = (prodId,qty) =>async(dispatch) => {\r\n      try{\r\n        const data = await axiosApi.get('product/details/'+prodId,)\r\n        dispatch({\r\n            type:CART_ADD_ITEM,\r\n            payload:{\r\n                id:data._id,\r\n                name:data.name,\r\n                image:data.image,\r\n                price:data.price,\r\n                description:data.description,\r\n                quantity:data.quantity,\r\n                qty:qty||1}\r\n        })\r\n      }\r\n      catch(err){\r\n         Snackbar.handleError(err)   \r\n      }\r\n  }\r\n\r\n  export const deleteCartItem = (id) => async(dispatch) => {\r\n    try{\r\n      dispatch({\r\n          type:CART_DELETE_ITEM,\r\n          payload:id,\r\n      })\r\n    }\r\n    catch(err){\r\n       Snackbar.handleError(err)   \r\n    }\r\n    \r\n}","export const CART_ADD_ITEM = 'ADD_CART_ITEM';\r\nexport const CART_DELETE_ITEM = 'CART_DELETE_ITEM';","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { NumberWithCommas } from 'components/utils/numbers/numbers';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './ProductCard.scss';\r\nimport {useDispatch} from 'react-redux';\r\nimport { addToCart } from 'actions/cart/cartActions';\r\n\r\nexport default function ProductCard({ data }) {\r\n  // const classes = useStyles();\r\n  const imageurl = process.env.REACT_APP_IMAGE_URL;\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const handleDetailPage = () => \r\n    {\r\n        history.push(`details/${data._id}`)\r\n    }\r\n  return (\r\n    <Card className = 'product-card-container container'>\r\n      <CardActionArea>\r\n      <Box className='card-wrapper' onClick = {handleDetailPage}>\r\n      <Box className=\"card-background\">\r\n        <CardMedia\r\n          className=\"product-image\"\r\n          component=\"img\"\r\n          alt={data && data.name}\r\n          height=\"370\"\r\n          width=\"370\"\r\n          image={\r\n            data && data.image\r\n              ? `${imageurl}/${data && data.image}`\r\n              : 'https://commercial.bunn.com/img/image-not-available.png'\r\n          }\r\n          title={data && data.name}\r\n        />\r\n        <span className=\"brand\">{data && data.brand}</span>\r\n      </Box>\r\n      <CardContent className=\"card-info\">\r\n        {/* <span className=\"card-info-new\"> new</span> */}\r\n        <Box className=\"card-info-name\">\r\n          <Typography  variant=\"h5\" component=\"h2\">\r\n            {data && data.name}\r\n          </Typography>\r\n        </Box>\r\n        <Box className = 'price-wrapper'>\r\n        <Box className=\"card-info-price\">\r\n            <Typography component=\"span\">\r\n              Rs {NumberWithCommas(data ? data.price:0)}\r\n            </Typography>\r\n        </Box>\r\n        </Box>\r\n        </CardContent>\r\n      </Box>\r\n      </CardActionArea>\r\n        <CardActions className ='card-actions-wrapper'>\r\n          <Button className=\"love\">\r\n            <Icon>favorite_border</Icon>\r\n          </Button>\r\n          <Button className=\"buy\" onClick = {() => dispatch(addToCart(data._id))}>\r\n            <Icon>add_shopping_cart</Icon>\r\n            Add to Cart\r\n          </Button>\r\n        </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nfunction PaginationComponent({count,setPage,currentPage}) {\r\n    const handleChange = (event, value) => {\r\n      setPage(value);\r\n    };\r\n    return (\r\n        <Pagination count={count} page={currentPage} onChange={handleChange} color = 'primary' />\r\n    )\r\n}\r\n\r\nexport default PaginationComponent\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ProductCard from 'components/common/Cards/product/ProductCard';\r\nimport './ProductSearchComponent.scss';\r\nimport { searchProducts } from 'actions/products/productActions';\r\nimport PaginationComponent from 'components/common/Pagination/PaginationComponent';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nconst ProductSearchComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const product = useSelector((state) => state.product);\r\n  const { searchResults, searchCount, filterCondition, isLoading } = product;\r\n  const [currentPage, setPage] = useState(1);\r\n  const perPage = 100;\r\n\r\n  useEffect(() => {\r\n    const loadData = () => {\r\n      const conditionData = { ...filterCondition };\r\n      Object.keys(conditionData).forEach((key) =>\r\n        conditionData[key] === undefined ? delete conditionData[key] : {},\r\n      );\r\n      dispatch(searchProducts(conditionData, { currentPage, perPage }));\r\n    };\r\n    loadData();\r\n  }, [currentPage, perPage, filterCondition.count]);\r\n  return (\r\n    <>\r\n      {!isLoading && searchResults.length === 0 && (\r\n          <Grid container className =' no-products-found container' xs = {12}>No Products Found</Grid>\r\n        )}\r\n      <Grid container spacing={4} className=\"product-container\">\r\n        {isLoading &&\r\n          Array(10)\r\n            .fill('')\r\n            .map((val, index) => (\r\n              <Grid\r\n                item\r\n                className=\"grid-item-product\"\r\n                key={index}\r\n                xs={12}\r\n                sm={6}\r\n                md={4}\r\n                lg={3}\r\n              >\r\n                <Skeleton>\r\n                  <ProductCard data={val} />\r\n                </Skeleton>\r\n              </Grid>\r\n            ))}\r\n        {searchResults.length > 0 &&\r\n          searchResults.map((productData: any) => (\r\n            <Grid\r\n              item\r\n              className=\"grid-item-product\"\r\n              key={productData._id}\r\n              xs={12}\r\n              sm={6}\r\n              md={4}\r\n              lg={3}\r\n            >\r\n              <ProductCard data={productData} />\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n      {searchResults && searchResults.length > 0 && (\r\n        <Grid container spacing={4} className=\"pagination-container container\">\r\n          <PaginationComponent\r\n            currentPage={currentPage}\r\n            count={Math.ceil(searchCount / perPage)}\r\n            setPage={setPage}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductSearchComponent;\r\n","import { Grid } from '@material-ui/core';\r\nimport React from 'react'\r\nimport ProductFilterComponent from '../product/product-filter/ProductFilterComponent';\r\nimport ProductSearchComponent from '../product/product=search/ProductSearchComponent';\r\n\r\nfunction HomeComponent(props) {\r\n    return (\r\n                <Grid container className = 'all-products'>\r\n                    <ProductFilterComponent/>\r\n                    <ProductSearchComponent/>\r\n                </Grid>\r\n    )\r\n}\r\n\r\nexport default HomeComponent\r\n","import React , {useEffect,useState} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport './InputComponent.scss';\r\nfunction InputComponent({ type,name,label,error,handlechange,data,props}) {\r\n    const inputType = type === undefined ? 'string':`${type}`;\r\n    const [display, setdisplay] = useState(true)\r\n    const [currency,setCurrency] = useState(false);\r\n    const inputProps ={\r\n    startAdornment: <InputAdornment position=\"start\">{currency}</InputAdornment>,\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(Array.isArray(props.dependency)){\r\n                setdisplay(data[props.dependency[0]])\r\n        }\r\n        if(props.currency){\r\n            setCurrency(props.currency)\r\n        }\r\n    }, [data,props.currency,props.dependency,data[props.dependency[0]]])\r\n\r\n    return (\r\n        <>\r\n        <Grid item xs ={12} sm ={6} md ={4} key={name}>\r\n        <TextField\r\n              className = {`form-field form-field${error !== ''?'-error':null} form-field-${display?'show':'hide'}`}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id={name}\r\n              label={label}\r\n              name={name}\r\n              required={props.required || false}\r\n              type = {inputType}\r\n              autoComplete={name}\r\n              autoFocus\r\n              onChange={handlechange}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={currency? {...inputProps}:{}\r\n              }\r\n              value={data[name] ||''}\r\n            />\r\n            <Grid className = 'error-span'>{error}</Grid>\r\n        </Grid>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default InputComponent\r\n","import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport './FileUploadButton.scss'\r\nimport { Icon, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n  }),\r\n);\r\n\r\nconst FileUploadButton = ({name,label,value,props, handlechange,error }) => {\r\n  const classes = useStyles();\r\n  const imageUrl = process.env.REACT_APP_IMAGE_URL;\r\n\r\n  return (\r\n    <div className={classes.root +' '+'upload-button-wrapper'} key={name}>\r\n      <input\r\n        name={name}\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"contained-button-file\"\r\n        multiple={props.multiple || false}\r\n        type=\"file\"\r\n        onChange={handlechange}\r\n      />\r\n      <label htmlFor=\"contained-button-file\">\r\n        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n          <Icon>\r\n             add\r\n          </Icon>\r\n          {value &&\r\n          <img className = {`image-overlay ${props.round ?'image-overlay-round':null}`} src = {`${imageUrl}/${value}`}>\r\n          </img>\r\n        }\r\n        </Button>\r\n      </label>\r\n      <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"icon-button-file\"\r\n        type=\"file\"\r\n      />\r\n      \r\n      {!props.round && <Typography className = 'photo-info' variant = 'caption'>\r\n        {value ? typeof value === 'string'? value.split('-')[1] :value[0].name:'No Photo selected' }\r\n      </Typography>}\r\n      {/* <label htmlFor=\"icon-button-file\">\r\n        <IconButton\r\n          color=\"primary\"\r\n          aria-label=\"upload picture\"\r\n          component=\"span\"\r\n        >\r\n          <PhotoCamera />\r\n        </IconButton>\r\n      </label> */}\r\n    </div>\r\n  );\r\n};\r\nexport default FileUploadButton;\r\n","import React from 'react'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid  from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\nfunction CheckboxComponent({name,label,data,value,handlechange}) {\r\n    const classes = useStyles();\r\n    return (\r\n       <>\r\n       <Grid item xs ={12} key={name}>\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n        <FormControlLabel\r\n            control={<Checkbox className ='form-checkbox' checked={value} onChange={handlechange} inputProps={{ 'aria-label': 'secondary checkbox' }} name={name} />}\r\n            label={label}\r\n        />\r\n        </FormControl>\r\n       </Grid>\r\n       </>\r\n\r\n    )\r\n}\r\n\r\nexport default CheckboxComponent\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nexport default function MaterialUIPickers({name,label,value,handlechange}) {\r\n  return (\r\n      <Grid key ={name} container justify=\"space-around\">\r\n        <KeyboardDatePicker\r\n          name ={name}\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label={label}\r\n          format=\"DD/MM/YYYY\"\r\n          value={value|| null}\r\n          onChange={(e) => handlechange(e,name)}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n      </Grid>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      display: 'block',\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  }),\r\n);\r\n\r\nconst SelectComponent = ({name, label, value, props = {dependency:[],menuItems:[{key:'',value:''}]}, handleChange, data }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [display, setdisplay] = useState(true);\r\n  useEffect(() => {\r\n    if (Array.isArray(props.dependency)) {\r\n      setdisplay(data[props.dependency[0]]);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n     <Grid key ={name} container  className={`${classes.formControl} form-field-${\r\n            display ? 'show' : 'hide'\r\n          }`}>\r\n      <Grid item xs={3}/>\r\n      <Grid item xs={6}>\r\n        <FormControl\r\n          className={`${classes.formControl} form-field-${\r\n            display ? 'show' : 'hide'\r\n          }`}\r\n        >\r\n          <InputLabel id=\"demo-controlled-open-select-label\">\r\n            {label}\r\n          </InputLabel>\r\n          <Select\r\n            name={name}\r\n            labelId=\"demo-controlled-open-select-label\"\r\n            id=\"demo-controlled-open-select\"\r\n            open={open}\r\n            onClose={handleClose}\r\n            onOpen={handleOpen}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            defaultValue = {value || props.menuItems[0].key}\r\n          >\r\n            {/* <MenuItem value=\"none\">\r\n              <em>None</em>\r\n            </MenuItem> */}\r\n            {props.menuItems.map((item,index) => (\r\n              <MenuItem key ={index} value={item.key}>{item.value}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={3}/>\r\n    </Grid>\r\n    </>\r\n  );\r\n};\r\nexport default SelectComponent;\r\n","import moment from 'moment';\r\n\r\nfunction formatDate(date){\r\n    return moment(date).format(\"MMM Do YYYY\")\r\n}\r\n\r\nfunction formatSetDate(date){\r\n    return moment(date).format(\"YYYY/MM/DD\")\r\n}\r\n\r\nfunction formatTime(date){\r\n    return moment(date).format('hh:mm a')\r\n}\r\n\r\n\r\nexport default {\r\n    formatDate,formatTime,formatSetDate\r\n}","import React, { useState } from 'react';\r\nimport './ColorPicker.scss';\r\nfunction ColorPicker({\r\n  name,\r\n  label,\r\n  type,\r\n  value,\r\n  handlechange,\r\n  ...rest\r\n}) {\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const colors = {\r\n    aliceblue: '#f0f8ff',\r\n    antiquewhite: '#faebd7',\r\n    whitesmoke: '#f5f5f5',\r\n    darkred: '#8b0000',\r\n    crimson: '#dc143c',\r\n    red: '#ff0000',\r\n    midnightblue: '#191970',\r\n    mediumblue: '#0000cd',\r\n    dodgerblue: '#1e90ff',\r\n    cyan: '#00ffff',\r\n    gold: '#ffd700',\r\n    goldenrod: '#daa520',\r\n    yellow: '#ffff00',\r\n    darkgreen: '#006400',\r\n    lime: '#00ff00',\r\n    greenyellow: '#adff2f',\r\n    seagreen: '#2e8b57',\r\n    springgreen: '#00ff7f',\r\n    darkorange: '#ff8c00',\r\n    chocolate: '#d2691e',\r\n    coral: '#ff7f50',\r\n    purple: '#800080',\r\n    blueviolet: '#8a2be2',\r\n    fuchsia: '#ff00ff',\r\n    deeppink: '#ff1493',\r\n    hotpink: '#ff69b4',\r\n    lightpink: '#ffb6c1',\r\n    black: '#000000',\r\n    dimgray: '#696969',\r\n  };\r\n  const handleSelect = (color) => {\r\n    const e = { target: { name, type } };\r\n    if (selected.includes(color)) {\r\n      const ind = selected.indexOf(color);\r\n      const copy = [...selected];\r\n      copy.splice(ind, 1);\r\n      setSelected(copy);\r\n      return;\r\n    }\r\n    setSelected((pre) => [...pre, color]);\r\n    handlechange(e, selected);\r\n  };\r\n\r\n  return (\r\n    <div className=\"color-picker-container\">\r\n      <h3>Select Colors</h3>\r\n      <div className=\"select-list\">\r\n        {Object.entries(colors).map((data) => (\r\n          <span\r\n            name={name}\r\n            type={type}\r\n            value={selected}\r\n            style={{ backgroundColor: data[1] }}\r\n            className={\r\n              selected.includes(data[1])\r\n                ? 'color-picker-item color-picker-item-active'\r\n                : 'color-picker-item'\r\n            }\r\n            name={data[0]}\r\n            value={data[1]}\r\n            onClick={(event) => handleSelect(data[1])}\r\n          />\r\n        ))}\r\n      </div>\r\n      <h3>Selected Colors</h3>\r\n      <div className=\"selected-list\">\r\n        {selected.map((color) => (\r\n          <span\r\n            style={{ backgroundColor: color }}\r\n            className=\"color-picker-item\"\r\n            onClick={() => handleSelect(color)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColorPicker;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles, Grid } from '@material-ui/core';\r\nimport InputComponent from '../Input/InputComponent';\r\nimport ButtonComponent from '../Button/ButtonComponent';\r\nimport FileUploadButton from '../FileUploadButton/FileUploadButton';\r\nimport CheckboxComponent from '../Checkbox/CheckboxComponent';\r\nimport DatePicker from '../DatePicker/DatePicker';\r\nimport snack from './../../utils/notification/Snackbar';\r\nimport { axiosApi } from './../../../api/axios/axiosApi';\r\nimport SelectComponent from '../Select/SelectComponent';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport utils from 'components/utils/utils';\r\nimport { getItem } from 'components/utils/localStorage/LocalStorage';\r\nimport {connect} from 'react-redux';\r\nimport ColorPicker from '../ColorPicker/ColorPicker';\r\n\r\nconst useStyles = () =>\r\n  makeStyles({\r\n    paper: {\r\n      marginTop: '128px',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: '4px',\r\n      backgroundColor: 'white',\r\n    },\r\n    form: {\r\n      width: '100vw',\r\n      marginTop: '4px',\r\n    },\r\n    submit: {\r\n      margin: '8px 0 4px',\r\n    },\r\n  });\r\n\r\nconst FormBuilder = ({ url, className, formName, form, buttonTitle ,auth}) => {\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const classes = useStyles();\r\n  const [data, setdata] = useState({});\r\n  const [touched, setTouched] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [isTouched, setistouched] = useState(false);\r\n  const [options, setOptions] = useState({\r\n    isSubmitting: false,\r\n    isError: false,\r\n    isValid: false,\r\n  });\r\n  const [title,setTitle] = useState('');\r\n\r\n  const defaultDerived = (state) => {\r\n    const newState = {};\r\n    if (state === 'touched') {\r\n      form.forEach((item) => {\r\n        if (item.props?.required) {\r\n          newState[item.key] = false;\r\n        }\r\n      });\r\n    }\r\n    if (state === 'data') {\r\n      form.forEach((item) => {\r\n        if (item.type === 'boolean') {\r\n          newState[item.key] = false;\r\n        } else if (item.type === 'number') {\r\n          newState[item.key] = 0;\r\n        }\r\n        else if(item.type === 'array'){\r\n          newState[item.key] = []\r\n        }\r\n        else {\r\n          newState[item.key] = '';\r\n        }\r\n      });\r\n      if (params.id) {\r\n        newState['newimage'] = '';\r\n      }\r\n    }\r\n    if (state === 'error') {\r\n      form.forEach((item) => {\r\n        newState[item.key] = '';\r\n      });\r\n    }\r\n    return newState;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const defaultTouch = defaultDerived('touched');\r\n    const error = defaultDerived('error');\r\n    const data = defaultDerived('data');\r\n    setdata(data);\r\n    setTouched(defaultTouch);\r\n    setErrors(error);\r\n    if(formName === 'Product'){\r\n      let title = params.id ? `Edit ${formName}` : `Add ${formName}`;\r\n      setTitle(title);\r\n      if (params.id) {\r\n        axiosApi\r\n          .post(`${url}/search/`, { _id: params.id })\r\n          .then((response) => {\r\n            if (response.length) {\r\n              setdata({ ...data, ...response[0] });\r\n              return;\r\n            }\r\n            setdata(data);\r\n\r\n          })\r\n          .catch((err) => {\r\n            snack.handleError('unable to fetch data');\r\n            setdata(data);\r\n          });\r\n      }\r\n    }\r\n  }, [params.id,url,formName]);\r\n\r\n  useEffect(() => {\r\n    const defaultTouch = defaultDerived('touched');\r\n    const error = defaultDerived('error');\r\n    const data = defaultDerived('data');\r\n    setdata(data);\r\n    setTouched(defaultTouch);\r\n    setErrors(error);\r\n    if(formName === 'Profile'){\r\n      let title = `Update ${formName}`\r\n      setTitle(title);\r\n      axiosApi\r\n      .get(`${url}/${auth.user._id}`,{},auth.isAuthorized)\r\n      .then((response) => {\r\n          if(response.address){\r\n          response.temp_address = (response['address']['temp_address'] &&  response['address']['temp_address'].join(',')) || ''\r\n          response.permanent_address = (response['address']['permanent_address'] &&  response['address']['permanent_address']) || ''\r\n        }\r\n        setdata({ ...data, ...response});\r\n      })\r\n      .catch((err) => {\r\n        snack.handleError('unable to fetch data');\r\n        setdata(data);\r\n      });\r\n    }\r\n  }, [url,auth.user._id,formName,auth.isAuthorized,defaultDerived])\r\n\r\n\r\n\r\n  const handleChange = (e,addData) => {\r\n    let {name, value, type, checked, files } = e.target;\r\n    console.log({addData})\r\n    if (type === 'checkbox') {\r\n      value = checked;\r\n    }\r\n    if (type === 'file') {\r\n      value = files;\r\n    }\r\n    if(type === 'array') {\r\n      value = [...addData];\r\n    }\r\n\r\n    setdata((predata) => ({ ...predata, [name]: value }));\r\n    // let errors = validateProductForm(name,this.state);\r\n    // setErrors(preError => ({...preError,errors}))\r\n    form.forEach((item) => {\r\n      if (item.props?.required && item.key === name) {\r\n        setTouched((preTouch) => ({ ...preTouch, [name]: true }));\r\n      }\r\n    });\r\n    setistouched(Object.values(touched).filter((data) => !data).length === 0);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // setOptions((pre) => ({ ...pre, isSubmitting: true }));\r\n    if (data._id) {\r\n      update();\r\n      return;\r\n    } \r\n    else {\r\n      add();\r\n    }\r\n  };\r\n  const handleRedirect = () => {\r\n    if(formName === 'Profile'){\r\n      return;\r\n    }\r\n    if(formName === 'Product'){\r\n      history.push('/my-products');\r\n    }\r\n  }\r\n\r\n  const update = () => {\r\n    const files = data.newimage;\r\n    delete data.newimage;\r\n    setOptions((prev) => ({ ...prev, isSubmitting: true }));\r\n    axiosApi\r\n      .uploadFile(\r\n        'PUT',\r\n        `${process.env.REACT_APP_BASE_URL}${url}/${data._id}?token=${getItem(\r\n          'token',\r\n        )}`,\r\n        data,\r\n        files,\r\n      )\r\n      .then((data) => {\r\n        snack.showSuccess(`${formName} updated successfully`);\r\n        setOptions((prev) => ({ ...prev, isSubmitting: false }));\r\n        handleRedirect();\r\n      })\r\n      .catch((err) => {\r\n        snack.handleError(err);\r\n        setOptions((prev) => ({ ...prev, isSubmitting: false }));\r\n      });\r\n  };\r\n\r\n  const add = () => {\r\n    setOptions((prev) => ({ ...prev, isSubmitting: true }));\r\n    const files = data.image;\r\n    delete data.image;\r\n    if (files && files[0]) {\r\n      axiosApi\r\n        .uploadFile(\r\n          'POST',\r\n          `${process.env.REACT_APP_BASE_URL}${url}?token=${getItem('token')}`,\r\n          data,\r\n          files,\r\n        )\r\n        .then((data) => {\r\n          snack.showSuccess(`${formName} added successfully`);\r\n          setOptions((prev) => ({ ...prev, isSubmitting: false }));\r\n          handleRedirect();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          snack.handleError(err);\r\n          setOptions((prev) => ({ ...prev, isSubmitting: false }));\r\n        });\r\n    } else {\r\n      axiosApi\r\n        .post(url, data, {}, true)\r\n        .then((data) => {\r\n          snack.showSuccess(`${formName} added successfully`);\r\n          setOptions((prev) => ({ ...prev, isSubmitting: false }));\r\n          handleRedirect();\r\n         \r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          snack.handleError(err.data);\r\n          setOptions((prev) => ({ ...prev, isSubmitting: false }));\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (date, name) => {\r\n    const value = utils.formatSetDate(date);\r\n    setdata((predata) => ({ ...predata, [name]: value }));\r\n  };\r\n\r\n  const formclass = className || 'dynamic-form';\r\n  return (\r\n    <Container component=\"main\" className ='container'>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        {formName && (\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            {title}\r\n          </Typography>\r\n        )}\r\n        <form\r\n          className={`${classes.form} ${formclass}`}\r\n          noValidate\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <Grid container spacing={2}>\r\n            {form.map((field, index) =>\r\n              field.type === undefined || field.type === 'number' ? (\r\n                <InputComponent\r\n                  key={`${field.key}-${index}`}\r\n                  name={field.key}\r\n                  label={field.label}\r\n                  type={field.type}\r\n                  error={errors[field.key]}\r\n                  props={field.props}\r\n                  data={data}\r\n                  handlechange={handleChange}\r\n                />\r\n              ) : field.type === 'file' ? (\r\n                <FileUploadButton\r\n                  key={field.key + '-' +index}\r\n                  name={data._id && !data.image ? 'newimage' : field.key}\r\n                  label={data._id ? 'Update Photo' : field.label}\r\n                  value={data._id && !data.image ? data['newimage'] : data[field.key]}\r\n                  error={data._id ? errors['newimage'] : errors[field.key]}\r\n                  props={field.props}\r\n                  handlechange={handleChange}\r\n                />\r\n              ) : field.type === 'date' ? (\r\n                <DatePicker\r\n                  key={field.key + '-' + index}\r\n                  name={field.key}\r\n                  label={field.label}\r\n                  value={data[field.key]}\r\n                  error={errors[field.key]}\r\n                  handlechange={handleDateChange}\r\n                />\r\n              ) : field.type === 'boolean' ? (\r\n                <CheckboxComponent\r\n                  key={field.key + '-' + index}\r\n                  name={field.key}\r\n                  label={field.label}\r\n                  value={data[field.key] || false}\r\n                  data={data}\r\n                  handlechange={handleChange}\r\n                />\r\n              ) : field.type === 'select' ? (\r\n                <SelectComponent\r\n                  key={field.key + '-' + index}\r\n                  name={field.key}\r\n                  label={field.label}\r\n                  value={data[field.key]}\r\n                  props={field.props}\r\n                  data={data}\r\n                  handlechange={handleChange}\r\n                />\r\n              ) : field.type === 'array' ? (\r\n                <ColorPicker\r\n                  key={field.key + '-' + index}\r\n                  name={field.key}\r\n                  label={field.label}\r\n                  value={data[field.key]}\r\n                  props={field.props}\r\n                  type={field.type}\r\n                  handlechange={handleChange}\r\n                />):null,\r\n            )}\r\n            <ButtonComponent\r\n              classname={` btn btn-${className}`}\r\n              value={title}\r\n              options={options}\r\n              disabled = {isTouched}\r\n            />\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth:state.auth\r\n})\r\nexport default connect(mapStateToProps)(FormBuilder)\r\n","import React, { Component } from 'react';\r\nimport FormBuilder from 'components/common/FormBuilder/FormBuilder';\r\ninterface IProps {}\r\ninterface IState {\r\n}\r\nconst defaultForm = {\r\n  productForm:[\r\n    {key:'image',label:'Upload Photo',type:'file', props:{multiple:false}},\r\n    {key:'name',label:'Name',props:{required:true}},\r\n    {key:'price',label:'Price',type:'number',props:{required:true ,currency:'Rs' }},\r\n    {key:'category',label:'Category',props:{required:true}},\r\n    {key:'subCategory',label:'Sub Category',props:{required:true}},\r\n    {key:'sku',label:'Product ID',props:{}},\r\n    {key:'brand',label:'Brand',props:{}},\r\n    {key:'color',label:'Select Colors', type:'array', props:{}},\r\n    {key:'description',label:'Description',props:{}},\r\n    {key:'status',label:'Status',type:'select',props:{\r\n      menuItems:[{key:'avaliable',value:'avaliable'},{key:'out of stock',value:'out of stock'},{key:'booked',value:'booked'},{key:'sold',value:'sold'}]\r\n      }  \r\n    },\r\n    {key:'manuDate',label:'Manufactured Date', type:'date',props:{}},\r\n    {key:'expiryDate',label:'Expiry Date', type:'date',props:{}},\r\n    {key:'quantity',label:'Quantity',type:'number',props:{}},\r\n    {key:'unitOfMeasurement',label:'Unit of Measurement ',props:{}},\r\n    {key:'sizeValue',label:'Size',props:{dependency:'unitOfMeasurement'}},\r\n    {key:'discountedItem',label:'Discounted Item',type:'boolean',props:{}},\r\n    {key:'discountType',label:'Type of Discount',type:'select',props:{\r\n      dependency:['discountedItem'],menuItems:[{key:'percentage',value:'percentage'},{key:'amount',value:'amount'},{key:'quantity',value:'quantity'}]}},\r\n    {key:'discountValue',label:'Discount',type:'number',props:{dependency:['discountedItem','discountType']}},\r\n    {key:'offerDiscountType',label:'Type of Offer Discount',type:'select',props:{\r\n        dependency:['discountedItem'],\r\n        menuItems:[{key:'percentage',value:'percentage'},{key:'amount',value:'amount'},{key:'quantity',value:'quantity'}]\r\n      }  \r\n    },\r\n    {key:'offers',label:'Offer Name',props:{dependency:['discountedItem']}},\r\n    {key:'offerDiscount',label:'Offer Discount',type:'number',props:{dependency:['discountedItem','offerDiscountType']}},\r\n  ]\r\n};\r\n\r\n\r\nclass ProductForm extends Component<IProps> {\r\n  \r\n  render() {\r\n    return (\r\n      <>\r\n        <FormBuilder\r\n          url ={'/product'}\r\n          formName=\"Product\"\r\n          className ={'add'}\r\n          buttonTitle={'Product'}\r\n          form={defaultForm.productForm}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductForm;\r\n","const Configs = {\r\n    googleMaps:{\r\n        center:{lat:27.7172,lng:85.3240},\r\n        defaultZoom:10\r\n    }\r\n}\r\nexport default Configs\r\n\r\n","import Configs from 'configs/Configs';\r\nimport React from 'react';\r\nimport { GoogleMap,withScriptjs,withGoogleMap,Marker} from 'react-google-maps';\r\n\r\nfunction Map({storeData}) {\r\n    const {center,defaultZoom} = Configs.googleMaps;\r\n    // const [selected,setSelectedStore] = useState({})\r\n  return (\r\n    <GoogleMap defaultZoom={defaultZoom} defaultCenter={center}>\r\n        {storeData && storeData.location.map(store => \r\n        <Marker \r\n            key = {store.storeId}\r\n            position = {{lat:store.coordinates[0],lng:store.coordinates[1]}}\r\n        />)}\r\n    </GoogleMap>\r\n  );\r\n}\r\n//takes props googleMapsUrl loadingElement contaienrElement mapElement\r\nconst WrappedMap = withScriptjs(withGoogleMap(Map))\r\nexport default WrappedMap;\r\n","import WrappedMap from 'components/common/Map/Map'\r\nimport React from 'react'\r\n\r\nfunction ProfileView() {\r\n    return (\r\n        <div style = {{width:'100%',height:'500px'}}>\r\n             <WrappedMap\r\n                loadingElement= {<div style = {{height:'100%'}}> Loading ... </div>}\r\n                googleMapURL = {`${process.env.REACT_APP_GOOGLE_MAPS_URL}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`}\r\n                containerElement = {<div style = {{height:'100%'}}/>}\r\n                mapElement = {<div style = {{height:'100%'}}/>}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileView\r\n","import React, { Component } from 'react';\r\nimport FormBuilder from 'components/common/FormBuilder/FormBuilder';\r\nimport ProfileView from '../profile-view/ProfileView';\r\ninterface IProps {}\r\ninterface IState {\r\n}\r\nconst defaultForm = {\r\n  profileForm:[\r\n    {key:'image',label:'Upload Photo',type:'file', props:{multiple:false,round:true}},\r\n    {key:'username',label:'Shop Name',props:{}},\r\n    {key:'description',label:'Description',props:{}},\r\n    {key:'phone',label:'Phone',type:'number',props:{}},\r\n    {key:'temp_address',label:'Temporary Address',props:{dependency:['address'],type:'array'}},\r\n    {key:'permanent_address',label:'Permanent Address',props:{dependency:['address']}},\r\n    {key:'status',label:'Status',type:'select',props:{menuItems:[{key:'active',value:'active'},{key:'inactive',value:'inactive'}]}},\r\n    {key:'gender',label:'Gender',type:'select',props:{menuItems:[{key:'male',value:'male'},{key:'female',value:'female'},{key:'others',value:'others'}]}},\r\n  ]\r\n};\r\n\r\nclass ProfileForm extends Component<IProps> {\r\n  \r\n  render() {\r\n    return (\r\n      <>\r\n        <FormBuilder\r\n          url ={'/user'}\r\n          formName=\"Profile\"\r\n          className ={'edit'}\r\n          buttonTitle={'Profile'}\r\n          form={defaultForm.profileForm}\r\n        />\r\n        <ProfileView/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileForm;\r\n","import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\nconst Loader = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress color=\"secondary\" />\r\n    </div>\r\n  );\r\n}\r\nexport default Loader;","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MaterialTable from 'material-table';\r\nimport Loader from 'components/common/loader/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ButtonComponent from 'components/common/Button/ButtonComponent';\r\nimport './ProductView.scss';\r\nimport { connect,useDispatch,useSelector} from 'react-redux';\r\nimport {\r\n  addProduct,\r\n  deleteProduct,\r\n  fetchProducts,\r\n  handlePageNumber,\r\n  updateProduct,\r\n} from './../../../../actions/products/productActions';\r\nimport { Button } from '@material-ui/core';\r\n\r\nfunction ProductViewComponent(props) {\r\n  const dispatch = useDispatch(); \r\n  const product = useSelector(state => state.product)\r\n  // const {products} = product\r\n  const history = useHistory();\r\n  const imageurl = process.env.REACT_APP_IMAGE_URL;\r\n  const [columns, setColumns]: any = useState([\r\n    {\r\n      title: 'Edit All',\r\n      render: (rowData) => (\r\n        <ButtonComponent\r\n          handlesubmit={() => history.push(`/add-product/${rowData._id}`)}\r\n          color={'secondary'}\r\n          classname={'btn-edit btn-edit-round'}\r\n          options={{size:'medium',isSubmitting: false, icon: 'description',variantType:'contained' }}\r\n          type=\"button\"\r\n          value=\"Detailed Edit\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Photo',\r\n      field: 'image',\r\n      editable: 'never',\r\n      render: (rowData) => (\r\n        <img\r\n          style={{ height: 50, borderRadius: '5%' }}\r\n          src={`${imageurl}/${rowData.image}`}\r\n          alt={rowData.image}\r\n        />\r\n      ),\r\n    },\r\n    { title: 'Name', field: 'name' },\r\n    { title: 'Category', field: 'category' },\r\n    { title: 'Category', field: 'subCategory' },\r\n    { title: 'Price', field: 'price', type: 'numeric' },\r\n    { title: 'Manufactured Date', field: 'manuDate', type: 'date' },\r\n    { title: 'Expiry Date', field: 'expiryDate', type: 'date' },\r\n    { field: 'brand', title: 'Brand', props: {} },\r\n    { field: 'description', title: 'Description', props: {} },\r\n    { field: 'quantity', title: 'Quantity', type: 'numeric', props: {} },\r\n  ]);\r\n\r\n  const handleNext = () => {\r\n    const { currentPage, handlePageChange } = props;\r\n    let lastPage = 10;\r\n    //todo get total data/perPage\r\n    if (currentPage !== lastPage) {\r\n      handlePageChange(currentPage + 1);\r\n      dispatch(fetchProducts(currentPage));\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    const { currentPage, handlePageChange } = props;\r\n    if (currentPage !== 1) {\r\n      handlePageChange(currentPage - 1);\r\n      dispatch(fetchProducts(currentPage));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = (perPage = 5, currentPage = 1) => {\r\n    dispatch(fetchProducts(perPage, currentPage));\r\n  };\r\n\r\n  return props.isLoading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Grid container className = 'material-table-wrapper'>\r\n      {/* <Grid item xs ={12}>\r\n            <Typography> My Products</Typography>\r\n            </Grid> */}\r\n      <MaterialTable\r\n        title=\"My Products\"\r\n        columns={columns}\r\n        // data={query =>\r\n        //   new Promise((resolve, reject) => {\r\n        //     setisloading(true);\r\n        //     axiosApi.get(url,{params:{currentPage:pageNumber,perPage:pageSize}},true)\r\n        //     .then((res:any) => {\r\n        //       setData(data)\r\n        //       resolve({\r\n        //         data:[],\r\n        //         page:1,\r\n        //         totalCount:100,\r\n        //        })\r\n        //       setisloading(false);\r\n        //     })\r\n        //     .catch(err => {\r\n        //       reject();\r\n        //     })\r\n        //   })\r\n        // }\r\n        data={props.data}\r\n        options={{\r\n          exportButton: true,\r\n        }}\r\n        editable={{\r\n          onRowAdd: (newData) =>\r\n            new Promise((resolve, reject) => {\r\n              dispatch(addProduct(newData,true))\r\n              resolve();\r\n              // .then(data => {\r\n              //   resolve();\r\n              // })\r\n              // .catch(err => {\r\n              //   reject(err);\r\n              // })\r\n              // axiosApi.post(`${url}`,newData,{},true)\r\n              // .then((response:any) => {\r\n              //   const dataUpdate = [response,...data];\r\n              //   setData([...dataUpdate])\r\n              //   snack.showSuccess(`${newData.name} added successfully`);\r\n              //   resolve();\r\n              // }).catch(err => {\r\n              //   snack.handleError(err)\r\n              //   reject();\r\n              // })\r\n            }),\r\n          onRowUpdate: (newData: any, oldData: any) =>\r\n            new Promise((resolve, reject) => {\r\n              dispatch(updateProduct(newData,true))\r\n              resolve();\r\n              // axiosApi.put(`${url}/${newData._id}`,newData,{},true)\r\n              // .then((data:any) => {\r\n              //   const dataUpdate = [...data];\r\n              //   const index = oldData.tableData.id;\r\n              //   dataUpdate[index] = newData;\r\n              //   resolve();\r\n              // }).catch(err => {\r\n              //   console.log(err)\r\n              //   reject();\r\n              // })\r\n            }),\r\n          onRowDelete: (oldData: any) =>\r\n            new Promise((resolve, reject) => {\r\n              dispatch(deleteProduct(oldData._id,true))\r\n              resolve();\r\n              // .then(data => {\r\n              //   resolve()\r\n              // })\r\n              // .catch(err => {\r\n              //   reject();\r\n              // })\r\n              // axiosApi.remove(`${url}/${oldData._id}`,true)\r\n              // .then((response:any) => {\r\n              //   const dataDelete = [...data];\r\n              //   const index = oldData.tableData.id;\r\n              //   dataDelete.splice(index, 1);\r\n              //   setData([...dataDelete]);\r\n              //   snack.showSuccess(`${oldData.name} removed successfully`);\r\n              //   resolve();\r\n              // })\r\n              // .catch(err => {\r\n              //   snack.handleError(err.data)\r\n              //   reject();\r\n              // })\r\n            }),\r\n        }}\r\n      />\r\n      <Button onClick={handlePrevious}>Previous</Button>\r\n      <Button onClick={handleNext}>Next</Button>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoading: state.product.isLoading,\r\n  data: state.product.products,\r\n  perPage: state.product.perPage,\r\n  currentPage: state.product.currentPage,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchProducts: (perPage, currentPage) =>\r\n  dispatch(fetchProducts(perPage, currentPage)),\r\n  handlePageChange: (pageNumber) => dispatch(handlePageNumber(pageNumber)),\r\n});\r\n\r\nexport const ProductView = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(ProductViewComponent);\r\n","import React, { Component } from 'react';\r\nimport * as io from 'socket.io-client';\r\nimport { Box, Typography, Input, Button } from '@material-ui/core';\r\nimport './MessageComponent.scss';\r\nimport { getItem } from 'components/utils/localStorage/LocalStorage';\r\nimport Moment from './../../utils/utils'\r\nimport Snackbar from 'components/utils/notification/Snackbar';\r\nclass MessageComponent extends Component {\r\n  state = {\r\n    data: {\r\n      message: '',\r\n      senderId: '',\r\n      username: '',\r\n      reciverId: '',\r\n      recieverName: '',\r\n      time: '',\r\n    },\r\n    messages: [],\r\n    users: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.user = JSON.parse(getItem('user'));\r\n    this.socket = io(process.env.REACT_APP_SOCKET_URL);\r\n    this.runSocket();\r\n  }\r\n  componentWillUnmount() {\r\n      this.socket.emit('disconnect');\r\n  }\r\n\r\n  runSocket = () => {\r\n    this.socket.on('connect', () => {\r\n      console.log('connected to socket');\r\n    });\r\n    this.socket.emit('new-user',{username:this.user.username,name:this.user.name})\r\n    this.socket.on('rply-msg', (data) => {\r\n      const { messages } = this.state;\r\n      messages.push(data);\r\n      this.setState((pre) => ({\r\n        ...pre,\r\n        messages,\r\n      }));\r\n    });\r\n\r\n    this.socket.on('rply-msg-to', (data) => {\r\n      const { messages } = this.state;\r\n      messages.push(data);\r\n      this.setState((pre) => ({\r\n        ...pre,\r\n        data:{...pre.data,reciverId:data.senderId},\r\n        messages,\r\n      }));\r\n    });\r\n    this.socket.on('user',data => {\r\n      console.log(data,'users gettinhg')\r\n      let senderId;\r\n        data.forEach((user,i) => {\r\n          if(user.username === this.user.username){\r\n            senderId = user.id;\r\n          }\r\n        })\r\n        this.setState(prev =>({\r\n            ...prev,\r\n            data:{...prev.data,senderId},\r\n            users:data\r\n        }))\r\n    })\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      data: { ...prevState.data, [name]: value },\r\n    }));\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    console.log(this.state.data)\r\n    e.preventDefault();\r\n    if(!this.state.data.reciverId){\r\n      return Snackbar.showInfo('Please select user to send Message')\r\n    }\r\n    const data = {\r\n      ...this.state.data,\r\n    };\r\n    data.userid = this.user._id;\r\n    data.username = this.user.username;\r\n    data.time = new Date();\r\n    this.socket.emit('new-message', data);\r\n    this.setState(prev => ({\r\n      ...prev,\r\n      data:{...prev.data,message:''}\r\n    }))\r\n  };\r\n\r\n  selectUser = (user) => {\r\n      this.setState(prev => ({\r\n        ...prev,\r\n        data:{...prev.data,reciverId:user.id,\r\n        recieverName:user.username}\r\n      }))\r\n  }\r\n  render() {\r\n    const username = this.user && this.user.username\r\n    const { message } = this.state.data;\r\n    let msgContent = this.state.messages && this.state.messages.map((message,index) => {\r\n      return (\r\n        <li className={`message message-${ message.username && username === message.username?'right':'left'}`} key={index}>\r\n          <Typography variant=\"subtitle1\">{message.message}</Typography>\r\n          <Typography variant=\"subtitle2\">{message.username}</Typography>\r\n          <Typography variant=\"caption\">\r\n            <small> {Moment.formatDate(message.time)}</small>\r\n          </Typography>\r\n        </li>\r\n      );\r\n    });\r\n    let usrContent = this.state.users && this.state.users.map((user,index) => {\r\n        return (\r\n          <li className={`user `} key={index}>\r\n            <Typography onClick = {() => this.selectUser(user)} variant=\"subtitle2\">{user.username}</Typography>\r\n          </li>\r\n        );\r\n      });\r\n    return (\r\n      <Box className=\"messages-wrapper\">\r\n        <Box className=\"messages-container\">\r\n          <Box className=\"messages\">\r\n            <Typography variant=\"h5\">Messages</Typography>\r\n            <Box className=\"message-box\">\r\n                <ul>\r\n                    {msgContent}\r\n                </ul>\r\n            </Box>\r\n            <form className=\"message-control\" onSubmit={this.handleSubmit}>\r\n              <Input\r\n                name=\"message\"\r\n                value={message}\r\n                onChange={this.handleChange}\r\n                className=\"msg-input\"\r\n              ></Input>\r\n              <Button type=\"submit\">Send</Button>\r\n            </form>\r\n          </Box>\r\n          <Box className=\"users-list\">\r\n             \r\n            <Typography variant=\"h5\">Users</Typography>\r\n            <Box className=\"users-box\">\r\n            <ul>\r\n                  {usrContent}\r\n              </ul>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageComponent;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport  Icon from '@material-ui/core/Icon';\r\nimport './ProductCardDetail.scss';\r\nimport {useParams} from 'react-router-dom';\r\nimport {useSelector,useDispatch } from 'react-redux';\r\nimport { NumberWithCommas } from 'components/utils/numbers/numbers';\r\nimport { fetchDetails } from 'actions/products/productActions';\r\nimport Loader from 'components/common/loader/Loader';\r\nimport { addToCart } from 'actions/cart/cartActions';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems:'center',\r\n  },\r\n});\r\n\r\nexport default function ProductCardDetail(props) {\r\n  const classes = useStyles();\r\n  const imageurl = process.env.REACT_APP_IMAGE_URL;\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const {id}:any = params;\r\n  // const [data,setData]:any = React.useState({});\r\n  const data = useSelector(state => state.product.productDetails)\r\n  React.useEffect(() => {\r\n    fetchDetails(id);\r\n  },[id])\r\n\r\n  return (\r\n    data ?\r\n    <Box className={`${classes.root} card-detail-wrapper container`}>\r\n      {/* <CardActionArea> */}\r\n        <Box className=\"card-background\">\r\n          <Box className=\"gradient\" color=\"blue\"></Box>\r\n          <Box className=\"gradient\" color=\"green\"></Box>\r\n          <Box className=\"gradient\" color=\"orange\"></Box>\r\n          <Box className=\"gradient\" color=\"black\"></Box>\r\n          <Box className=\"gradient\" color=\"red\"></Box>\r\n        <CardMedia\r\n          className=\"product-image\"\r\n          component=\"img\"\r\n          alt={data.name}\r\n          height=\"350\"\r\n          width=\"350\"\r\n          image={\r\n            data.image\r\n              ? `${imageurl}/${data.image}`\r\n              : 'https://commercial.bunn.com/img/image-not-available.png'\r\n          }\r\n          title={data.name}\r\n        />\r\n        <span className ='brand'>\r\n          {data.brand && data.brand}\r\n        </span>\r\n        <Button className = 'love'>\r\n        <Icon>\r\n            favorite_border\r\n        </Icon>\r\n        </Button>\r\n        </Box>\r\n        <CardContent className=\"card-info\">\r\n          <Box className=\"card-name\">\r\n            <Typography gutterBottom variant=\"h4\">\r\n              {data.name}\r\n            </Typography>\r\n            <span className=\"new\"> new</span>\r\n          </Box>\r\n          <Box className=\"card-description\">\r\n            <Typography className = 'title-label' variant = 'h5'>\r\n              Product info\r\n            </Typography>\r\n            <Typography\r\n              className=\"title\"\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n              component=\"p\"\r\n            >\r\n              {data.description}\r\n            </Typography>\r\n          </Box>\r\n          <Box className=\"color-container\">\r\n          <Typography className = 'title-label' variant = 'h5'>\r\n              Colors\r\n            </Typography>\r\n            <Box className=\"colors\">\r\n              {/* <span className=\"color\" color=\"blue\"></span> */}\r\n              <span className=\"color active\" color=\"black\"></span>\r\n              <span className=\"color\" color=\"red\"></span>\r\n              <span className=\"color\" color=\"rose-gold\"></span>\r\n            </Box>\r\n          </Box>\r\n          <Box className=\"size-container\">\r\n            <Typography className = 'title-label' variant=\"h6\">size</Typography>\r\n            <Box className=\"sizes\">\r\n              <span className=\"size active\">pro</span>\r\n              <span className=\"size\">max</span>\r\n            </Box>\r\n          </Box>\r\n          <Box className=\"card-price\">\r\n            <Box className=\"price\">\r\n            <Button className=\"buy\" onClick = {() => dispatch(addToCart(data._id))}>\r\n            <Icon>add_shopping_cart</Icon>\r\n            Add to Cart\r\n          </Button>\r\n              <Typography className=\"currency title-label\" variant=\"h6\">\r\n                Rs\r\n              </Typography>\r\n              <Typography variant=\"h6\" color=\"textPrimary\" >\r\n                {NumberWithCommas(parseInt(data.price))}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </CardContent>\r\n      {/* </CardActionArea> */}\r\n    </Box>\r\n:<Loader/>);\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, CardMedia, Grid, Typography } from '@material-ui/core';\r\nimport { addToCart,deleteCartItem } from 'actions/cart/cartActions';\r\nimport './Cart.scss';\r\n\r\nfunction Cart() {\r\n  const imageurl = process.env.REACT_APP_IMAGE_URL;\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const { id, qty } = params;\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  useEffect(() => {\r\n    function addToCartInit(){\r\n      if (id) {\r\n        dispatch(addToCart(id, qty));\r\n      }\r\n    };\r\n    addToCartInit();\r\n  }, [id,qty]);\r\n\r\n  const handleCheckout = () => {\r\n    history.push('/signin?redirect=shipping');\r\n  };\r\n  return (\r\n      <>\r\n      <Typography variant=\"h5\">My Cart</Typography>\r\n      <Grid container direction=\"column\" className=\"cart\">\r\n      <Grid container className=\"cart-list \">\r\n        {cartItems &&\r\n          cartItems.map((item) => {\r\n            return (\r\n              <Grid item xs={12} className = 'cart-list-item container'>\r\n                <CardMedia\r\n                  className=\"cart-list-item-image\"\r\n                  component=\"img\"\r\n                  alt={item && item.description}\r\n                  height=\"100\"\r\n                  width=\"100\"\r\n                  image={\r\n                    item && item.image\r\n                      ? `${imageurl}/${item && item.image}`\r\n                      : 'https://commercial.bunn.com/img/image-not-available.png'\r\n                  }\r\n                  title={item && item.name}\r\n                />\r\n                <div className = 'cart-list-item-info'>\r\n                <Typography>\r\n                  Item:{item.name}\r\n                </Typography>\r\n                  <Typography>\r\n                  Price: Rs{item.price}\r\n                  </Typography>\r\n                </div>\r\n                <div className = 'cart-list-item-actions'>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  className=\"btn-delete \"\r\n                  onClick={() => dispatch(deleteCartItem(item.id))}\r\n                >\r\n                  Remove\r\n                </Button>\r\n                </div>\r\n              </Grid>\r\n            );\r\n          })}\r\n      </Grid>\r\n      {cartItems.length === 0 ? (\r\n        <Grid item className=\"cart-empty container\">\r\n          <Typography variant=\"h6\">Cart is Empty</Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => history.push('/')}\r\n          >\r\n            Shop Now\r\n          </Button>\r\n        </Grid>\r\n      ) : (\r\n        <div className=\"cart-checkout\">\r\n        <Grid item className='details' >\r\n          <Typography>Items in Cart : {cartItems.length}</Typography>\r\n          <Typography variant=\"h6\">\r\n            {' '}\r\n            Total : {cartItems.reduce((acc, item) => item.price + acc, 0)}\r\n          </Typography>\r\n         \r\n        </Grid>\r\n        <div className = 'cta'>\r\n          <Button className=\"btn btn-pay\" variant=\"contained\" color=\"primary\" onClick = {handleCheckout}>\r\n            Proceed To Checkout\r\n          </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport {LoginComponent} from 'components/auth/Login/LoginComponent';\r\nimport SignupComponent from 'components/auth/Login/SignupComponent';\r\nimport NotFound from 'components/NotFound/NotFound';\r\nimport Dashboard from 'components/dashboard/Dashboard';\r\nimport ProtectedRoutes from './protected/ProtectedRoutes';\r\nimport PublicRoutes from './public/PublicRoutes';\r\nimport HomeComponent from 'components/dashboard/home/HomeComponent';\r\nimport ProductForm from 'components/dashboard/product/product-form/ProductForm';\r\nimport ProfileForm from 'components/dashboard/profile/profile-form/ProfileForm';\r\nimport {ProductView} from 'components/dashboard/product/product-view/ProductView';\r\nimport ProductSearchComponent from 'components/dashboard/product/product=search/ProductSearchComponent';\r\nimport MessageComponent from 'components/dashboard/messages/MessageComponent';\r\nimport ProductCardDetail from 'components/common/Cards/product/ProductCardDetail';\r\nimport Cart from 'components/dashboard/cart/Cart';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <>\r\n      {/* <Header isLoggedin={isLoggedin}></Header> */}\r\n      <Switch>\r\n        <PublicRoutes exact path=\"/\" component = {HomeComponent}/>\r\n        <PublicRoutes path=\"/login\" component={LoginComponent} />\r\n        <PublicRoutes path=\"/signup\" component={SignupComponent} />\r\n        <ProtectedRoutes path ='/dashboard' component = {Dashboard}/>\r\n        <ProtectedRoutes path ='/add-product/:id' component = {ProductForm}/>\r\n        <ProtectedRoutes path ='/add-product' component = {ProductForm}/>\r\n        <ProtectedRoutes path ='/my-products' component = {ProductView}/>\r\n        <ProtectedRoutes path ='/messages' component = {MessageComponent}/>\r\n        <ProtectedRoutes path ='/profile' component = {ProfileForm}/>\r\n        <ProtectedRoutes path ='/cart/:id?' component = {Cart}/>\r\n        <PublicRoutes path = '/products/search/:category?/:subCategory?' component = {ProductSearchComponent}/>\r\n        <PublicRoutes path = '/details/:id'  component = {ProductCardDetail}/>\r\n        <PublicRoutes component={NotFound} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import produce from 'immer';\r\nimport {\r\n  FETCH_PRODUCTS,\r\n  FETCH_SEARCH_PRODUCTS,\r\n  FETCH_CATEGORIES,\r\n  FETCH_SUBCATEGORIES,\r\n  SET_IS_LOADING,\r\n  SET_PAGE_NUMBER,\r\n  SET_FILTER_CONDITION,\r\n  ADD_PRODUCT,\r\n  DELETE_PRODUCT,\r\n  UPDATE_PRODUCT,\r\n  FETCH_ATTRIBUTES,\r\n  FETCH_PRODUCT_DETAILS,\r\n  FETCH_ALL_PRODUCTS\r\n} from 'actions/products/types';\r\n\r\n\r\nconst initialState = {\r\n  allProducts:[],\r\n  products: [],\r\n  searchResults: [],\r\n  searchCount:0,\r\n  isLoading: false,\r\n  currentPage: 1,\r\n  perPage: 10,\r\n  categories: [],\r\n  subCategories: [],\r\n  filterCondition: {filters:{},options:{},count:0},\r\n  attributes: {},\r\n  productDetails: {},\r\n  mainCategories:[],\r\n  selectedMainCategory:'',\r\n};\r\n\r\n// export const productReducer = (state = initialState, action) => {\r\nconst productReducer = (draft, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PRODUCTS: {\r\n      draft.products = action.payload;\r\n      return;\r\n    }\r\n\r\n    case FETCH_ALL_PRODUCTS: {\r\n      draft.allProducts = action.payload;\r\n      return;\r\n    }\r\n\r\n    case FETCH_PRODUCT_DETAILS:\r\n      draft.productDetails = action.payload;\r\n      return;\r\n\r\n    case ADD_PRODUCT: {\r\n      draft.products.push(action.payload)\r\n      return;\r\n    }\r\n\r\n    case DELETE_PRODUCT: {\r\n      draft.products = draft.products.filter((p) => p.__id !== action.payload);\r\n      return;\r\n    }\r\n    case UPDATE_PRODUCT: {\r\n      draft.products = draft.products.map((product) => {\r\n        if (product._id === action.payload.__id) {\r\n          return action.payload;\r\n        }\r\n      })\r\n      return;\r\n    }\r\n\r\n    case SET_FILTER_CONDITION: {\r\n      draft.filterCondition[action.payload.filterKey][action.payload.key] = action.payload.condition\r\n      draft.filterCondition.count++;\r\n      return;\r\n    }\r\n\r\n    case FETCH_SEARCH_PRODUCTS: {\r\n      draft.searchResults = action.payload.data;\r\n      draft.searchCount = action.payload.count;\r\n      return;\r\n    }\r\n    case SET_IS_LOADING: {\r\n      draft.isLoading = action.payload;\r\n      return;\r\n    \r\n    }\r\n    case SET_PAGE_NUMBER: {\r\n      draft.currentPage = action.payload;\r\n      return;\r\n    }\r\n\r\n    case FETCH_CATEGORIES: {\r\n      draft.mainCategories = action.payload;\r\n      // draft.categories = action.payload;\r\n      return;\r\n    }\r\n\r\n    case FETCH_SUBCATEGORIES: {\r\n      let subCategories = [];\r\n      let sub = [];\r\n      draft.selectedCategories.forEach((cat) => {\r\n        let subs = draft.searchResults.filter((item) => item.category === cat);\r\n        subCategories = [draft.subCategories,subs];\r\n      });\r\n      subCategories.forEach((data) => {\r\n        if (data.subCategory && sub.includes(data.subCategory)) {\r\n        } else {\r\n          sub.push(data.subCategory);\r\n        }\r\n      });\r\n      draft.subCategories = subCategories;\r\n      return;\r\n    }\r\n\r\n    case FETCH_ATTRIBUTES: {\r\n      const attr = {};\r\n      const keys = ['brand','category','color','price'];\r\n      const products = draft.searchResults;\r\n      if(Object.keys(draft.filterCondition).length === 0){\r\n        products.filter(prod => {\r\n          for(let key in draft.filterCondition){\r\n            return draft.filterCondition[key].includes(prod[key])\r\n          }\r\n      })\r\n      }\r\n      products.forEach(prod => {\r\n        keys.forEach(key => {\r\n          if(prod[key] && attr[key] === undefined){\r\n            attr[key] = [prod[key]]\r\n          }\r\n          else if(prod[key]  && attr[key].indexOf(prod[key] === -1)){\r\n            attr[key].push(prod[key])\r\n          }\r\n        })\r\n      })\r\n      keys.forEach(key => {\r\n        attr[key] = [...new Set(attr[key])]\r\n      })\r\n      draft.attributes = attr;\r\n      return;\r\n    }\r\n    default:\r\n      return draft;\r\n  }\r\n};\r\n\r\nexport const curriedProductReducer = produce(productReducer,initialState);\r\n","import { getItem } from 'components/utils/localStorage/LocalStorage';\r\nimport {\r\n  LOGIN_FALIURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  SET_IS_LOADING\r\n} from './../actions/user/types';\r\n\r\nlet user = JSON.parse(getItem('user')) || {};\r\n\r\nconst initialState = {\r\n  user: user,\r\n  isAuthenticated: false,\r\n  isAuthorized:user && user.role ? true : false,\r\n  isSubmitting: false,\r\n  isLoggedin: user && user.role ? true : false,\r\n  errorMessage: '',\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        isSubmitting: true,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedin: true,\r\n        isSubmitting: false,\r\n        isAuthorized:true,\r\n        isAuthenticated:true,\r\n        user: action.payload,\r\n      };\r\n    case SET_IS_LOADING:\r\n      return {\r\n        ...state,\r\n        isSubmitting: action.payload,\r\n      };\r\n    case LOGIN_FALIURE:\r\n      return {\r\n        ...state,\r\n        isSubmitting: false,\r\n        errorMessage: action.payload,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n          ...state,\r\n          isAuthorized:false,\r\n          isAuthenticated:false,\r\n          isLoggedin:false,\r\n          user:{}\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { getItem, setItem } from 'components/utils/localStorage/LocalStorage';\r\nimport {SET_PROGRESS, TOGGLE_THEME} from './../actions/app/types';\r\n\r\nconst theme = getItem('theme') || 'light' \r\ndocument.body.classList.add(theme);\r\nconst initialState = {\r\n    theme:theme,\r\n    progress:false,\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case SET_PROGRESS: \r\n        return {\r\n            ...state,\r\n            progress:action.payload\r\n        }\r\n        case TOGGLE_THEME: \r\n        const theme = state.theme === 'light'?'dark':'light';\r\n        setItem('theme',theme);\r\n        return {\r\n            ...state,\r\n            theme\r\n        }\r\n        default :return state;\r\n    }\r\n}","import { CART_ADD_ITEM, CART_DELETE_ITEM } from 'actions/cart/types';\r\nconst INITIAL_STATE = {\r\n  cartItems: [],\r\n};\r\nexport const cartReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      const product = state.cartItems.find((p) => p.id === item.id);\r\n      if (product) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((p) => (p.id === item.id ? item : p)),\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        cartItems: [...state.cartItems, item],\r\n      };\r\n    case CART_DELETE_ITEM:\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems.filter(p => p.id !== action.payload)],\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {curriedProductReducer} from './productReducer';\r\nimport {authReducer} from './authReducer';\r\nimport {combineReducers} from 'redux';\r\nimport { appReducer } from './appReducer';\r\nimport {cartReducer} from './cartReducer';\r\n\r\nexport default combineReducers({\r\n    product:curriedProductReducer,\r\n    auth:authReducer,\r\n    app:appReducer,\r\n    cart:cartReducer,\r\n})\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './../reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware)),\r\n);\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport Routes from 'routes/Routes';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from 'store/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n          <Router>\r\n            <Routes />\r\n          </Router>\r\n        </MuiPickersUtilsProvider>\r\n        <ToastContainer containerId=\"an id\" draggable={false} />\r\n      </Provider>\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { StylesProvider } from '@material-ui/core/styles';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    // <Router>\r\n      <StylesProvider injectFirst>\r\n        <App />\r\n      </StylesProvider>,\r\n    // </Router>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}